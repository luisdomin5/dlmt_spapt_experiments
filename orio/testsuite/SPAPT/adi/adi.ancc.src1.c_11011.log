
====== START ORIO ======

----- begin reading the source file: adi.ancc.src1.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 6.052e+15
Number_of_Parameters = 20
Numeric_Parameters   = 16
Binary_Parameters    = 04
['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2']
[[1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 16, 32, 64, 128, 256, 512], [1, 16, 32, 64, 128, 256, 512], [1, 64, 128, 256, 512, 1024, 2048], [1, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 8, 32], [1, 8, 32], [1, 8, 32], [1, 8, 32], [False, True], [False, True], [False, True], [False, True]]

----- begin empirical tuning for problem size -----
 N = 512
 T = 64
Parameters: {'RT1_I2': [0, 3], 'RT1_I1': [0, 3], 'U1_I1': [0, 30], 'VEC2': [0, 2], 'SCR1': [0, 2], 'RT2_I2': [0, 3], 'T2_I2a': [0, 7], 'VEC1': [0, 2], 'SCR2': [0, 2], 'RT2_I1': [0, 3], 'T1_I1a': [0, 7], 'U2_I1': [0, 30], 'T1_I2': [0, 7], 'T2_I2': [0, 7], 'T2_I1': [0, 7], 'T1_I1': [0, 7], 'U2_I2': [0, 30], 'T1_I2a': [0, 7], 'T2_I1a': [0, 7], 'U1_I2': [0, 30]}
Parameter Range Values: {'RT1_I2': [1, 8, 32], 'RT1_I1': [1, 8, 32], 'U1_I1': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'VEC2': [False, True], 'SCR1': [False, True], 'RT2_I2': [1, 8, 32], 'T2_I2a': [1, 64, 128, 256, 512, 1024, 2048], 'VEC1': [False, True], 'SCR2': [False, True], 'RT2_I1': [1, 8, 32], 'T1_I1a': [1, 64, 128, 256, 512, 1024, 2048], 'U2_I1': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T1_I2': [1, 16, 32, 64, 128, 256, 512], 'T2_I2': [1, 16, 32, 64, 128, 256, 512], 'T2_I1': [1, 16, 32, 64, 128, 256, 512], 'T1_I1': [1, 16, 32, 64, 128, 256, 512], 'U2_I2': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T1_I2a': [1, 64, 128, 256, 512, 1024, 2048], 'T2_I1a': [1, 64, 128, 256, 512, 1024, 2048], 'U1_I2': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]}
Federov Sampling Multiplier: 20
ANOVA Steps: 4
Extra Experiments in Designs: 4
Design Multiplier: 1.5
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 1160 (does not spend evaluations)
Valid coordinates: 232/1160
Tested coordinates: 203063
Valid coordinates: 464/1160
Tested coordinates: 429698
Valid coordinates: 696/1160
Tested coordinates: 624530
Valid coordinates: 928/1160
Tested coordinates: 828424
Tested coordinates: 1000000
Valid coordinates: 1160/1160
Tested coordinates: 1029039
Valid/Tested configurations: 1160/1029039
Generated Search Space:
NULL
Full Model: ~ I(T1_I1 ^ 2) + I(T1_I2 ^ 2) + I(T1_I1a ^ 2) + I(T1_I2a ^ 2) + I(T2_I1 ^ 2) + I(T2_I2 ^ 2) + I(T2_I1a ^ 2) + I(T2_I2a ^ 2) + I(U1_I1 ^ 2) + I(U1_I2 ^ 2) + I(U2_I1 ^ 2) + I(U2_I2 ^ 2) + I(RT1_I1 ^ 2) + I(RT1_I2 ^ 2) + I(RT2_I1 ^ 2) + I(RT2_I2 ^ 2) + T1_I1 + T1_I2 + T1_I1a + T1_I2a + T2_I1 + T2_I2 + T2_I1a + T2_I2a + U1_I1 + U1_I2 + U2_I1 + U2_I2 + RT1_I1 + RT1_I2 + RT2_I1 + RT2_I2 + SCR1 + SCR2 + VEC1 + VEC2
Clean Info:
One-Level Factors: []
Two-Level Factors: ['SCR1', 'SCR2', 'VEC1', 'VEC2']
Three-Level Factors: ['RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)', 'SCR1', 'SCR2', 'VEC1', 'VEC2']
Three-Level Terms: ['(Intercept)', 'I(RT1_I1^2)', 'I(RT1_I2^2)', 'I(RT2_I1^2)', 'I(RT2_I2^2)', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2']
Model Quadratic: ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2']
Clean 2 Level Factors/Terms: ['SCR1', 'SCR2', 'VEC1', 'VEC2', '(Intercept)', 'SCR1', 'SCR2', 'VEC1', 'VEC2']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2', '(Intercept)', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2']
Updated Model Info: {'inverse': [], 'linear': ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I1 ^ 2) + I(T1_I2 ^ 2) + I(T1_I1a ^ 2) + I(T1_I2a ^ 2) + I(T2_I1 ^ 2) + I(T2_I2 ^ 2) + I(T2_I1a ^ 2) + I(T2_I2a ^ 2) + I(U1_I1 ^ 2) + I(U1_I2 ^ 2) + I(U2_I1 ^ 2) + I(U2_I2 ^ 2) + I(RT1_I1 ^ 2) + I(RT1_I2 ^ 2) + I(RT2_I1 ^ 2) + I(RT2_I2 ^ 2) + T1_I1 + T1_I2 + T1_I1a + T1_I2a + T2_I1 + T2_I2 + T2_I1a + T2_I2a + U1_I1 + U1_I2 + U2_I1 + U2_I2 + RT1_I1 + RT1_I2 + RT2_I1 + RT2_I2 + SCR1 + SCR2 + VEC1 + VEC2
Current Model: {'inverse': [], 'linear': ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 58 experiments
Design Formula: ~ I(T1_I1 ^ 2) + I(T1_I2 ^ 2) + I(T1_I1a ^ 2) + I(T1_I2a ^ 2) + I(T2_I1 ^ 2) + I(T2_I2 ^ 2) + I(T2_I1a ^ 2) + I(T2_I2a ^ 2) + I(U1_I1 ^ 2) + I(U1_I2 ^ 2) + I(U2_I1 ^ 2) + I(U2_I2 ^ 2) + I(RT1_I1 ^ 2) + I(RT1_I2 ^ 2) + I(RT2_I1 ^ 2) + I(RT2_I2 ^ 2) + T1_I1 + T1_I2 + T1_I1a + T1_I2a + T2_I1 + T2_I2 + T2_I1a + T2_I2a + U1_I1 + U1_I2 + U2_I1 + U2_I2 + RT1_I1 + RT1_I2 + RT2_I1 + RT2_I2 + SCR1 + SCR2 + VEC1 + VEC2
Starting "optFederov" run
Using Search Space:
NULL
Data Dimensions: [1] 1160   20

     T1_I1 T1_I2 T1_I1a T1_I2a T2_I1 T2_I2 T2_I1a T2_I2a U1_I1 U1_I2 U2_I1
30       6     0      5      0     6     2      0      1     0    25     0
33       0     3      5      6     1     2      0      6     0    26    19
44       3     1      0      2     3     1      0      6     0    19    13
67       2     0      2      6     0     5      0      4    13     0    11
79       0     1      0      1     0     5      6      3     0     7     0
97       0     3      3      2     1     2      2      5    29     0    12
103      3     4      6      5     6     3      0      1     0    24     0
114      0     2      1      4     3     1      6      5     0    27    27
157      5     1      0      5     2     0      6      0    29     0     0
167      2     6      1      6     0     4      3      6     0     0     0
179      6     2      5      5     1     6      3      0     0    29    15
222      2     4      3      5     0     0      0      2     0     3     0
228      4     0      5      0     2     6      5      5     0    28     1
232      1     6      0      5     6     3      0      4     0    26    15
245      6     5      0      0     0     6      3      6     0    14     3
256      0     5      4      3     5     4      0      4    13     0     0
266      1     5      0      6     5     6      6      0     0    15     0
284      0     1      2      1     1     3      0      2    18     0     0
302      4     3      6      3     2     6      5      4     0     8     0
305      4     6      3      6     0     0      0      2     0    19     1
334      3     2      3      4     3     5      1      0    28     0    29
342      6     3      0      6     0     6      5      6    27     0     1
366      2     3      6      3     3     3      1      0     3     0     0
377      3     4      2      0     0     4      6      6     0    13     7
382      6     2      4      3     6     5      0      6     0    12    17
453      3     6      4      4     0     2      5      5     0    28     0
457      1     0      6      5     6     0      4      3     5     0    23
465      1     0      0      4     6     6      0      6    28     0     0
469      5     2      0      5     6     6      6      4    16     0    29
485      2     4      3      3     4     6      3      5     0    12     0
487      0     0      6      2     1     5      6      5     0     1     0
496      3     4      0      0     5     0      0      3     3     0     0
528      0     6      4      0     2     6      2      0     0    18    16
626      1     1      1      6     0     3      2      0    28     0    12
634      0     6      0      0     5     2      4      3     0     3     0
656      6     0      0      4     3     2      3      2     0     9     0
664      5     6      6      6     3     3      0      3     0    29    16
665      5     0      4      3     6     2      6      5     0     0     6
673      2     6      4      0     2     6      4      6    16     0    16
835      5     0      3      4     2     6      3      5     3     0     0
854      6     3      4      5     4     2      4      4     4     0     8
866      4     1      6      5     3     0      3      5    21     0     0
899      0     1      6      2     0     3      4      2    16     0     2
906      6     0      0      2     1     0      3      3     1     0     0
914      1     2      4      6     6     0      0      6     0    29     1
928      5     0      0      0     2     3      6      6    14     0    26
961      6     5      4      4     0     0      4      0    14     0    15
999      6     6      0      4     4     1      6      1     0    17    28
1018     4     5      6      6     1     1      0      6    28     0     0
1025     2     0      1      6     2     1      6      0     9     0    15
1028     0     4      3      6     5     1      3      3     0    20     0
1032     0     0      1      6     4     4      3      6     0    12    28
1053     4     2      6      4     4     3      2      0     0    21     0
1065     4     0      6      0     3     6      3      4     0    17    26
1075     0     2      1      0     6     0      5      0     0    28    27
1111     2     3      4      0     5     1      6      3    29     0    18
1115     4     6      4      0     0     3      2      2     4     0    29
1126     1     4      1      5     1     4      6      2     0    15     0
     U2_I2 RT1_I1 RT1_I2 RT2_I1 RT2_I2 SCR1 SCR2 VEC1 VEC2
30       8      0      1      1      0    1    0    1    1
33       0      2      0      2      0    1    1    0    1
44       0      0      0      0      1    0    0    1    1
67       0      0      1      0      2    0    0    0    1
79      24      1      0      0      0    0    0    0    1
97       0      1      1      0      0    1    0    1    0
103     28      0      2      0      0    1    1    1    0
114      0      1      1      1      1    1    0    0    1
157     27      1      1      0      2    0    1    1    0
167     17      0      1      0      0    1    1    0    0
179      0      2      0      0      2    1    1    1    1
222      8      1      0      1      1    1    1    1    1
228      0      0      0      1      0    1    0    1    0
232      0      1      1      1      0    1    1    1    1
245      0      1      1      2      0    0    0    1    0
256     29      0      0      2      0    1    0    1    1
266      1      0      2      1      1    0    0    1    1
284     20      2      0      1      1    1    1    1    0
302     15      1      0      0      2    1    0    0    1
305      0      1      0      0      2    0    1    1    0
334      0      1      0      1      1    0    1    0    1
342      0      1      1      0      1    0    0    1    0
366      1      2      0      1      0    0    0    0    0
377      0      0      2      0      2    1    0    1    0
382      0      0      0      1      0    0    0    1    1
453     20      2      0      0      1    0    0    0    0
457      0      0      1      2      0    0    0    1    0
465      6      2      0      0      2    1    1    0    0
469      0      1      0      1      0    0    1    0    0
485      4      0      1      0      0    0    1    1    1
487     29      0      0      1      1    1    1    1    1
496     27      0      1      0      2    1    0    0    0
528      0      0      1      0      1    1    1    0    0
626      0      0      0      1      0    1    0    0    1
634     15      0      2      0      1    0    1    1    0
656      3      1      1      2      0    1    1    0    1
664      0      2      0      0      0    1    0    1    1
665      0      2      0      0      1    1    0    0    0
673      0      1      0      1      0    0    1    0    1
835     21      0      2      2      0    1    1    0    0
854      0      0      0      0      2    0    1    0    0
866     19      0      1      1      1    1    1    1    1
899      0      0      2      0      2    0    1    0    0
906     27      0      2      1      0    0    0    0    0
914      0      1      0      0      0    1    0    0    0
928      0      1      0      0      1    1    1    1    1
961      0      2      0      0      0    1    0    1    1
999      0      0      0      1      0    1    0    0    0
1018    14      0      2      1      0    0    0    0    1
1025     0      1      0      1      0    0    0    1    0
1028    29      2      0      0      2    0    0    0    0
1032     0      1      1      0      2    1    0    1    0
1053    15      1      0      1      1    1    0    0    0
1065     0      0      2      0      0    0    1    1    0
1075     0      0      1      0      0    0    0    1    1
1111     0      2      0      2      0    1    1    1    1
1115     0      1      1      2      0    1    1    1    1
1126    12      0      1      2      0    0    0    0    0

D-Efficiency Approximation: [1] 0.394

Measuring design of size 58
Current Design Names: ['T1_I1', 'T1_I2', 'T1_I1a', 'T1_I2a', 'T2_I1', 'T2_I2', 'T2_I1a', 'T2_I2a', 'U1_I1', 'U1_I2', 'U2_I1', 'U2_I2', 'RT1_I1', 'RT1_I2', 'RT2_I1', 'RT2_I2', 'SCR1', 'SCR2', 'VEC1', 'VEC2']
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		2036
        Multiplications: 	250
        Divisions: 		250
        Logical: 		0
        Reads: 			4096
        Writes: 		505
        Comparisons:		18
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 20m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 20m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=35 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 20m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=35 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: "timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  "
 --> CalledProcessError: Command 'timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 132, in search
    best_coord,best_perf,search_time,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 811, in searchBestCoord
    best_point, used_points = self.dopt_anova()

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 713, in dopt_anova
    step_data = self.dopt_anova_step(budget, trials, i)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 642, in dopt_anova_step
    design                 = self.measure_design(design)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 572, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 345, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 369, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: "timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 132, in search
    best_coord,best_perf,search_time,speedup = self.searchBestCoord(startCoord)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 811, in searchBestCoord
    best_point, used_points = self.dopt_anova()

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 713, in dopt_anova
    step_data = self.dopt_anova_step(budget, trials, i)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 642, in dopt_anova_step
    design                 = self.measure_design(design)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 572, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 345, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 489, in run
    perf_costs = self.__execute(perf_params)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 428, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/home/phrb/code/dlmt_spapt_experiments/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

returning from 'run': {}
Stored as a failed configuration
Final perf_costs: {}
Length of requested configs: 1
Code stats:
        Number of loops: 	25
        Max loop nest depth: 	6
        Additions: 		14555
        Multiplications: 	1954
        Divisions: 		1954
        Logical: 		0
        Reads: 			35145
        Writes: 		7835
        Comparisons:		25
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 20m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=35 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
