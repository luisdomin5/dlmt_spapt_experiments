
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84417
Valid coordinates: 3520/17600
Tested coordinates: 168681
Valid coordinates: 5280/17600
Tested coordinates: 249126
Valid coordinates: 7040/17600
Tested coordinates: 333519
Valid coordinates: 8800/17600
Tested coordinates: 416083
Valid coordinates: 10560/17600
Tested coordinates: 500072
Valid coordinates: 12320/17600
Tested coordinates: 587969
Valid coordinates: 14080/17600
Tested coordinates: 673206
Valid coordinates: 15840/17600
Tested coordinates: 755829
Valid coordinates: 17600/17600
Tested coordinates: 838353
Valid/Tested configurations: 17600/838353
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1253     1    1   11    7   28   2   0    0    5
1456     5    6    7    0   17   0   0    4    2
1646     8   11    0   11    0  17   0    2    4
2238    11    1   11    4   29  10   0    2    2
3022     0   10    0   11   13   0   2    0    0
3053     1    0    8    6    0   0   0    4    0
3525     6    4    0    7   12   0  29    2    5
4530     0    2    4   11   16   0  19    2    3
5849     0    8    4    8   16  27   0    5    2
6874    11    4    0    8   29   0  16    5    0
8794     5    0    0   11   29   9   0    5    2
11605    4    0   11    9   10   0  19    5    1
11807    2   11    4    0   26   0  10    2    5
12671    6    8    9    0    0   0  14    0    1
13715    1    6   11    9   29  28   0    2    2
13942    3    0    6    6   17  17   0    0    0
14726    7    0    0    0   25  28   0    2    1
14980    4    4    6   11   29   0  29    1    0
15334    0    5   11    0   13  17   0    5    0
16427   11   11   11    0   18   0  29    5    1
17127   11    4   11   11   10  29   0    0    5
17540    0    0    0    0    0   0  29    0    4

D-Efficiency Approximation: [1] 0.3799624

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1560
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2802
        Writes: 		326
        Comparisons:		14
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.623496
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1024
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1818
        Writes: 		215
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.216923
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		5057
        Multiplications: 	1564
        Divisions: 		0
        Logical: 		0
        Reads: 			7954
        Writes: 		831
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.888584
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		989
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1808
        Writes: 		240
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.309176
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		69
        Multiplications: 	16
        Divisions: 		0
        Logical: 		0
        Reads: 			159
        Writes: 		38
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582247
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		167
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			401
        Writes: 		55
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58745
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3783
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6437
        Writes: 		676
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.913181
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1747
        Multiplications: 	580
        Divisions: 		0
        Logical: 		0
        Reads: 			3045
        Writes: 		340
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.695071
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3684
        Multiplications: 	1220
        Divisions: 		0
        Logical: 		0
        Reads: 			6295
        Writes: 		688
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.683377
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		7893
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			12037
        Writes: 		1247
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.334596
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2599
        Multiplications: 	860
        Divisions: 		0
        Logical: 		0
        Reads: 			4485
        Writes: 		503
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.864143
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		9974
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15306
        Writes: 		1560
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.770184
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2654
        Multiplications: 	880
        Divisions: 		0
        Logical: 		0
        Reads: 			4558
        Writes: 		498
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.961315
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		179
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			418
        Writes: 		54
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582309
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		2090
        Multiplications: 	680
        Divisions: 		0
        Logical: 		0
        Reads: 			3651
        Writes: 		440
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582226
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		233
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			522
        Writes: 		96
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.588648
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		874
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1621
        Writes: 		223
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.156341
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1052
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			2024
        Writes: 		247
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.665735
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		518
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1168
        Writes: 		161
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.535918
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		14499
        Multiplications: 	4356
        Divisions: 		0
        Logical: 		0
        Reads: 			21915
        Writes: 		2226
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.383657
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		13770
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20633
        Writes: 		2115
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.271651
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		145
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			339
        Writes: 		40
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684465
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1253     1    1   11    7   28   2   0    0    5  4.623496
1456     5    6    7    0   17   0   0    4    2  3.216923
1646     8   11    0   11    0  17   0    2    4  3.888584
2238    11    1   11    4   29  10   0    2    2  4.309176
3022     0   10    0   11   13   0   2    0    0  4.582247
3053     1    0    8    6    0   0   0    4    0  4.587450
3525     6    4    0    7   12   0  29    2    5  3.913181
4530     0    2    4   11   16   0  19    2    3  4.695071
5849     0    8    4    8   16  27   0    5    2  4.683377
6874    11    4    0    8   29   0  16    5    0  6.334596
8794     5    0    0   11   29   9   0    5    2  6.864143
11605    4    0   11    9   10   0  19    5    1  4.770184
11807    2   11    4    0   26   0  10    2    5  3.961315
12671    6    8    9    0    0   0  14    0    1  4.582309
13715    1    6   11    9   29  28   0    2    2  4.582226
13942    3    0    6    6   17  17   0    0    0  4.588648
14726    7    0    0    0   25  28   0    2    1  3.156341
14980    4    4    6   11   29   0  29    1    0  3.665735
15334    0    5   11    0   13  17   0    5    0  5.535918
16427   11   11   11    0   18   0  29    5    1  5.383657
17127   11    4   11   11   10  29   0    0    5  5.271651
17540    0    0    0    0    0   0  29    0    4  4.684465

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1253     1    1   11    7   28   2   0    0    5  4.623496
1456     5    6    7    0   17   0   0    4    2  3.216923
1646     8   11    0   11    0  17   0    2    4  3.888584
2238    11    1   11    4   29  10   0    2    2  4.309176
3022     0   10    0   11   13   0   2    0    0  4.582247
3053     1    0    8    6    0   0   0    4    0  4.587450
3525     6    4    0    7   12   0  29    2    5  3.913181
4530     0    2    4   11   16   0  19    2    3  4.695071
5849     0    8    4    8   16  27   0    5    2  4.683377
6874    11    4    0    8   29   0  16    5    0  6.334596
8794     5    0    0   11   29   9   0    5    2  6.864143
11605    4    0   11    9   10   0  19    5    1  4.770184
11807    2   11    4    0   26   0  10    2    5  3.961315
12671    6    8    9    0    0   0  14    0    1  4.582309
13715    1    6   11    9   29  28   0    2    2  4.582226
13942    3    0    6    6   17  17   0    0    0  4.588648
14726    7    0    0    0   25  28   0    2    1  3.156341
14980    4    4    6   11   29   0  29    1    0  3.665735
15334    0    5   11    0   13  17   0    5    0  5.535918
16427   11   11   11    0   18   0  29    5    1  5.383657
17127   11    4   11   11   10  29   0    0    5  5.271651
17540    0    0    0    0    0   0  29    0    4  4.684465

Clean encoded design, with measurements:
      T1_Ie T1_Je T2_Ie T2_Je       U1_Ie       U_Ie       U_Je RT_Ie RT_Je
1253   -0.8  -0.8   1.2   0.4  1.00000000 -0.8571429 -1.0000000  -1.0   1.5
1456    0.0   0.2   0.4  -1.0  0.21428571 -1.0000000 -1.0000000   1.0   0.0
1646    0.6   1.2  -1.0   1.2 -1.00000000  0.2142857 -1.0000000   0.0   1.0
2238    1.2  -0.8   1.2  -0.2  1.07142857 -0.2857143 -1.0000000   0.0   0.0
3022   -1.0   1.0  -1.0   1.2 -0.07142857 -1.0000000 -0.8571429  -1.0  -1.0
3053   -0.8  -1.0   0.6   0.2 -1.00000000 -1.0000000 -1.0000000   1.0  -1.0
3525    0.2  -0.2  -1.0   0.4 -0.14285714 -1.0000000  1.0714286   0.0   1.5
4530   -1.0  -0.6  -0.2   1.2  0.14285714 -1.0000000  0.3571429   0.0   0.5
5849   -1.0   0.6  -0.2   0.6  0.14285714  0.9285714 -1.0000000   1.5   0.0
6874    1.2  -0.2  -1.0   0.6  1.07142857 -1.0000000  0.1428571   1.5  -1.0
8794    0.0  -1.0  -1.0   1.2  1.07142857 -0.3571429 -1.0000000   1.5   0.0
11605  -0.2  -1.0   1.2   0.8 -0.28571429 -1.0000000  0.3571429   1.5  -0.5
11807  -0.6   1.2  -0.2  -1.0  0.85714286 -1.0000000 -0.2857143   0.0   1.5
12671   0.2   0.6   0.8  -1.0 -1.00000000 -1.0000000  0.0000000  -1.0  -0.5
13715  -0.8   0.2   1.2   0.8  1.07142857  1.0000000 -1.0000000   0.0   0.0
13942  -0.4  -1.0   0.2   0.2  0.21428571  0.2142857 -1.0000000  -1.0  -1.0
14726   0.4  -1.0  -1.0  -1.0  0.78571429  1.0000000 -1.0000000   0.0  -0.5
14980  -0.2  -0.2   0.2   1.2  1.07142857 -1.0000000  1.0714286  -0.5  -1.0
15334  -1.0   0.0   1.2  -1.0 -0.07142857  0.2142857 -1.0000000   1.5  -1.0
16427   1.2   1.2   1.2  -1.0  0.28571429 -1.0000000  1.0714286   1.5  -0.5
17127   1.2  -0.2   1.2   1.2 -0.28571429  1.0714286 -1.0000000  -1.0   1.5
17540  -1.0  -1.0  -1.0  -1.0 -1.00000000 -1.0000000  1.0714286  -1.0   1.0
      cost_mean
1253   4.623496
1456   3.216923
1646   3.888584
2238   4.309176
3022   4.582247
3053   4.587450
3525   3.913181
4530   4.695071
5849   4.683377
6874   6.334596
8794   6.864143
11605  4.770184
11807  3.961315
12671  4.582309
13715  4.582226
13942  4.588648
14726  3.156341
14980  3.665735
15334  5.535918
16427  5.383657
17127  5.271651
17540  4.684465

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.548748746666
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1  0.867   0.867   0.881  0.417
I(T1_J^2)    1  0.388   0.388   0.394  0.575
I(T2_I^2)    1  0.066   0.066   0.067  0.813
I(T2_J^2)    1  1.099   1.099   1.116  0.368
I(U1_I^2)    1  0.035   0.035   0.035  0.863
I(U_I^2)     1  0.428   0.428   0.434  0.557
I(U_J^2)     1  0.214   0.214   0.217  0.673
I(RT_I^2)    1  4.212   4.212   4.279  0.130
I(RT_J^2)    1  0.124   0.124   0.126  0.746
T1_I         1  1.562   1.562   1.587  0.297
T1_J         1  0.113   0.113   0.114  0.757
T2_I         1  0.487   0.487   0.495  0.532
T2_J         1  0.123   0.123   0.125  0.747
U1_I         1  0.262   0.262   0.266  0.642
U_I          1  0.262   0.262   0.266  0.642
U_J          1  0.666   0.666   0.677  0.471
RT_I         1  2.576   2.576   2.617  0.204
RT_J         1  0.014   0.014   0.014  0.913
Residuals    3  2.953   0.984               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1253   4.623496
1456   3.216923
1646   3.888584
2238   4.309176
3022   4.582247
3053   4.587450
3525   3.913181
4530   4.695071
5849   4.683377
6874   6.334596
8794   6.864143
11605  4.770184
11807  3.961315
12671  4.582309
13715  4.582226
13942  4.588648
14726  3.156341
14980  3.665735
15334  5.535918
16427  5.383657
17127  5.271651
17540  4.684465

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.7461648366194635, 'T1_J': 0.7574420375516815, 'T2_J': 0.7472556823212635, 'U_J': 0.4710164016324967, 'U_I': 0.641686647976005, 'I(T2_I^2)': 0.8126920625158344, 'T2_I': 0.5323328824370475, 'U1_I': 0.6415829623563916, 'I(U_I^2)': 0.5568884675599642, 'I(RT_I^2)': 0.13042855900428266, 'I(T2_J^2)': 0.3682760717877734, 'I(U1_I^2)': 0.8630644541033057, 'RT_I': 0.20416794599091598, 'I(T1_I^2)': 0.4172602959392592, 'I(T1_J^2)': 0.5747309152700618, 'I(U_J^2)': 0.6730951203190187, 'RT_J': 0.9129081859347008, 'T1_I': 0.29683482699525865}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'T1_I', 'I(T2_J^2)', 'I(T1_I^2)', 'U_J', 'T2_I', 'I(U_I^2)', 'I(T1_J^2)', 'U1_I', 'U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_J', 'T1_J', 'I(T2_I^2)', 'I(U1_I^2)', 'RT_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.05, data = structure(list(T1_I = c(1, 
5, 8, 11, 0, 1, 6, 0, 0, 11, 5, 4, 2, 6, 1, 3, 7, 4, 0, 11, 11, 
0), T1_J = c(1, 6, 11, 1, 10, 0, 4, 2, 8, 4, 0, 0, 11, 8, 6, 
0, 0, 4, 5, 11, 4, 0), T2_I = c(11, 7, 0, 11, 0, 8, 0, 4, 4, 
0, 0, 11, 4, 9, 11, 6, 0, 6, 11, 11, 11, 0), T2_J = c(7, 0, 11, 
4, 11, 6, 7, 11, 8, 8, 11, 9, 0, 0, 9, 6, 0, 11, 0, 0, 11, 0), 
    U1_I = c(28, 17, 0, 29, 13, 0, 12, 16, 16, 29, 29, 10, 26, 
    0, 29, 17, 25, 29, 13, 18, 10, 0), U_I = c(2, 0, 17, 10, 
    0, 0, 0, 0, 27, 0, 9, 0, 0, 0, 28, 17, 28, 0, 17, 0, 29, 
    0), U_J = c(0, 0, 0, 0, 2, 0, 29, 19, 0, 16, 0, 19, 10, 14, 
    0, 0, 0, 29, 0, 29, 0, 29), RT_I = c(0, 4, 2, 2, 0, 4, 2, 
    2, 5, 5, 5, 5, 2, 0, 2, 0, 2, 1, 5, 5, 0, 0), RT_J = c(5, 
    2, 4, 2, 0, 0, 5, 3, 2, 0, 2, 1, 5, 1, 2, 0, 1, 0, 0, 1, 
    5, 4), cost_mean = c(4.623496, 3.216923, 3.888584, 4.309176, 
    4.582247, 4.58745, 3.913181, 4.695071, 4.683377, 6.334596, 
    6.864143, 4.770184, 3.961315, 4.582309, 4.582226, 4.588648, 
    3.156341, 3.665735, 5.535918, 5.383657, 5.271651, 4.684465
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("1253", "1456", 
"1646", "2238", "3022", "3053", "3525", "4530", "5849", "6874", 
"8794", "11605", "11807", "12671", "13715", "13942", "14726", 
"14980", "15334", "16427", "17127", "17540"), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.929150e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     2.814000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.405000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)    -1.290000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -2.200000e-03 -1.797693e+308  1.797693e+308
I(U1_I^2)     6.900000e-04 -1.797693e+308  1.797693e+308
I(U_I^2)     -2.750000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)     -4.420000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     1.049900e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     9.378000e-02 -1.797693e+308  1.797693e+308
T1_I         -2.886300e-01 -1.797693e+308  1.797693e+308
T1_J          1.026800e-01 -1.797693e+308  1.797693e+308
T2_I         -2.730000e-03 -1.797693e+308  1.797693e+308
T2_J          3.667000e-02 -1.797693e+308  1.797693e+308
U1_I         -3.521000e-02 -1.797693e+308  1.797693e+308
U_I           8.167000e-02 -1.797693e+308  1.797693e+308
U_J           1.272000e-01 -1.797693e+308  1.797693e+308
RT_I         -4.492800e-01 -1.797693e+308  1.797693e+308
RT_J         -4.288100e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 251577
Valid coordinates: 10560/52800
Tested coordinates: 502792
Valid coordinates: 15840/52800
Tested coordinates: 750851
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1002015
Valid coordinates: 26400/52800
Tested coordinates: 1255365
Valid coordinates: 31680/52800
Tested coordinates: 1503459
Valid coordinates: 36960/52800
Tested coordinates: 1759126
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2017643
Valid coordinates: 47520/52800
Tested coordinates: 2274931
Valid coordinates: 52800/52800
Tested coordinates: 2538275
Valid/Tested configurations: 52800/2538275
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7461648366194635, 'T1_J': 0.7574420375516815, 'T2_J': 0.7472556823212635, 'U_J': 0.4710164016324967, 'U_I': 0.641686647976005, 'I(T2_I^2)': 0.8126920625158344, 'T2_I': 0.5323328824370475, 'U1_I': 0.6415829623563916, 'I(U_I^2)': 0.5568884675599642, 'I(RT_I^2)': 0.13042855900428266, 'I(T2_J^2)': 0.3682760717877734, 'I(U1_I^2)': 0.8630644541033057, 'RT_I': 0.20416794599091598, 'I(T1_I^2)': 0.4172602959392592, 'I(T1_J^2)': 0.5747309152700618, 'I(U_J^2)': 0.6730951203190187, 'RT_J': 0.9129081859347008, 'T1_I': 0.29683482699525865}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'T1_I', 'I(T2_J^2)', 'I(T1_I^2)', 'U_J', 'T2_I', 'I(U_I^2)', 'I(T1_J^2)', 'U1_I', 'U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_J', 'T1_J', 'I(T2_I^2)', 'I(U1_I^2)', 'RT_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7461648366194635, 'T1_J': 0.7574420375516815, 'T2_J': 0.7472556823212635, 'U_J': 0.4710164016324967, 'U_I': 0.641686647976005, 'I(T2_I^2)': 0.8126920625158344, 'T2_I': 0.5323328824370475, 'U1_I': 0.6415829623563916, 'I(U_I^2)': 0.5568884675599642, 'I(RT_I^2)': 0.13042855900428266, 'I(T2_J^2)': 0.3682760717877734, 'I(U1_I^2)': 0.8630644541033057, 'RT_I': 0.20416794599091598, 'I(T1_I^2)': 0.4172602959392592, 'I(T1_J^2)': 0.5747309152700618, 'I(U_J^2)': 0.6730951203190187, 'RT_J': 0.9129081859347008, 'T1_I': 0.29683482699525865}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'T1_I', 'I(T2_J^2)', 'I(T1_I^2)', 'U_J', 'T2_I', 'I(U_I^2)', 'I(T1_J^2)', 'U1_I', 'U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_J', 'T1_J', 'I(T2_I^2)', 'I(U1_I^2)', 'RT_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
39194    6   11   11    0   20   1   0    2    3

Best From Design: [7, 0, 0, 0, 25, 28, 0, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.750432
Baseline Point:
4.750432
Design Best Point:
[7, 0, 0, 0, 25, 28, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.664432413726
Predicted Best Point:
[6, 11, 11, 0, 20, 1, 0, 2, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[6, 11, 11, 0, 20, 1, 0, 2, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		757
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1418
        Writes: 		184
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.332762
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.664432413726
Slowdown (Predicted Best): 0.701570299291
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.156341
Current Best Point: 
[7, 0, 0, 0, 25, 28, 0, 2, 1]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 83727
Valid coordinates: 3520/17600
Tested coordinates: 168724
Valid coordinates: 5280/17600
Tested coordinates: 253466
Valid coordinates: 7040/17600
Tested coordinates: 340586
Valid coordinates: 8800/17600
Tested coordinates: 423809
Valid coordinates: 10560/17600
Tested coordinates: 507662
Valid coordinates: 12320/17600
Tested coordinates: 591938
Valid coordinates: 14080/17600
Tested coordinates: 674929
Valid coordinates: 15840/17600
Tested coordinates: 757572
Valid coordinates: 17600/17600
Tested coordinates: 846767
Valid/Tested configurations: 17600/846767
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
8041     1   11    5   11    0   0  27    5    2
8592     2    0    7    0    0   0   0    5    0
16110    0    1    0    5   12   0  29    2    0
16427   11   11   11    0   18   0  29    5    1
16890    5    4   11    8   28   0  29    5    0
22694    0   11    0    0    1  11   0    0    3
24712    5    5    5    0    0   0  29    1    2
24756   10    0   10   11   14   0  16    0    1
27546   11   11    0   11   27   0   1    1    5
35458    0    6    4    7    0   0  13    5    0
40840   11    2   11    6    1  29   0    2    3
42104    7    0    8    6   11  16   0    0    5
42648    0    8   11    0    6   0  18    2    5
49625    0    4    4   11   29  21   0    2    5
50424    5    0    0    0   28   0  13    3    3
50970    4    7    7    7   15   0   1    3    3
51422    6   10   11   11    0  13   0    2    0
59342    0    0   11   11    6  28   0    4    2
61653   11    4    0    0   15  11   0    5    2
78476    3    6    0   11    9  29   0    0    5
86864    2   11    6    0   27  29   0    1    0
87890    0    3   11    8   29   0   0    0    3

D-Efficiency Approximation: [1] 0.3972924

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		14479
        Multiplications: 	4356
        Divisions: 		0
        Logical: 		0
        Reads: 			21877
        Writes: 		2207
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584057
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		305
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			707
        Writes: 		83
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.782127
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1875
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3215
        Writes: 		350
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.52656
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		13771
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20622
        Writes: 		2106
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.347311
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1462
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2434
        Writes: 		270
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.36243
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1130
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2190
        Writes: 		237
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.520406
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		213
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			488
        Writes: 		73
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580927
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1162
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2253
        Writes: 		267
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.953646
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		6503
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			9990
        Writes: 		1017
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582108
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		4020
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6490
        Writes: 		701
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.923347
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		7879
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			12022
        Writes: 		1243
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.26766
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3111
        Multiplications: 	1040
        Divisions: 		0
        Logical: 		0
        Reads: 			5311
        Writes: 		556
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.179763
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		11824
        Multiplications: 	3564
        Divisions: 		0
        Logical: 		0
        Reads: 			18050
        Writes: 		1873
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.715168
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		2464
        Multiplications: 	768
        Divisions: 		0
        Logical: 		0
        Reads: 			3961
        Writes: 		435
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.323156
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1219
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2116
        Writes: 		245
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.344288
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		220
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			513
        Writes: 		85
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.60182
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2775
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			4777
        Writes: 		529
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.113279
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2707
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4661
        Writes: 		511
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.936156
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		13769
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20631
        Writes: 		2114
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.686036
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		385
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			867
        Writes: 		153
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.567234
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		124
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			294
        Writes: 		66
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.596673
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
8041     1   11    5   11    0   0  27    5    2  4.584057
8592     2    0    7    0    0   0   0    5    0  4.782127
16110    0    1    0    5   12   0  29    2    0  4.526560
16427   11   11   11    0   18   0  29    5    1  5.383657
16890    5    4   11    8   28   0  29    5    0  6.347311
22694    0   11    0    0    1  11   0    0    3  3.362430
24712    5    5    5    0    0   0  29    1    2  3.520406
24756   10    0   10   11   14   0  16    0    1  4.580927
27546   11   11    0   11   27   0   1    1    5  3.953646
35458    0    6    4    7    0   0  13    5    0  4.582108
40840   11    2   11    6    1  29   0    2    3  3.923347
42104    7    0    8    6   11  16   0    0    5  4.267660
42648    0    8   11    0    6   0  18    2    5  4.179763
49625    0    4    4   11   29  21   0    2    5  3.715168
50424    5    0    0    0   28   0  13    3    3  3.323156
50970    4    7    7    7   15   0   1    3    3  3.344288
51422    6   10   11   11    0  13   0    2    0  3.601820
59342    0    0   11   11    6  28   0    4    2  3.113279
61653   11    4    0    0   15  11   0    5    2  6.936156
78476    3    6    0   11    9  29   0    0    5  4.686036
86864    2   11    6    0   27  29   0    1    0  3.567234
87890    0    3   11    8   29   0   0    0    3  4.596673

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
8041     1   11    5   11    0   0  27    5    2  4.584057
8592     2    0    7    0    0   0   0    5    0  4.782127
16110    0    1    0    5   12   0  29    2    0  4.526560
16427   11   11   11    0   18   0  29    5    1  5.383657
16890    5    4   11    8   28   0  29    5    0  6.347311
22694    0   11    0    0    1  11   0    0    3  3.362430
24712    5    5    5    0    0   0  29    1    2  3.520406
24756   10    0   10   11   14   0  16    0    1  4.580927
27546   11   11    0   11   27   0   1    1    5  3.953646
35458    0    6    4    7    0   0  13    5    0  4.582108
40840   11    2   11    6    1  29   0    2    3  3.923347
42104    7    0    8    6   11  16   0    0    5  4.267660
42648    0    8   11    0    6   0  18    2    5  4.179763
49625    0    4    4   11   29  21   0    2    5  3.715168
50424    5    0    0    0   28   0  13    3    3  3.323156
50970    4    7    7    7   15   0   1    3    3  3.344288
51422    6   10   11   11    0  13   0    2    0  3.601820
59342    0    0   11   11    6  28   0    4    2  3.113279
61653   11    4    0    0   15  11   0    5    2  6.936156
78476    3    6    0   11    9  29   0    0    5  4.686036
86864    2   11    6    0   27  29   0    1    0  3.567234
87890    0    3   11    8   29   0   0    0    3  4.596673

Clean encoded design, with measurements:
      T1_Ie T1_Je T2_Ie T2_Je       U1_Ie        U_Ie        U_Je RT_Ie RT_Je
8041   -0.8   1.2   0.0   1.2 -1.00000000 -1.00000000  0.92857143   1.5   0.0
8592   -0.6  -1.0   0.4  -1.0 -1.00000000 -1.00000000 -1.00000000   1.5  -1.0
16110  -1.0  -0.8  -1.0   0.0 -0.14285714 -1.00000000  1.07142857   0.0  -1.0
16427   1.2   1.2   1.2  -1.0  0.28571429 -1.00000000  1.07142857   1.5  -0.5
16890   0.0  -0.2   1.2   0.6  1.00000000 -1.00000000  1.07142857   1.5  -1.0
22694  -1.0   1.2  -1.0  -1.0 -0.92857143 -0.21428571 -1.00000000  -1.0   0.5
24712   0.0   0.0   0.0  -1.0 -1.00000000 -1.00000000  1.07142857  -0.5   0.0
24756   1.0  -1.0   1.0   1.2  0.00000000 -1.00000000  0.14285714  -1.0  -0.5
27546   1.2   1.2  -1.0   1.2  0.92857143 -1.00000000 -0.92857143  -0.5   1.5
35458  -1.0   0.2  -0.2   0.4 -1.00000000 -1.00000000 -0.07142857   1.5  -1.0
40840   1.2  -0.6   1.2   0.2 -0.92857143  1.07142857 -1.00000000   0.0   0.5
42104   0.4  -1.0   0.6   0.2 -0.21428571  0.14285714 -1.00000000  -1.0   1.5
42648  -1.0   0.6   1.2  -1.0 -0.57142857 -1.00000000  0.28571429   0.0   1.5
49625  -1.0  -0.2  -0.2   1.2  1.07142857  0.50000000 -1.00000000   0.0   1.5
50424   0.0  -1.0  -1.0  -1.0  1.00000000 -1.00000000 -0.07142857   0.5   0.5
50970  -0.2   0.4   0.4   0.4  0.07142857 -1.00000000 -0.92857143   0.5   0.5
51422   0.2   1.0   1.2   1.2 -1.00000000 -0.07142857 -1.00000000   0.0  -1.0
59342  -1.0  -1.0   1.2   1.2 -0.57142857  1.00000000 -1.00000000   1.0   0.0
61653   1.2  -0.2  -1.0  -1.0  0.07142857 -0.21428571 -1.00000000   1.5   0.0
78476  -0.4   0.2  -1.0   1.2 -0.35714286  1.07142857 -1.00000000  -1.0   1.5
86864  -0.6   1.2   0.2  -1.0  0.92857143  1.07142857 -1.00000000  -0.5  -1.0
87890  -1.0  -0.4   1.2   0.6  1.07142857 -1.00000000 -1.00000000  -1.0   0.5
      cost_mean
8041   4.584057
8592   4.782127
16110  4.526560
16427  5.383657
16890  6.347311
22694  3.362430
24712  3.520406
24756  4.580927
27546  3.953646
35458  4.582108
40840  3.923347
42104  4.267660
42648  4.179763
49625  3.715168
50424  3.323156
50970  3.344288
51422  3.601820
59342  3.113279
61653  6.936156
78476  4.686036
86864  3.567234
87890  4.596673

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.927020508712
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value   Pr(>F)    
I(T1_I^2)    1  3.245   3.245   7.840 0.009711 ** 
I(T1_J^2)    1  1.203   1.203   2.906 0.100658    
I(T2_I^2)    1  0.009   0.009   0.021 0.886660    
I(T2_J^2)    1  0.102   0.102   0.247 0.623521    
I(U1_I^2)    1  0.219   0.219   0.530 0.473411    
I(U_I^2)     1  1.729   1.729   4.179 0.051605 .  
I(U_J^2)     1  0.170   0.170   0.412 0.527013    
I(RT_I^2)    1  9.459   9.459  22.854 6.58e-05 ***
I(RT_J^2)    1  0.129   0.129   0.312 0.581129    
T1_I         1  0.958   0.958   2.314 0.140765    
T1_J         1  0.327   0.327   0.790 0.382709    
T2_I         1  1.226   1.226   2.961 0.097641 .  
T2_J         1  0.001   0.001   0.002 0.964921    
U1_I         1  0.118   0.118   0.285 0.598341    
U_I          1  0.868   0.868   2.097 0.159976    
U_J          1  0.055   0.055   0.134 0.717847    
RT_I         1  6.444   6.444  15.570 0.000569 ***
RT_J         1  0.433   0.433   1.045 0.316403    
Residuals   25 10.347   0.414                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
8041   4.584057
8592   4.782127
16110  4.526560
16427  5.383657
16890  6.347311
22694  3.362430
24712  3.520406
24756  4.580927
27546  3.953646
35458  4.582108
40840  3.923347
42104  4.267660
42648  4.179763
49625  3.715168
50424  3.323156
50970  3.344288
51422  3.601820
59342  3.113279
61653  6.936156
78476  4.686036
86864  3.567234
87890  4.596673

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.5811289419031397, 'T1_J': 0.3827091092088004, 'T2_J': 0.9649214456259463, 'U_J': 0.7178473406766726, 'U_I': 0.1599758916411674, 'I(T2_I^2)': 0.8866596452936581, 'T2_I': 0.09764148465095168, 'U1_I': 0.5983408328399193, 'I(U_I^2)': 0.05160546734177362, 'I(RT_I^2)': 6.579443076923597e-05, 'I(T2_J^2)': 0.6235211013041648, 'I(U1_I^2)': 0.473411082614724, 'RT_I': 0.0005692388617505403, 'I(T1_I^2)': 0.009710524897391477, 'I(T1_J^2)': 0.10065763721305991, 'I(U_J^2)': 0.5270127907752064, 'RT_J': 0.31640289287952456, 'T1_I': 0.14076464258366328}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_I^2)', 'I(U_I^2)', 'T2_I', 'I(T1_J^2)', 'T1_I', 'U_I', 'RT_J', 'T1_J', 'I(U1_I^2)', 'I(U_J^2)', 'I(RT_J^2)', 'U1_I', 'I(T2_J^2)', 'U_J', 'I(T2_I^2)', 'T2_J']
Variables within threshold: ['I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I', 'I(T1_I^2)', 'T1_I']
Predicting Best Values for: ['I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I', 'I(T1_I^2)', 'T1_I']
Using Model: cost_mean ~ I(RT_I^2) + RT_I + I(RT_I^2) + RT_I + I(T1_I^2) + T1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_I^2) + RT_I + I(RT_I^2) + RT_I + 
    I(T1_I^2) + T1_I, tau = 0.05, data = structure(list(T1_I = c(1, 
5, 8, 11, 0, 1, 6, 0, 0, 11, 5, 4, 2, 6, 1, 3, 7, 4, 0, 11, 11, 
0, 1, 2, 0, 11, 5, 0, 5, 10, 11, 0, 11, 7, 0, 0, 5, 4, 6, 0, 
11, 3, 2, 0), T1_J = c(1, 6, 11, 1, 10, 0, 4, 2, 8, 4, 0, 0, 
11, 8, 6, 0, 0, 4, 5, 11, 4, 0, 11, 0, 1, 11, 4, 11, 5, 0, 11, 
6, 2, 0, 8, 4, 0, 7, 10, 0, 4, 6, 11, 3), T2_I = c(11, 7, 0, 
11, 0, 8, 0, 4, 4, 0, 0, 11, 4, 9, 11, 6, 0, 6, 11, 11, 11, 0, 
5, 7, 0, 11, 11, 0, 5, 10, 0, 4, 11, 8, 11, 4, 0, 7, 11, 11, 
0, 0, 6, 11), T2_J = c(7, 0, 11, 4, 11, 6, 7, 11, 8, 8, 11, 9, 
0, 0, 9, 6, 0, 11, 0, 0, 11, 0, 11, 0, 5, 0, 8, 0, 0, 11, 11, 
7, 6, 6, 0, 11, 0, 7, 11, 11, 0, 11, 0, 8), U1_I = c(28, 17, 
0, 29, 13, 0, 12, 16, 16, 29, 29, 10, 26, 0, 29, 17, 25, 29, 
13, 18, 10, 0, 0, 0, 12, 18, 28, 1, 0, 14, 27, 0, 1, 11, 6, 29, 
28, 15, 0, 6, 15, 9, 27, 29), U_I = c(2, 0, 17, 10, 0, 0, 0, 
0, 27, 0, 9, 0, 0, 0, 28, 17, 28, 0, 17, 0, 29, 0, 0, 0, 0, 0, 
0, 11, 0, 0, 0, 0, 29, 16, 0, 21, 0, 0, 13, 28, 11, 29, 29, 0
), U_J = c(0, 0, 0, 0, 2, 0, 29, 19, 0, 16, 0, 19, 10, 14, 0, 
0, 0, 29, 0, 29, 0, 29, 27, 0, 29, 29, 29, 0, 29, 16, 1, 13, 
0, 0, 18, 0, 13, 1, 0, 0, 0, 0, 0, 0), RT_I = c(0, 4, 2, 2, 0, 
4, 2, 2, 5, 5, 5, 5, 2, 0, 2, 0, 2, 1, 5, 5, 0, 0, 5, 5, 2, 5, 
5, 0, 1, 0, 1, 5, 2, 0, 2, 2, 3, 3, 2, 4, 5, 0, 1, 0), RT_J = c(5, 
2, 4, 2, 0, 0, 5, 3, 2, 0, 2, 1, 5, 1, 2, 0, 1, 0, 0, 1, 5, 4, 
2, 0, 0, 1, 0, 3, 2, 1, 5, 0, 3, 5, 5, 5, 3, 3, 0, 2, 2, 5, 0, 
3), cost_mean = c(4.623496, 3.216923, 3.888584, 4.309176, 4.582247, 
4.58745, 3.913181, 4.695071, 4.683377, 6.334596, 6.864143, 4.770184, 
3.961315, 4.582309, 4.582226, 4.588648, 3.156341, 3.665735, 5.535918, 
5.383657, 5.271651, 4.684465, 4.584057, 4.782127, 4.52656, 5.383657, 
6.347311, 3.36243, 3.520406, 4.580927, 3.953646, 4.582108, 3.923347, 
4.26766, 4.179763, 3.715168, 3.323156, 3.344288, 3.60182, 3.113279, 
6.936156, 4.686036, 3.567234, 4.596673)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = c(NA, -44L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.362430e+00 -1.797693e+308   4.007870e+00
I(RT_I^2)     2.099000e-01  -1.136700e-01  1.797693e+308
RT_I         -9.018700e-01 -1.797693e+308   2.944260e+00
I(T1_I^2)     1.599000e-02  -5.281000e-02  1.797693e+308
T1_I         -5.921000e-02 -1.797693e+308   1.593200e-01

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 255753
Valid coordinates: 10560/52800
Tested coordinates: 508874
Valid coordinates: 15840/52800
Tested coordinates: 765790
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1020868
Valid coordinates: 26400/52800
Tested coordinates: 1272675
Valid coordinates: 31680/52800
Tested coordinates: 1530323
Valid coordinates: 36960/52800
Tested coordinates: 1786314
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2038171
Valid coordinates: 47520/52800
Tested coordinates: 2290567
Valid coordinates: 52800/52800
Tested coordinates: 2545716
Valid/Tested configurations: 52800/2545716
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.5811289419031397, 'T1_J': 0.3827091092088004, 'T2_J': 0.9649214456259463, 'U_J': 0.7178473406766726, 'U_I': 0.1599758916411674, 'I(T2_I^2)': 0.8866596452936581, 'T2_I': 0.09764148465095168, 'U1_I': 0.5983408328399193, 'I(U_I^2)': 0.05160546734177362, 'I(RT_I^2)': 6.579443076923597e-05, 'I(T2_J^2)': 0.6235211013041648, 'I(U1_I^2)': 0.473411082614724, 'RT_I': 0.0005692388617505403, 'I(T1_I^2)': 0.009710524897391477, 'I(T1_J^2)': 0.10065763721305991, 'I(U_J^2)': 0.5270127907752064, 'RT_J': 0.31640289287952456, 'T1_I': 0.14076464258366328}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_I^2)', 'I(U_I^2)', 'T2_I', 'I(T1_J^2)', 'T1_I', 'U_I', 'RT_J', 'T1_J', 'I(U1_I^2)', 'I(U_J^2)', 'I(RT_J^2)', 'U1_I', 'I(T2_J^2)', 'U_J', 'I(T2_I^2)', 'T2_J']
Variables within threshold: ['RT_I', 'T1_I']
Unique Variables: ['RT_I', 'T1_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.5811289419031397, 'T1_J': 0.3827091092088004, 'T2_J': 0.9649214456259463, 'U_J': 0.7178473406766726, 'U_I': 0.1599758916411674, 'I(T2_I^2)': 0.8866596452936581, 'T2_I': 0.09764148465095168, 'U1_I': 0.5983408328399193, 'I(U_I^2)': 0.05160546734177362, 'I(RT_I^2)': 6.579443076923597e-05, 'I(T2_J^2)': 0.6235211013041648, 'I(U1_I^2)': 0.473411082614724, 'RT_I': 0.0005692388617505403, 'I(T1_I^2)': 0.009710524897391477, 'I(T1_J^2)': 0.10065763721305991, 'I(U_J^2)': 0.5270127907752064, 'RT_J': 0.31640289287952456, 'T1_I': 0.14076464258366328}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_I^2)', 'I(U_I^2)', 'T2_I', 'I(T1_J^2)', 'T1_I', 'U_I', 'RT_J', 'T1_J', 'I(U1_I^2)', 'I(U_J^2)', 'I(RT_J^2)', 'U1_I', 'I(T2_J^2)', 'U_J', 'I(T2_I^2)', 'T2_J']
Variables within threshold: ['RT_I', 'T1_I']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
15    2    1    4    8   29   0  19    2    4

Best From Design: [0, 0, 11, 11, 6, 28, 0, 4, 2]
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.750432
Design Best Point:
[0, 0, 11, 11, 6, 28, 0, 4, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.65536755394
Predicted Best Point:
[2, 1, 4, 8, 29, 0, 19, 2, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 1, 4, 8, 29, 0, 19, 2, 4]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2243
        Multiplications: 	740
        Divisions: 		0
        Logical: 		0
        Reads: 			3878
        Writes: 		435
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.781027
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.65536755394
Slowdown (Predicted Best): 1.2169476376
Budget: 44/1000
Best point from design was better than predicted point
Updating Global Best: 3.113279
Current Best Point: 
[0, 0, 11, 11, 6, 28, 0, 4, 2]
Step 2
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 37794
Valid coordinates: 2720/13600
Tested coordinates: 74253
Valid coordinates: 4080/13600
Tested coordinates: 110197
Valid coordinates: 5440/13600
Tested coordinates: 146704
Valid coordinates: 6800/13600
Tested coordinates: 185325
Valid coordinates: 8160/13600
Tested coordinates: 222741
Valid coordinates: 9520/13600
Tested coordinates: 259884
Valid coordinates: 10880/13600
Tested coordinates: 295373
Valid coordinates: 12240/13600
Tested coordinates: 330150
Valid coordinates: 13600/13600
Tested coordinates: 366972
Valid/Tested configurations: 13600/366972
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 154400      9

Pruned data dimensions: [1] 17056     9

Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['T1_I', 'RT_I']
Two-Level Factors: ['T1_I', 'RT_I']
Three-Level Factors: ['T1_I', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['T1_I', 'RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_I', 'RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17056     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
191      2    0   10    5    0   0  27    2    5
322      2    5    5    0    8  29   0    2    0
4116     2    4   11    0   18   0  29    2    2
6143     2   11   10    0   29   0  11    2    2
6715     2    5   11    6   13   0  13    2    5
7521     2    3    0    6   29  29   0    2    2
10016    2   10    0    0   14  20   0    2    5
10323    2    6    6    6    0  17   0    2    2
11133    2    0    9    5   17   0   0    2    0
12592    2    7    6   11   28   0   0    2    5
12816    2    1    5    1   29   0  29    2    5
14414    2    0   11   11   28  12   0    2    0
14662    2   11    2   11   11   0  28    2    0
15347    2    0    5   11   17   0  13    2    4
15776    2   11   11   11    1  29   0    2    4
16457    2    3    0   11    0   0  14    2    0
16595    2    0    0    0    2   0   1    2    4

D-Efficiency Approximation: [1] 0.3962461

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		3643
        Multiplications: 	1220
        Divisions: 		0
        Logical: 		0
        Reads: 			6197
        Writes: 		639
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.311759
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		384
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			869
        Writes: 		138
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.640249
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2106
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3642
        Writes: 		400
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.467523
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1037
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1864
        Writes: 		231
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.305181
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2827
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4846
        Writes: 		519
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.21028
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2148
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3746
        Writes: 		449
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.593458
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		11347
        Multiplications: 	3432
        Divisions: 		0
        Logical: 		0
        Reads: 			17337
        Writes: 		1785
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.956544
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1376
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2441
        Writes: 		281
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.558136
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		81
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			204
        Writes: 		51
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.638928
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		2001
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3454
        Writes: 		390
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.085998
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2 must be greater than the stride value 2; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		3797
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6464
        Writes: 		691
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.716313
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		234
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			535
        Writes: 		107
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.715368
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 4 must be greater than the stride value 4; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1813
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3107
        Writes: 		337
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.769169
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1865
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3240
        Writes: 		359
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.778346
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		7814
        Multiplications: 	2380
        Divisions: 		0
        Logical: 		0
        Reads: 			12076
        Writes: 		1257
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.678158
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		963
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1690
        Writes: 		187
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.022829
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		1078
        Multiplications: 	368
        Divisions: 		0
        Logical: 		0
        Reads: 			1909
        Writes: 		209
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.655546
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
191      2    0   10    5    0   0  27    2    5  4.311759
322      2    5    5    0    8  29   0    2    0  3.640249
4116     2    4   11    0   18   0  29    2    2  3.467523
6143     2   11   10    0   29   0  11    2    2  3.305181
6715     2    5   11    6   13   0  13    2    5  4.210280
7521     2    3    0    6   29  29   0    2    2  3.593458
10016    2   10    0    0   14  20   0    2    5  3.956544
10323    2    6    6    6    0  17   0    2    2  3.558136
11133    2    0    9    5   17   0   0    2    0  3.638928
12592    2    7    6   11   28   0   0    2    5  4.085998
12816    2    1    5    1   29   0  29    2    5  5.716313
14414    2    0   11   11   28  12   0    2    0  3.715368
14662    2   11    2   11   11   0  28    2    0  3.769169
15347    2    0    5   11   17   0  13    2    4  3.778346
15776    2   11   11   11    1  29   0    2    4  3.678158
16457    2    3    0   11    0   0  14    2    0  4.022829
16595    2    0    0    0    2   0   1    2    4  3.655546

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
191      2    0   10    5    0   0  27    2    5  4.311759
322      2    5    5    0    8  29   0    2    0  3.640249
4116     2    4   11    0   18   0  29    2    2  3.467523
6143     2   11   10    0   29   0  11    2    2  3.305181
6715     2    5   11    6   13   0  13    2    5  4.210280
7521     2    3    0    6   29  29   0    2    2  3.593458
10016    2   10    0    0   14  20   0    2    5  3.956544
10323    2    6    6    6    0  17   0    2    2  3.558136
11133    2    0    9    5   17   0   0    2    0  3.638928
12592    2    7    6   11   28   0   0    2    5  4.085998
12816    2    1    5    1   29   0  29    2    5  5.716313
14414    2    0   11   11   28  12   0    2    0  3.715368
14662    2   11    2   11   11   0  28    2    0  3.769169
15347    2    0    5   11   17   0  13    2    4  3.778346
15776    2   11   11   11    1  29   0    2    4  3.678158
16457    2    3    0   11    0   0  14    2    0  4.022829
16595    2    0    0    0    2   0   1    2    4  3.655546

Clean encoded design, with measurements:
      T1_Ie T1_Je T2_Ie T2_Je       U1_Ie       U_Ie        U_Je RT_Ie RT_Je
191    -0.6  -1.0   1.0   0.0 -1.00000000 -1.0000000  0.92857143     0   1.5
322    -0.6   0.0   0.0  -1.0 -0.42857143  1.0714286 -1.00000000     0  -1.0
4116   -0.6  -0.2   1.2  -1.0  0.28571429 -1.0000000  1.07142857     0   0.0
6143   -0.6   1.2   1.0  -1.0  1.07142857 -1.0000000 -0.21428571     0   0.0
6715   -0.6   0.0   1.2   0.2 -0.07142857 -1.0000000 -0.07142857     0   1.5
7521   -0.6  -0.4  -1.0   0.2  1.07142857  1.0714286 -1.00000000     0   0.0
10016  -0.6   1.0  -1.0  -1.0  0.00000000  0.4285714 -1.00000000     0   1.5
10323  -0.6   0.2   0.2   0.2 -1.00000000  0.2142857 -1.00000000     0   0.0
11133  -0.6  -1.0   0.8   0.0  0.21428571 -1.0000000 -1.00000000     0  -1.0
12592  -0.6   0.4   0.2   1.2  1.00000000 -1.0000000 -1.00000000     0   1.5
12816  -0.6  -0.8   0.0  -0.8  1.07142857 -1.0000000  1.07142857     0   1.5
14414  -0.6  -1.0   1.2   1.2  1.00000000 -0.1428571 -1.00000000     0  -1.0
14662  -0.6   1.2  -0.6   1.2 -0.21428571 -1.0000000  1.00000000     0  -1.0
15347  -0.6  -1.0   0.0   1.2  0.21428571 -1.0000000 -0.07142857     0   1.0
15776  -0.6   1.2   1.2   1.2 -0.92857143  1.0714286 -1.00000000     0   1.0
16457  -0.6  -0.4  -1.0   1.2 -1.00000000 -1.0000000  0.00000000     0  -1.0
16595  -0.6  -1.0  -1.0  -1.0 -0.85714286 -1.0000000 -0.92857143     0   1.0
      cost_mean
191    4.311759
322    3.640249
4116   3.467523
6143   3.305181
6715   4.210280
7521   3.593458
10016  3.956544
10323  3.558136
11133  3.638928
12592  4.085998
12816  5.716313
14414  3.715368
14662  3.769169
15347  3.778346
15776  3.678158
16457  4.022829
16595  3.655546

Anova Formula in Python: cost_mean ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + I(U_I^2) + 
    I(U_J^2) + I(RT_J^2) + T1_J + T2_I + T2_J + U1_I + U_I + 
    U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 18 10

Heteroscedasticity Test p-value: 3.01937682488e-05
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
13    2   11    4    0   26   0  10    2    5  3.961315
45    2    0   10    5    0   0  27    2    5  4.311759
46    2    5    5    0    8  29   0    2    0  3.640249
47    2    4   11    0   18   0  29    2    2  3.467523
48    2   11   10    0   29   0  11    2    2  3.305181
49    2    5   11    6   13   0  13    2    5  4.210280
50    2    3    0    6   29  29   0    2    2  3.593458
51    2   10    0    0   14  20   0    2    5  3.956544
52    2    6    6    6    0  17   0    2    2  3.558136
53    2    0    9    5   17   0   0    2    0  3.638928
54    2    7    6   11   28   0   0    2    5  4.085998
55    2    1    5    1   29   0  29    2    5  5.716313
56    2    0   11   11   28  12   0    2    0  3.715368
57    2   11    2   11   11   0  28    2    0  3.769169
58    2    0    5   11   17   0  13    2    4  3.778346
59    2   11   11   11    1  29   0    2    4  3.678158
60    2    3    0   11    0   0  14    2    0  4.022829
61    2    0    0    0    2   0   1    2    4  3.655546

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value Pr(>F)   
I(T1_J^2)    1 4.620e-10 4.620e-10   4.767 0.1170   
I(T2_I^2)    1 5.340e-10 5.340e-10   5.507 0.1006   
I(T2_J^2)    1 3.060e-10 3.060e-10   3.156 0.1737   
I(U1_I^2)    1 7.000e-12 7.000e-12   0.069 0.8102   
I(U_I^2)     1 3.770e-10 3.770e-10   3.890 0.1431   
I(U_J^2)     1 4.870e-10 4.870e-10   5.027 0.1108   
I(RT_J^2)    1 4.388e-09 4.388e-09  45.280 0.0067 **
T1_J         1 9.000e-12 9.000e-12   0.091 0.7830   
T2_I         1 7.000e-12 7.000e-12   0.074 0.8033   
T2_J         1 9.700e-11 9.700e-11   0.996 0.3917   
U1_I         1 1.400e-11 1.400e-11   0.144 0.7292   
U_I          1 6.200e-11 6.200e-11   0.644 0.4810   
U_J          1 2.000e-12 2.000e-12   0.024 0.8877   
RT_J         1 2.075e-09 2.075e-09  21.406 0.0190 * 
Residuals    3 2.910e-10 9.700e-11                  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
191    4.311759
322    3.640249
4116   3.467523
6143   3.305181
6715   4.210280
7521   3.593458
10016  3.956544
10323  3.558136
11133  3.638928
12592  4.085998
12816  5.716313
14414  3.715368
14662  3.769169
15347  3.778346
15776  3.678158
16457  4.022829
16595  3.655546

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.006700629473345128, 'T1_J': 0.7830168892973501, 'T2_J': 0.39173673944323456, 'U_J': 0.8877372069887078, 'U_I': 0.4810023895067815, 'I(T2_I^2)': 0.1005976652803021, 'U1_I': 0.7291962879924152, 'I(U_I^2)': 0.14314084233537588, 'T2_I': 0.8033405536761925, 'I(T2_J^2)': 0.1737440283357025, 'I(U1_I^2)': 0.8102315205063204, 'I(T1_J^2)': 0.1169844814302925, 'I(U_J^2)': 0.11075457311223516, 'RT_J': 0.019013490523158857}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(T1_J^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T2_J', 'U_I', 'U1_I', 'T1_J', 'T2_I', 'I(U1_I^2)', 'U_J']
Variables within threshold: ['I(RT_J^2)', 'RT_J']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J']
Using Model: cost_mean ~ I(RT_J^2) + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 18 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J, tau = 0.05, data = structure(list(
    T1_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2), T1_J = c(11, 0, 5, 4, 11, 5, 3, 10, 6, 0, 7, 1, 0, 
    11, 0, 11, 3, 0), T2_I = c(4, 10, 5, 11, 10, 11, 0, 0, 6, 
    9, 6, 5, 11, 2, 5, 11, 0, 0), T2_J = c(0, 5, 0, 0, 0, 6, 
    6, 0, 6, 5, 11, 1, 11, 11, 11, 11, 11, 0), U1_I = c(26, 0, 
    8, 18, 29, 13, 29, 14, 0, 17, 28, 29, 28, 11, 17, 1, 0, 2
    ), U_I = c(0, 0, 29, 0, 0, 0, 29, 20, 17, 0, 0, 0, 12, 0, 
    0, 29, 0, 0), U_J = c(10, 27, 0, 29, 11, 13, 0, 0, 0, 0, 
    0, 29, 0, 28, 13, 0, 14, 1), RT_I = c(2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(5, 5, 0, 2, 2, 
    5, 2, 5, 2, 0, 5, 5, 0, 0, 4, 4, 0, 4), cost_mean = c(3.961315, 
    4.311759, 3.640249, 3.467523, 3.305181, 4.21028, 3.593458, 
    3.956544, 3.558136, 3.638928, 4.085998, 5.716313, 3.715368, 
    3.769169, 3.778346, 3.678158, 4.022829, 3.655546)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = c(13L, 45L, 46L, 47L, 48L, 49L, 50L, 
51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.638930e+00 -1.797693e+308   3.639040e+00
I(RT_J^2)     7.680000e-02 -1.797693e+308  1.797693e+308
RT_J         -3.204700e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 109631
Valid coordinates: 8160/40800
Tested coordinates: 217293
Valid coordinates: 12240/40800
Tested coordinates: 324880
Valid coordinates: 16320/40800
Tested coordinates: 432411
Valid coordinates: 20400/40800
Tested coordinates: 542935
Valid coordinates: 24480/40800
Tested coordinates: 655810
Valid coordinates: 28560/40800
Tested coordinates: 766444
Valid coordinates: 32640/40800
Tested coordinates: 878908
Valid coordinates: 36720/40800
Tested coordinates: 987832
Tested coordinates: 1000000
Valid coordinates: 40800/40800
Tested coordinates: 1097361
Valid/Tested configurations: 40800/1097361
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 195200      9

Pruned data dimensions: [1] 57856     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.006700629473345128, 'T1_J': 0.7830168892973501, 'T2_J': 0.39173673944323456, 'U_J': 0.8877372069887078, 'U_I': 0.4810023895067815, 'I(T2_I^2)': 0.1005976652803021, 'U1_I': 0.7291962879924152, 'I(U_I^2)': 0.14314084233537588, 'T2_I': 0.8033405536761925, 'I(T2_J^2)': 0.1737440283357025, 'I(U1_I^2)': 0.8102315205063204, 'I(T1_J^2)': 0.1169844814302925, 'I(U_J^2)': 0.11075457311223516, 'RT_J': 0.019013490523158857}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(T1_J^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T2_J', 'U_I', 'U1_I', 'T1_J', 'T2_I', 'I(U1_I^2)', 'U_J']
Variables within threshold: ['RT_J']
Unique Variables: ['RT_J']
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.006700629473345128, 'T1_J': 0.7830168892973501, 'T2_J': 0.39173673944323456, 'U_J': 0.8877372069887078, 'U_I': 0.4810023895067815, 'I(T2_I^2)': 0.1005976652803021, 'U1_I': 0.7291962879924152, 'I(U_I^2)': 0.14314084233537588, 'T2_I': 0.8033405536761925, 'I(T2_J^2)': 0.1737440283357025, 'I(U1_I^2)': 0.8102315205063204, 'I(T1_J^2)': 0.1169844814302925, 'I(U_J^2)': 0.11075457311223516, 'RT_J': 0.019013490523158857}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(T1_J^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T2_J', 'U_I', 'U1_I', 'T1_J', 'T2_I', 'I(U1_I^2)', 'U_J']
Variables within threshold: ['RT_J']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
3    0    3    2    6   28  27   0    3    1

Best From Design: [2, 11, 10, 0, 29, 0, 11, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.750432
Design Best Point:
[2, 11, 10, 0, 29, 0, 11, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.695764301015
Predicted Best Point:
[0, 3, 2, 6, 28, 27, 0, 3, 1]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 3, 2, 6, 28, 27, 0, 3, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1259
        Multiplications: 	444
        Divisions: 		0
        Logical: 		0
        Reads: 			2460
        Writes: 		318
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.791573
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.695764301015
Slowdown (Predicted Best): 1.00866047551
Budget: 61/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 0, 11, 11, 6, 28, 0, 4, 2]
Step 3
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 31168
Valid coordinates: 2400/12000
Tested coordinates: 63127
Valid coordinates: 3600/12000
Tested coordinates: 95781
Valid coordinates: 4800/12000
Tested coordinates: 127564
Valid coordinates: 6000/12000
Tested coordinates: 160881
Valid coordinates: 7200/12000
Tested coordinates: 194380
Valid coordinates: 8400/12000
Tested coordinates: 226297
Valid coordinates: 9600/12000
Tested coordinates: 258828
Valid coordinates: 10800/12000
Tested coordinates: 291037
Valid coordinates: 12000/12000
Tested coordinates: 323336
Valid/Tested configurations: 12000/323336
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 207200      9

Pruned data dimensions: [1] 21545     9

Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Clean Info:
One-Level Factors: ['T1_I', 'RT_I', 'RT_J']
Two-Level Factors: ['T1_I', 'RT_I', 'RT_J']
Three-Level Factors: ['T1_I', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['T1_I', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_I', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 21545     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
2162     2    0    0    4    5   0  28    2    1
2369     2    0    7    6   29   0   0    2    1
6953     2    6    0    6   16  29   0    2    1
7509     2   11    0   11   20   0   1    2    1
9724     2    1   11    0   29  29   0    2    1
11193    2   11    7    0   29   0  29    2    1
11711    2   11   11    0   18   0  14    2    1
11948    2    4    0    0    0   0   0    2    1
13003    2    0    0   11   28  15   0    2    1
13437    2    6   11   11   13   0  29    2    1
15198    2    0    6   11    7   0  13    2    1
17156    2   11    7   11    1  29   0    2    1
17853    2    5    5    0   16  17   0    2    1
20041    2    7   11    8    0  10   0    2    1
21466    2    6    0    8   29   0  15    2    1

D-Efficiency Approximation: [1] 0.3848487

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1910
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3309
        Writes: 		355
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.466886
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		196
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			442
        Writes: 		87
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.210066
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1176
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2299
        Writes: 		290
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.21387
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		305
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			639
        Writes: 		100
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.191209
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1192
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2332
        Writes: 		305
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.24512
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1997
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3464
        Writes: 		391
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.188583
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1086
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1942
        Writes: 		230
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.188991
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		159
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			368
        Writes: 		53
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.27669
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		726
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1455
        Writes: 		204
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.183969
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		1987
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3446
        Writes: 		379
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.234061
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1015
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1820
        Writes: 		209
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.187103
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1164
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2276
        Writes: 		277
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.185503
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		783
        Multiplications: 	276
        Divisions: 		0
        Logical: 		0
        Reads: 			1562
        Writes: 		208
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.27591
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		540
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1108
        Writes: 		146
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest78.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.201453
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1160
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2071
        Writes: 		253
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest79.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.239059
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2162     2    0    0    4    5   0  28    2    1  3.466886
2369     2    0    7    6   29   0   0    2    1  3.210066
6953     2    6    0    6   16  29   0    2    1  3.213870
7509     2   11    0   11   20   0   1    2    1  3.191209
9724     2    1   11    0   29  29   0    2    1  4.245120
11193    2   11    7    0   29   0  29    2    1  3.188583
11711    2   11   11    0   18   0  14    2    1  3.188991
11948    2    4    0    0    0   0   0    2    1  3.276690
13003    2    0    0   11   28  15   0    2    1  3.183969
13437    2    6   11   11   13   0  29    2    1  3.234061
15198    2    0    6   11    7   0  13    2    1  3.187103
17156    2   11    7   11    1  29   0    2    1  3.185503
17853    2    5    5    0   16  17   0    2    1  3.275910
20041    2    7   11    8    0  10   0    2    1  3.201453
21466    2    6    0    8   29   0  15    2    1  3.239059

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2162     2    0    0    4    5   0  28    2    1  3.466886
2369     2    0    7    6   29   0   0    2    1  3.210066
6953     2    6    0    6   16  29   0    2    1  3.213870
7509     2   11    0   11   20   0   1    2    1  3.191209
9724     2    1   11    0   29  29   0    2    1  4.245120
11193    2   11    7    0   29   0  29    2    1  3.188583
11711    2   11   11    0   18   0  14    2    1  3.188991
11948    2    4    0    0    0   0   0    2    1  3.276690
13003    2    0    0   11   28  15   0    2    1  3.183969
13437    2    6   11   11   13   0  29    2    1  3.234061
15198    2    0    6   11    7   0  13    2    1  3.187103
17156    2   11    7   11    1  29   0    2    1  3.185503
17853    2    5    5    0   16  17   0    2    1  3.275910
20041    2    7   11    8    0  10   0    2    1  3.201453
21466    2    6    0    8   29   0  15    2    1  3.239059

Clean encoded design, with measurements:
      T1_Ie T1_Je T2_Ie T2_Je       U1_Ie        U_Ie        U_Je RT_Ie RT_Je
2162   -0.6  -1.0  -1.0  -0.2 -0.64285714 -1.00000000  1.00000000     0  -0.5
2369   -0.6  -1.0   0.4   0.2  1.07142857 -1.00000000 -1.00000000     0  -0.5
6953   -0.6   0.2  -1.0   0.2  0.14285714  1.07142857 -1.00000000     0  -0.5
7509   -0.6   1.2  -1.0   1.2  0.42857143 -1.00000000 -0.92857143     0  -0.5
9724   -0.6  -0.8   1.2  -1.0  1.07142857  1.07142857 -1.00000000     0  -0.5
11193  -0.6   1.2   0.4  -1.0  1.07142857 -1.00000000  1.07142857     0  -0.5
11711  -0.6   1.2   1.2  -1.0  0.28571429 -1.00000000  0.00000000     0  -0.5
11948  -0.6  -0.2  -1.0  -1.0 -1.00000000 -1.00000000 -1.00000000     0  -0.5
13003  -0.6  -1.0  -1.0   1.2  1.00000000  0.07142857 -1.00000000     0  -0.5
13437  -0.6   0.2   1.2   1.2 -0.07142857 -1.00000000  1.07142857     0  -0.5
15198  -0.6  -1.0   0.2   1.2 -0.50000000 -1.00000000 -0.07142857     0  -0.5
17156  -0.6   1.2   0.4   1.2 -0.92857143  1.07142857 -1.00000000     0  -0.5
17853  -0.6   0.0   0.0  -1.0  0.14285714  0.21428571 -1.00000000     0  -0.5
20041  -0.6   0.4   1.2   0.6 -1.00000000 -0.28571429 -1.00000000     0  -0.5
21466  -0.6   0.2  -1.0   0.6  1.07142857 -1.00000000  0.07142857     0  -0.5
      cost_mean
2162   3.466886
2369   3.210066
6953   3.213870
7509   3.191209
9724   4.245120
11193  3.188583
11711  3.188991
11948  3.276690
13003  3.183969
13437  3.234061
15198  3.187103
17156  3.185503
17853  3.275910
20041  3.201453
21466  3.239059

Anova Formula in Python: cost_mean ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + I(U_I^2) + 
    I(U_J^2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 76 10

Pruned data dimensions: [1] 15 10

Heteroscedasticity Test p-value: 0.558636884723
Heteroscedasticity transform NOT required.
Regression Step:            Df  Sum Sq Mean Sq F value Pr(>F)
I(T1_J^2)    1 0.12551 0.12551   1.170  0.392
I(T2_I^2)    1 0.15297 0.15297   1.426  0.355
I(T2_J^2)    1 0.09937 0.09937   0.926  0.437
I(U1_I^2)    1 0.04638 0.04638   0.432  0.578
I(U_I^2)     1 0.18729 0.18729   1.746  0.317
I(U_J^2)     1 0.01187 0.01187   0.111  0.771
T1_J         1 0.03078 0.03078   0.287  0.646
T2_I         1 0.07116 0.07116   0.663  0.501
T2_J         1 0.05445 0.05445   0.508  0.550
U1_I         1 0.00829 0.00829   0.077  0.807
U_I          1 0.02839 0.02839   0.265  0.658
U_J          1 0.00039 0.00039   0.004  0.957
Residuals    2 0.21454 0.10727               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
2162   3.466886
2369   3.210066
6953   3.213870
7509   3.191209
9724   4.245120
11193  3.188583
11711  3.188991
11948  3.276690
13003  3.183969
13437  3.234061
15198  3.187103
17156  3.185503
17853  3.275910
20041  3.201453
21466  3.239059

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_J': 0.6458064482895507, 'T2_J': 0.5500902303278046, 'U_J': 0.9572617584483862, 'U_I': 0.6581653884685699, 'I(T2_I^2)': 0.3548368900899628, 'U1_I': 0.8070945347815961, 'I(U_I^2)': 0.31729292754352967, 'T2_I': 0.5009409800615623, 'I(T2_J^2)': 0.43736930918933503, 'I(U1_I^2)': 0.578404258820144, 'I(T1_J^2)': 0.3924658216250567, 'I(U_J^2)': 0.7710059947579011}
Ordered Keys: 
['I(U_I^2)', 'I(T2_I^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'T2_I', 'T2_J', 'I(U1_I^2)', 'T1_J', 'U_I', 'I(U_J^2)', 'U1_I', 'U_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 76 10

Pruned data dimensions: [1] 15 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + 
    I(U1_I^2) + I(U_I^2) + I(U_J^2) + T1_J + T2_I + T2_J + U1_I + 
    U_I + U_J, tau = 0.05, data = structure(list(T1_I = c(2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), T1_J = c(0, 0, 6, 
11, 1, 11, 11, 4, 0, 6, 0, 11, 5, 7, 6), T2_I = c(0, 7, 0, 0, 
11, 7, 11, 0, 0, 11, 6, 7, 5, 11, 0), T2_J = c(4, 6, 6, 11, 0, 
0, 0, 0, 11, 11, 11, 11, 0, 8, 8), U1_I = c(5, 29, 16, 20, 29, 
29, 18, 0, 28, 13, 7, 1, 16, 0, 29), U_I = c(0, 0, 29, 0, 29, 
0, 0, 0, 15, 0, 0, 29, 17, 10, 0), U_J = c(28, 0, 0, 1, 0, 29, 
14, 0, 0, 29, 13, 0, 0, 0, 15), RT_I = c(2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1), cost_mean = c(3.466886, 3.210066, 3.21387, 
3.191209, 4.24512, 3.188583, 3.188991, 3.27669, 3.183969, 3.234061, 
3.187103, 3.185503, 3.27591, 3.201453, 3.239059)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = 62:76, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.457230e+00 -1.797693e+308  1.797693e+308
I(T1_J^2)    -4.900000e-04 -1.797693e+308  1.797693e+308
I(T2_I^2)     7.840000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)     1.670000e-03 -1.797693e+308  1.797693e+308
I(U1_I^2)     1.600000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)      1.160000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)     -6.700000e-04 -1.797693e+308  1.797693e+308
T1_J         -4.317000e-02 -1.797693e+308  1.797693e+308
T2_I         -5.835000e-02 -1.797693e+308  1.797693e+308
T2_J         -3.984000e-02 -1.797693e+308  1.797693e+308
U1_I         -4.784000e-02 -1.797693e+308  1.797693e+308
U_I          -1.414000e-02 -1.797693e+308  1.797693e+308
U_J           3.106000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 99160
Valid coordinates: 7200/36000
Tested coordinates: 196893
Valid coordinates: 10800/36000
Tested coordinates: 291933
Valid coordinates: 14400/36000
Tested coordinates: 387792
Valid coordinates: 18000/36000
Tested coordinates: 486209
Valid coordinates: 21600/36000
Tested coordinates: 583730
Valid coordinates: 25200/36000
Tested coordinates: 679009
Valid coordinates: 28800/36000
Tested coordinates: 776025
Valid coordinates: 32400/36000
Tested coordinates: 871947
Valid coordinates: 36000/36000
Tested coordinates: 968824
Valid/Tested configurations: 36000/968824
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 243200      9

Pruned data dimensions: [1] 57545     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_J': 0.6458064482895507, 'T2_J': 0.5500902303278046, 'U_J': 0.9572617584483862, 'U_I': 0.6581653884685699, 'I(T2_I^2)': 0.3548368900899628, 'U1_I': 0.8070945347815961, 'I(U_I^2)': 0.31729292754352967, 'T2_I': 0.5009409800615623, 'I(T2_J^2)': 0.43736930918933503, 'I(U1_I^2)': 0.578404258820144, 'I(T1_J^2)': 0.3924658216250567, 'I(U_J^2)': 0.7710059947579011}
Ordered Keys: 
['I(U_I^2)', 'I(T2_I^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'T2_I', 'T2_J', 'I(U1_I^2)', 'T1_J', 'U_I', 'I(U_J^2)', 'U1_I', 'U_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_J': 0.6458064482895507, 'T2_J': 0.5500902303278046, 'U_J': 0.9572617584483862, 'U_I': 0.6581653884685699, 'I(T2_I^2)': 0.3548368900899628, 'U1_I': 0.8070945347815961, 'I(U_I^2)': 0.31729292754352967, 'T2_I': 0.5009409800615623, 'I(T2_J^2)': 0.43736930918933503, 'I(U1_I^2)': 0.578404258820144, 'I(T1_J^2)': 0.3924658216250567, 'I(U_J^2)': 0.7710059947579011}
Ordered Keys: 
['I(U_I^2)', 'I(T2_I^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'T2_I', 'T2_J', 'I(U1_I^2)', 'T1_J', 'U_I', 'I(U_J^2)', 'U1_I', 'U_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
15304    1    1    3    8   23  11   0    3    1

Best From Design: [2, 0, 0, 11, 28, 15, 0, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.750432
Design Best Point:
[2, 0, 0, 11, 28, 15, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.670248305838
Predicted Best Point:
[1, 1, 3, 8, 23, 11, 0, 3, 1]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 1, 3, 8, 23, 11, 0, 3, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		729
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1465
        Writes: 		203
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest80.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581517
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_I': 2, 'RT_I': 2, 'RT_J': 1}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.670248305838
Slowdown (Predicted Best): 0.964442181258
Budget: 76/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 0, 11, 11, 6, 28, 0, 4, 2]
Final Best Point: 
[0, 0, 11, 11, 6, 28, 0, 4, 2]
Ending DLMT
Best Point: [0, 0, 11, 11, 6, 28, 0, 4, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.52586131856
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.52586131856
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [0, 0, 11, 11, 6, 28, 0, 4, 2]={'T1_I': 1, 'T1_J': 1, 'U_J': 1, 'U_I': 29, 'T2_I': 2048, 'T2_J': 2048, 'U1_I': 7, 'RT_I': 16, 'RT_J': 4}, cost=3.113279e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-8580.71, runs=80
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 16
 RT_J = 4
 T1_I = 1
 T1_J = 1
 T2_I = 2048
 T2_J = 2048
 U1_I = 7
 U_I = 29
 U_J = 1
 cost_mean = 3.113279
 points = 80
 speedup = 1.52586131856
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2775
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			4777
        Writes: 		529
        Comparisons:		15
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
