
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84041
Valid coordinates: 3520/17600
Tested coordinates: 167767
Valid coordinates: 5280/17600
Tested coordinates: 251883
Valid coordinates: 7040/17600
Tested coordinates: 335767
Valid coordinates: 8800/17600
Tested coordinates: 419353
Valid coordinates: 10560/17600
Tested coordinates: 503746
Valid coordinates: 12320/17600
Tested coordinates: 588535
Valid coordinates: 14080/17600
Tested coordinates: 671574
Valid coordinates: 15840/17600
Tested coordinates: 752559
Valid coordinates: 17600/17600
Tested coordinates: 836584
Valid/Tested configurations: 17600/836584
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
2326    11    0    0    4   17   0   9    5    2
2773    11   11    0    0   28   0  28    1    2
3780     2    0    5    4   14   0  29    3    0
4692     6    8    6    8   29  29   0    2    4
7194     1    5    0    7    8   0  29    0    5
7523     0    7   11    8   29   0  15    1    0
8661     0    9    4   11   15   1   0    5    0
8821     6    2   11   10    0   0  28    5    2
9271    10    0   11    4   10  21   0    0    0
9364     0    0    3   11   27  16   0    0    3
9370     1   11    0   11    0   4   0    2    0
9430     0    6    5    6    0  15   0    2    2
10193    6    6    0    0   25  16   0    5    0
10894    9    4   10    0   18   0   0    0    2
10958    0    1   11    0    9  29   0    3    4
11471   11    1   11   10   26  10   0    2    5
12105    6   11   10   11   19  13   0    3    3
12165    5    6    0   11   17   0  14    2    3
14251    8    1    8    0    0   0  17    2    5
14483    7   11    9    0    5   0  13    0    5
15685   10    6    0   11    8  27   0    0    0
17567    6    0    0    4   29   1   0    0    2

D-Efficiency Approximation: [1] 0.2193811

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		6362
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10033
        Writes: 		1037
        Comparisons:		13
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.692519
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1131
        Multiplications: 	408
        Divisions: 		0
        Logical: 		0
        Reads: 			2195
        Writes: 		262
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.408027
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		3575
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5700
        Writes: 		600
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581038
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		7839
        Multiplications: 	2380
        Divisions: 		0
        Logical: 		0
        Reads: 			12125
        Writes: 		1283
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.790551
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		597
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1343
        Writes: 		155
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.587454
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		601
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1177
        Writes: 		161
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.577459
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		369
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			841
        Writes: 		121
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.598104
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		14937
        Multiplications: 	4488
        Divisions: 		0
        Logical: 		0
        Reads: 			22551
        Writes: 		2277
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.390889
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		266
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			596
        Writes: 		101
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.88252
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2084
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3407
        Writes: 		393
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684281
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		118
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			287
        Writes: 		50
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.585622
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		1251
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2230
        Writes: 		257
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.31468
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		520
        Multiplications: 	200
        Divisions: 		0
        Logical: 		0
        Reads: 			1170
        Writes: 		170
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.538964
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		77
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			192
        Writes: 		47
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.669309
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		8731
        Multiplications: 	2652
        Divisions: 		0
        Logical: 		0
        Reads: 			13445
        Writes: 		1399
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.197849
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		6838
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10762
        Writes: 		1133
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.129327
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2624
        Multiplications: 	828
        Divisions: 		0
        Logical: 		0
        Reads: 			4320
        Writes: 		483
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.323938
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1448
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2547
        Writes: 		291
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.40109
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		3040
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5190
        Writes: 		537
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.785539
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		450
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1017
        Writes: 		120
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582812
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		327
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			731
        Writes: 		119
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.246902
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		203
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			441
        Writes: 		86
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.626328
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2326    11    0    0    4   17   0   9    5    2  6.692519
2773    11   11    0    0   28   0  28    1    2  3.408027
3780     2    0    5    4   14   0  29    3    0  4.581038
4692     6    8    6    8   29  29   0    2    4  3.790551
7194     1    5    0    7    8   0  29    0    5  4.587454
7523     0    7   11    8   29   0  15    1    0  3.577459
8661     0    9    4   11   15   1   0    5    0  3.598104
8821     6    2   11   10    0   0  28    5    2  7.390889
9271    10    0   11    4   10  21   0    0    0  3.882520
9364     0    0    3   11   27  16   0    0    3  4.684281
9370     1   11    0   11    0   4   0    2    0  4.585622
9430     0    6    5    6    0  15   0    2    2  3.314680
10193    6    6    0    0   25  16   0    5    0  5.538964
10894    9    4   10    0   18   0   0    0    2  4.669309
10958    0    1   11    0    9  29   0    3    4  4.197849
11471   11    1   11   10   26  10   0    2    5  4.129327
12105    6   11   10   11   19  13   0    3    3  3.323938
12165    5    6    0   11   17   0  14    2    3  3.401090
14251    8    1    8    0    0   0  17    2    5  5.785539
14483    7   11    9    0    5   0  13    0    5  4.582812
15685   10    6    0   11    8  27   0    0    0  4.246902
17567    6    0    0    4   29   1   0    0    2  3.626328

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2326    11    0    0    4   17   0   9    5    2  6.692519
2773    11   11    0    0   28   0  28    1    2  3.408027
3780     2    0    5    4   14   0  29    3    0  4.581038
4692     6    8    6    8   29  29   0    2    4  3.790551
7194     1    5    0    7    8   0  29    0    5  4.587454
7523     0    7   11    8   29   0  15    1    0  3.577459
8661     0    9    4   11   15   1   0    5    0  3.598104
8821     6    2   11   10    0   0  28    5    2  7.390889
9271    10    0   11    4   10  21   0    0    0  3.882520
9364     0    0    3   11   27  16   0    0    3  4.684281
9370     1   11    0   11    0   4   0    2    0  4.585622
9430     0    6    5    6    0  15   0    2    2  3.314680
10193    6    6    0    0   25  16   0    5    0  5.538964
10894    9    4   10    0   18   0   0    0    2  4.669309
10958    0    1   11    0    9  29   0    3    4  4.197849
11471   11    1   11   10   26  10   0    2    5  4.129327
12105    6   11   10   11   19  13   0    3    3  3.323938
12165    5    6    0   11   17   0  14    2    3  3.401090
14251    8    1    8    0    0   0  17    2    5  5.785539
14483    7   11    9    0    5   0  13    0    5  4.582812
15685   10    6    0   11    8  27   0    0    0  4.246902
17567    6    0    0    4   29   1   0    0    2  3.626328

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
2326   0.8333333 -1.0000000 -1.0000000 -0.3333333  0.13333333 -1.00000000
2773   0.8333333  0.8333333 -1.0000000 -1.0000000  0.86666667 -1.00000000
3780  -0.6666667 -1.0000000 -0.1666667 -0.3333333 -0.06666667 -1.00000000
4692   0.0000000  0.3333333  0.0000000  0.3333333  0.93333333  0.93333333
7194  -0.8333333 -0.1666667 -1.0000000  0.1666667 -0.46666667 -1.00000000
7523  -1.0000000  0.1666667  0.8333333  0.3333333  0.93333333 -1.00000000
8661  -1.0000000  0.5000000 -0.3333333  0.8333333  0.00000000 -0.93333333
8821   0.0000000 -0.6666667  0.8333333  0.6666667 -1.00000000 -1.00000000
9271   0.6666667 -1.0000000  0.8333333 -0.3333333 -0.33333333  0.40000000
9364  -1.0000000 -1.0000000 -0.5000000  0.8333333  0.80000000  0.06666667
9370  -0.8333333  0.8333333 -1.0000000  0.8333333 -1.00000000 -0.73333333
9430  -1.0000000  0.0000000 -0.1666667  0.0000000 -1.00000000  0.00000000
10193  0.0000000  0.0000000 -1.0000000 -1.0000000  0.66666667  0.06666667
10894  0.5000000 -0.3333333  0.6666667 -1.0000000  0.20000000 -1.00000000
10958 -1.0000000 -0.8333333  0.8333333 -1.0000000 -0.40000000  0.93333333
11471  0.8333333 -0.8333333  0.8333333  0.6666667  0.73333333 -0.33333333
12105  0.0000000  0.8333333  0.6666667  0.8333333  0.26666667 -0.13333333
12165 -0.1666667  0.0000000 -1.0000000  0.8333333  0.13333333 -1.00000000
14251  0.3333333 -0.8333333  0.3333333 -1.0000000 -1.00000000 -1.00000000
14483  0.1666667  0.8333333  0.5000000 -1.0000000 -0.66666667 -1.00000000
15685  0.6666667  0.0000000 -1.0000000  0.8333333 -0.46666667  0.80000000
17567  0.0000000 -1.0000000 -1.0000000 -0.3333333  0.93333333 -0.93333333
             U_Je      RT_Ie      RT_Je cost_mean
2326  -0.40000000  0.6666667 -0.3333333  6.692519
2773   0.86666667 -0.6666667 -0.3333333  3.408027
3780   0.93333333  0.0000000 -1.0000000  4.581038
4692  -1.00000000 -0.3333333  0.3333333  3.790551
7194   0.93333333 -1.0000000  0.6666667  4.587454
7523   0.00000000 -0.6666667 -1.0000000  3.577459
8661  -1.00000000  0.6666667 -1.0000000  3.598104
8821   0.86666667  0.6666667 -0.3333333  7.390889
9271  -1.00000000 -1.0000000 -1.0000000  3.882520
9364  -1.00000000 -1.0000000  0.0000000  4.684281
9370  -1.00000000 -0.3333333 -1.0000000  4.585622
9430  -1.00000000 -0.3333333 -0.3333333  3.314680
10193 -1.00000000  0.6666667 -1.0000000  5.538964
10894 -1.00000000 -1.0000000 -0.3333333  4.669309
10958 -1.00000000  0.0000000  0.3333333  4.197849
11471 -1.00000000 -0.3333333  0.6666667  4.129327
12105 -1.00000000  0.0000000  0.0000000  3.323938
12165 -0.06666667 -0.3333333  0.0000000  3.401090
14251  0.13333333 -0.3333333  0.6666667  5.785539
14483 -0.13333333 -1.0000000  0.6666667  4.582812
15685 -1.00000000 -1.0000000 -1.0000000  4.246902
17567 -1.00000000 -1.0000000 -0.3333333  3.626328

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.672098019943
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1  0.766   0.766   0.512  0.526
I(T1_J^2)    1  3.430   3.430   2.292  0.227
I(T2_I^2)    1  0.003   0.003   0.002  0.968
I(T2_J^2)    1  0.053   0.053   0.036  0.862
I(U1_I^2)    1  2.646   2.646   1.768  0.276
I(U_I^2)     1  1.296   1.296   0.866  0.421
I(U_J^2)     1  0.525   0.525   0.351  0.595
I(RT_I^2)    1  5.809   5.809   3.882  0.143
I(RT_J^2)    1  0.513   0.513   0.343  0.599
T1_I         1  0.552   0.552   0.369  0.586
T1_J         1  0.205   0.205   0.137  0.736
T2_I         1  0.167   0.167   0.112  0.760
T2_J         1  0.304   0.304   0.203  0.683
U1_I         1  2.327   2.327   1.555  0.301
U_I          1  0.143   0.143   0.096  0.777
U_J          1  0.110   0.110   0.074  0.804
RT_I         1  1.351   1.351   0.903  0.412
RT_J         1  0.001   0.001   0.001  0.979
Residuals    3  4.490   1.497               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
2326   6.692519
2773   3.408027
3780   4.581038
4692   3.790551
7194   4.587454
7523   3.577459
8661   3.598104
8821   7.390889
9271   3.882520
9364   4.684281
9370   4.585622
9430   3.314680
10193  5.538964
10894  4.669309
10958  4.197849
11471  4.129327
12105  3.323938
12165  3.401090
14251  5.785539
14483  4.582812
15685  4.246902
17567  3.626328

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.5993965418042192, 'T1_J': 0.7361729701347373, 'T2_J': 0.6830030023814766, 'U_J': 0.803620702336174, 'U_I': 0.7771256708027887, 'I(T2_I^2)': 0.9683584341685977, 'T2_I': 0.7601849399945044, 'U1_I': 0.30092380490403453, 'I(U_I^2)': 0.4206751155030742, 'I(RT_I^2)': 0.14342203348021806, 'I(T2_J^2)': 0.8624019874786426, 'I(U1_I^2)': 0.27568774781908056, 'RT_I': 0.4121706341335774, 'I(T1_I^2)': 0.5260824570725005, 'I(T1_J^2)': 0.22728746808179356, 'I(U_J^2)': 0.5952629742484933, 'RT_J': 0.9792861813073802, 'T1_I': 0.5864070289277804}
Ordered Keys: 
['I(RT_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'U1_I', 'RT_I', 'I(U_I^2)', 'I(T1_I^2)', 'T1_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_J', 'T1_J', 'T2_I', 'U_I', 'U_J', 'I(T2_J^2)', 'I(T2_I^2)', 'RT_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.15, data = structure(list(T1_I = c(11, 
11, 2, 6, 1, 0, 0, 6, 10, 0, 1, 0, 6, 9, 0, 11, 6, 5, 8, 7, 10, 
6), T1_J = c(0, 11, 0, 8, 5, 7, 9, 2, 0, 0, 11, 6, 6, 4, 1, 1, 
11, 6, 1, 11, 6, 0), T2_I = c(0, 0, 5, 6, 0, 11, 4, 11, 11, 3, 
0, 5, 0, 10, 11, 11, 10, 0, 8, 9, 0, 0), T2_J = c(4, 0, 4, 8, 
7, 8, 11, 10, 4, 11, 11, 6, 0, 0, 0, 10, 11, 11, 0, 0, 11, 4), 
    U1_I = c(17, 28, 14, 29, 8, 29, 15, 0, 10, 27, 0, 0, 25, 
    18, 9, 26, 19, 17, 0, 5, 8, 29), U_I = c(0, 0, 0, 29, 0, 
    0, 1, 0, 21, 16, 4, 15, 16, 0, 29, 10, 13, 0, 0, 0, 27, 1
    ), U_J = c(9, 28, 29, 0, 29, 15, 0, 28, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 14, 17, 13, 0, 0), RT_I = c(5, 1, 3, 2, 0, 1, 5, 
    5, 0, 0, 2, 2, 5, 0, 3, 2, 3, 2, 2, 0, 0, 0), RT_J = c(2, 
    2, 0, 4, 5, 0, 0, 2, 0, 3, 0, 2, 0, 2, 4, 5, 3, 3, 5, 5, 
    0, 2), cost_mean = c(6.692519, 3.408027, 4.581038, 3.790551, 
    4.587454, 3.577459, 3.598104, 7.390889, 3.88252, 4.684281, 
    4.585622, 3.31468, 5.538964, 4.669309, 4.197849, 4.129327, 
    3.323938, 3.40109, 5.785539, 4.582812, 4.246902, 3.626328
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("2326", "2773", 
"3780", "4692", "7194", "7523", "8661", "8821", "9271", "9364", 
"9370", "9430", "10193", "10894", "10958", "11471", "12105", 
"12165", "14251", "14483", "15685", "17567"), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.636960e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.668000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)     1.924000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)     1.481000e-02 -1.797693e+308  1.797693e+308
I(T2_J^2)     1.681000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)     6.830000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)     -2.140000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)     -2.810000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     1.702100e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     1.124200e-01 -1.797693e+308  1.797693e+308
T1_I          1.558000e-01 -1.797693e+308  1.797693e+308
T1_J         -2.865000e-01 -1.797693e+308  1.797693e+308
T2_I         -1.885900e-01 -1.797693e+308  1.797693e+308
T2_J         -1.334400e-01 -1.797693e+308  1.797693e+308
U1_I         -2.250500e-01 -1.797693e+308  1.797693e+308
U_I           1.149200e-01 -1.797693e+308  1.797693e+308
U_J           1.359800e-01 -1.797693e+308  1.797693e+308
RT_I         -5.192500e-01 -1.797693e+308  1.797693e+308
RT_J         -4.309900e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 249556
Valid coordinates: 10560/52800
Tested coordinates: 502053
Valid coordinates: 15840/52800
Tested coordinates: 748049
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1001639
Valid coordinates: 26400/52800
Tested coordinates: 1250129
Valid coordinates: 31680/52800
Tested coordinates: 1498811
Valid coordinates: 36960/52800
Tested coordinates: 1752504
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2010516
Valid coordinates: 47520/52800
Tested coordinates: 2263683
Valid coordinates: 52800/52800
Tested coordinates: 2521756
Valid/Tested configurations: 52800/2521756
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.5993965418042192, 'T1_J': 0.7361729701347373, 'T2_J': 0.6830030023814766, 'U_J': 0.803620702336174, 'U_I': 0.7771256708027887, 'I(T2_I^2)': 0.9683584341685977, 'T2_I': 0.7601849399945044, 'U1_I': 0.30092380490403453, 'I(U_I^2)': 0.4206751155030742, 'I(RT_I^2)': 0.14342203348021806, 'I(T2_J^2)': 0.8624019874786426, 'I(U1_I^2)': 0.27568774781908056, 'RT_I': 0.4121706341335774, 'I(T1_I^2)': 0.5260824570725005, 'I(T1_J^2)': 0.22728746808179356, 'I(U_J^2)': 0.5952629742484933, 'RT_J': 0.9792861813073802, 'T1_I': 0.5864070289277804}
Ordered Keys: 
['I(RT_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'U1_I', 'RT_I', 'I(U_I^2)', 'I(T1_I^2)', 'T1_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_J', 'T1_J', 'T2_I', 'U_I', 'U_J', 'I(T2_J^2)', 'I(T2_I^2)', 'RT_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.5993965418042192, 'T1_J': 0.7361729701347373, 'T2_J': 0.6830030023814766, 'U_J': 0.803620702336174, 'U_I': 0.7771256708027887, 'I(T2_I^2)': 0.9683584341685977, 'T2_I': 0.7601849399945044, 'U1_I': 0.30092380490403453, 'I(U_I^2)': 0.4206751155030742, 'I(RT_I^2)': 0.14342203348021806, 'I(T2_J^2)': 0.8624019874786426, 'I(U1_I^2)': 0.27568774781908056, 'RT_I': 0.4121706341335774, 'I(T1_I^2)': 0.5260824570725005, 'I(T1_J^2)': 0.22728746808179356, 'I(U_J^2)': 0.5952629742484933, 'RT_J': 0.9792861813073802, 'T1_I': 0.5864070289277804}
Ordered Keys: 
['I(RT_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'U1_I', 'RT_I', 'I(U_I^2)', 'I(T1_I^2)', 'T1_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_J', 'T1_J', 'T2_I', 'U_I', 'U_J', 'I(T2_J^2)', 'I(T2_I^2)', 'RT_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
53060    0    6    3    6   19   0   1    1    2

Best From Design: [0, 6, 5, 6, 0, 15, 0, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.857158
Baseline Point:
4.857158
Design Best Point:
[0, 6, 5, 6, 0, 15, 0, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.682431990065
Predicted Best Point:
[0, 6, 3, 6, 19, 0, 1, 1, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 6, 3, 6, 19, 0, 1, 1, 2]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		258
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			557
        Writes: 		91
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.66784
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.682431990065
Slowdown (Predicted Best): 0.755141175148
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.31468
Current Best Point: 
[0, 6, 5, 6, 0, 15, 0, 2, 2]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 85204
Valid coordinates: 3520/17600
Tested coordinates: 169396
Valid coordinates: 5280/17600
Tested coordinates: 256733
Valid coordinates: 7040/17600
Tested coordinates: 342276
Valid coordinates: 8800/17600
Tested coordinates: 427214
Valid coordinates: 10560/17600
Tested coordinates: 513177
Valid coordinates: 12320/17600
Tested coordinates: 594497
Valid coordinates: 14080/17600
Tested coordinates: 681464
Valid coordinates: 15840/17600
Tested coordinates: 764885
Valid coordinates: 17600/17600
Tested coordinates: 852027
Valid/Tested configurations: 17600/852027
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1335     0    6   11    7   29   0   7    1    1
4132     5    0    5    6    0  16   0    2    3
12473    3    0   11    0   27  29   0    0    0
19883    0    0    8   11   22   0  29    1    3
20813    6   11    6    0   29  23   0    0    3
26630   11    5   11    0   14  14   0    0    3
29565    6    5   11   11   28   5   0    2    5
39033    5    1    0   11   15  29   0    2    2
45645   11    3    0    0   29   0  15    3    3
49388   11    7   11   10    1  29   0    5    1
50428    5    5    6    0   11   0   0    2    0
53949    9   11   11    0    3   0  29    2    5
64085    6    4    6    6   26   0  28    5    0
64249   11    0    0    7   24   1   0    0    5
64465    0   11    4   11   11   0   0    5    1
66595    0    2    0    0    0  13   0    5    0
68071   10    0   11   10    0   0  16    0    0
74232    3    6    3   11    0   0  13    0    5
82037   11   11    0   11   19  17   0    1    0
83052    6    0   11    2   13   0  13    5    2
85141    5    7    0    7   10   0  29    0    3
87032    0    6    6    6   20  29   0    2    5

D-Efficiency Approximation: [1] 0.230529

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		402
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			831
        Writes: 		129
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.679836
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		2484
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4092
        Writes: 		444
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.500615
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		357
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			792
        Writes: 		138
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.602014
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1285
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2483
        Writes: 		286
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.359576
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2905
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4685
        Writes: 		528
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.542238
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1837
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3017
        Writes: 		342
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.258214
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		4578
        Multiplications: 	1452
        Divisions: 		0
        Logical: 		0
        Reads: 			7463
        Writes: 		802
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.051533
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2134
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3718
        Writes: 		435
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.255853
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2854
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4657
        Writes: 		509
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.799101
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2066
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3970
        Writes: 		449
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.775004
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		75
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			192
        Writes: 		45
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.753633
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		3771
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6412
        Writes: 		665
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.967117
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		13314
        Multiplications: 	3960
        Divisions: 		0
        Logical: 		0
        Reads: 			19951
        Writes: 		2036
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.27828
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1094
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2111
        Writes: 		249
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.101767
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1071
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2079
        Writes: 		235
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582091
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		447
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1034
        Writes: 		131
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.567822
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		180
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			411
        Writes: 		52
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581957
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 8 must be greater than the stride value 8; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		440
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			998
        Writes: 		112
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.674565
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		254
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			580
        Writes: 		107
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.559506
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		8169
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12672
        Writes: 		1299
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.994226
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		380
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			860
        Writes: 		107
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583897
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		15430
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23307
        Writes: 		2394
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.116193
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1335     0    6   11    7   29   0   7    1    1  3.679836
4132     5    0    5    6    0  16   0    2    3  3.500615
12473    3    0   11    0   27  29   0    0    0  4.602014
19883    0    0    8   11   22   0  29    1    3  3.359576
20813    6   11    6    0   29  23   0    0    3  3.542238
26630   11    5   11    0   14  14   0    0    3  3.258214
29565    6    5   11   11   28   5   0    2    5  4.051533
39033    5    1    0   11   15  29   0    2    2  4.255853
45645   11    3    0    0   29   0  15    3    3  3.799101
49388   11    7   11   10    1  29   0    5    1  5.775004
50428    5    5    6    0   11   0   0    2    0  3.753633
53949    9   11   11    0    3   0  29    2    5  3.967117
64085    6    4    6    6   26   0  28    5    0  6.278280
64249   11    0    0    7   24   1   0    0    5  4.101767
64465    0   11    4   11   11   0   0    5    1  4.582091
66595    0    2    0    0    0  13   0    5    0  5.567822
68071   10    0   11   10    0   0  16    0    0  4.581957
74232    3    6    3   11    0   0  13    0    5  4.674565
82037   11   11    0   11   19  17   0    1    0  3.559506
83052    6    0   11    2   13   0  13    5    2  7.994226
85141    5    7    0    7   10   0  29    0    3  4.583897
87032    0    6    6    6   20  29   0    2    5  4.116193

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1335     0    6   11    7   29   0   7    1    1  3.679836
4132     5    0    5    6    0  16   0    2    3  3.500615
12473    3    0   11    0   27  29   0    0    0  4.602014
19883    0    0    8   11   22   0  29    1    3  3.359576
20813    6   11    6    0   29  23   0    0    3  3.542238
26630   11    5   11    0   14  14   0    0    3  3.258214
29565    6    5   11   11   28   5   0    2    5  4.051533
39033    5    1    0   11   15  29   0    2    2  4.255853
45645   11    3    0    0   29   0  15    3    3  3.799101
49388   11    7   11   10    1  29   0    5    1  5.775004
50428    5    5    6    0   11   0   0    2    0  3.753633
53949    9   11   11    0    3   0  29    2    5  3.967117
64085    6    4    6    6   26   0  28    5    0  6.278280
64249   11    0    0    7   24   1   0    0    5  4.101767
64465    0   11    4   11   11   0   0    5    1  4.582091
66595    0    2    0    0    0  13   0    5    0  5.567822
68071   10    0   11   10    0   0  16    0    0  4.581957
74232    3    6    3   11    0   0  13    0    5  4.674565
82037   11   11    0   11   19  17   0    1    0  3.559506
83052    6    0   11    2   13   0  13    5    2  7.994226
85141    5    7    0    7   10   0  29    0    3  4.583897
87032    0    6    6    6   20  29   0    2    5  4.116193

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
1335  -1.0000000  0.0000000  0.8333333  0.1666667  0.93333333 -1.00000000
4132  -0.1666667 -1.0000000 -0.1666667  0.0000000 -1.00000000  0.06666667
12473 -0.5000000 -1.0000000  0.8333333 -1.0000000  0.80000000  0.93333333
19883 -1.0000000 -1.0000000  0.3333333  0.8333333  0.46666667 -1.00000000
20813  0.0000000  0.8333333  0.0000000 -1.0000000  0.93333333  0.53333333
26630  0.8333333 -0.1666667  0.8333333 -1.0000000 -0.06666667 -0.06666667
29565  0.0000000 -0.1666667  0.8333333  0.8333333  0.86666667 -0.66666667
39033 -0.1666667 -0.8333333 -1.0000000  0.8333333  0.00000000  0.93333333
45645  0.8333333 -0.5000000 -1.0000000 -1.0000000  0.93333333 -1.00000000
49388  0.8333333  0.1666667  0.8333333  0.6666667 -0.93333333  0.93333333
50428 -0.1666667 -0.1666667  0.0000000 -1.0000000 -0.26666667 -1.00000000
53949  0.5000000  0.8333333  0.8333333 -1.0000000 -0.80000000 -1.00000000
64085  0.0000000 -0.3333333  0.0000000  0.0000000  0.73333333 -1.00000000
64249  0.8333333 -1.0000000 -1.0000000  0.1666667  0.60000000 -0.93333333
64465 -1.0000000  0.8333333 -0.3333333  0.8333333 -0.26666667 -1.00000000
66595 -1.0000000 -0.6666667 -1.0000000 -1.0000000 -1.00000000 -0.13333333
68071  0.6666667 -1.0000000  0.8333333  0.6666667 -1.00000000 -1.00000000
74232 -0.5000000  0.0000000 -0.5000000  0.8333333 -1.00000000 -1.00000000
82037  0.8333333  0.8333333 -1.0000000  0.8333333  0.26666667  0.13333333
83052  0.0000000 -1.0000000  0.8333333 -0.6666667 -0.13333333 -1.00000000
85141 -0.1666667  0.1666667 -1.0000000  0.1666667 -0.33333333 -1.00000000
87032 -1.0000000  0.0000000  0.0000000  0.0000000  0.33333333  0.93333333
             U_Je      RT_Ie      RT_Je cost_mean
1335  -0.53333333 -0.6666667 -0.6666667  3.679836
4132  -1.00000000 -0.3333333  0.0000000  3.500615
12473 -1.00000000 -1.0000000 -1.0000000  4.602014
19883  0.93333333 -0.6666667  0.0000000  3.359576
20813 -1.00000000 -1.0000000  0.0000000  3.542238
26630 -1.00000000 -1.0000000  0.0000000  3.258214
29565 -1.00000000 -0.3333333  0.6666667  4.051533
39033 -1.00000000 -0.3333333 -0.3333333  4.255853
45645  0.00000000  0.0000000  0.0000000  3.799101
49388 -1.00000000  0.6666667 -0.6666667  5.775004
50428 -1.00000000 -0.3333333 -1.0000000  3.753633
53949  0.93333333 -0.3333333  0.6666667  3.967117
64085  0.86666667  0.6666667 -1.0000000  6.278280
64249 -1.00000000 -1.0000000  0.6666667  4.101767
64465 -1.00000000  0.6666667 -0.6666667  4.582091
66595 -1.00000000  0.6666667 -1.0000000  5.567822
68071  0.06666667 -1.0000000 -1.0000000  4.581957
74232 -0.13333333 -1.0000000  0.6666667  4.674565
82037 -1.00000000 -0.6666667 -1.0000000  3.559506
83052 -0.13333333  0.6666667 -0.3333333  7.994226
85141  0.93333333 -1.0000000  0.0000000  4.583897
87032 -1.00000000 -0.3333333  0.6666667  4.116193

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.795021198013
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value  Pr(>F)    
I(T1_I^2)    1  0.043   0.043   0.092 0.76464    
I(T1_J^2)    1  4.837   4.837  10.315 0.00361 ** 
I(T2_I^2)    1  0.287   0.287   0.612 0.44144    
I(T2_J^2)    1  0.257   0.257   0.549 0.46581    
I(U1_I^2)    1  3.960   3.960   8.446 0.00755 ** 
I(U_I^2)     1  0.602   0.602   1.284 0.26783    
I(U_J^2)     1  0.801   0.801   1.708 0.20312    
I(RT_I^2)    1 19.663  19.663  41.937 8.8e-07 ***
I(RT_J^2)    1  0.412   0.412   0.879 0.35757    
T1_I         1  2.126   2.126   4.534 0.04326 *  
T1_J         1  0.443   0.443   0.944 0.34046    
T2_I         1  0.801   0.801   1.708 0.20317    
T2_J         1  0.053   0.053   0.114 0.73866    
U1_I         1  0.587   0.587   1.252 0.27389    
U_I          1  0.899   0.899   1.918 0.17834    
U_J          1  0.713   0.713   1.520 0.22911    
RT_I         1  2.686   2.686   5.730 0.02451 *  
RT_J         1  0.123   0.123   0.262 0.61353    
Residuals   25 11.722   0.469                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1335   3.679836
4132   3.500615
12473  4.602014
19883  3.359576
20813  3.542238
26630  3.258214
29565  4.051533
39033  4.255853
45645  3.799101
49388  5.775004
50428  3.753633
53949  3.967117
64085  6.278280
64249  4.101767
64465  4.582091
66595  5.567822
68071  4.581957
74232  4.674565
82037  3.559506
83052  7.994226
85141  4.583897
87032  4.116193

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.3575679173624636, 'T1_J': 0.3404563665410141, 'T2_J': 0.7386567150199409, 'U_J': 0.22911488688082665, 'U_I': 0.17833569065119126, 'I(T2_I^2)': 0.4414441288882144, 'T2_I': 0.2031722432699095, 'U1_I': 0.2738855932323948, 'I(U_I^2)': 0.2678267128952887, 'I(RT_I^2)': 8.798385664142921e-07, 'I(T2_J^2)': 0.4658110041383713, 'I(U1_I^2)': 0.007554655918319127, 'RT_I': 0.024505654274205188, 'I(T1_I^2)': 0.7646412115604725, 'I(T1_J^2)': 0.0036104240063322044, 'I(U_J^2)': 0.2031211387339069, 'RT_J': 0.6135324150031551, 'T1_I': 0.043256641963299945}
Ordered Keys: 
['I(RT_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'RT_I', 'T1_I', 'U_I', 'I(U_J^2)', 'T2_I', 'U_J', 'I(U_I^2)', 'U1_I', 'T1_J', 'I(RT_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'RT_J', 'T2_J', 'I(T1_I^2)']
Variables within threshold: ['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'T1_J', 'I(U1_I^2)', 'U1_I']
Predicting Best Values for: ['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'T1_J', 'I(U1_I^2)', 'U1_I']
Using Model: cost_mean ~ I(RT_I^2) + RT_I + I(T1_J^2) + T1_J + I(U1_I^2) + U1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_I^2) + RT_I + I(T1_J^2) + T1_J + 
    I(U1_I^2) + U1_I, tau = 0.15, data = structure(list(T1_I = c(11, 
11, 2, 6, 1, 0, 0, 6, 10, 0, 1, 0, 6, 9, 0, 11, 6, 5, 8, 7, 10, 
6, 0, 5, 3, 0, 6, 11, 6, 5, 11, 11, 5, 9, 6, 11, 0, 0, 10, 3, 
11, 6, 5, 0), T1_J = c(0, 11, 0, 8, 5, 7, 9, 2, 0, 0, 11, 6, 
6, 4, 1, 1, 11, 6, 1, 11, 6, 0, 6, 0, 0, 0, 11, 5, 5, 1, 3, 7, 
5, 11, 4, 0, 11, 2, 0, 6, 11, 0, 7, 6), T2_I = c(0, 0, 5, 6, 
0, 11, 4, 11, 11, 3, 0, 5, 0, 10, 11, 11, 10, 0, 8, 9, 0, 0, 
11, 5, 11, 8, 6, 11, 11, 0, 0, 11, 6, 11, 6, 0, 4, 0, 11, 3, 
0, 11, 0, 6), T2_J = c(4, 0, 4, 8, 7, 8, 11, 10, 4, 11, 11, 6, 
0, 0, 0, 10, 11, 11, 0, 0, 11, 4, 7, 6, 0, 11, 0, 0, 11, 11, 
0, 10, 0, 0, 6, 7, 11, 0, 10, 11, 11, 2, 7, 6), U1_I = c(17, 
28, 14, 29, 8, 29, 15, 0, 10, 27, 0, 0, 25, 18, 9, 26, 19, 17, 
0, 5, 8, 29, 29, 0, 27, 22, 29, 14, 28, 15, 29, 1, 11, 3, 26, 
24, 11, 0, 0, 0, 19, 13, 10, 20), U_I = c(0, 0, 0, 29, 0, 0, 
1, 0, 21, 16, 4, 15, 16, 0, 29, 10, 13, 0, 0, 0, 27, 1, 0, 16, 
29, 0, 23, 14, 5, 29, 0, 29, 0, 0, 0, 1, 0, 13, 0, 0, 17, 0, 
0, 29), U_J = c(9, 28, 29, 0, 29, 15, 0, 28, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 14, 17, 13, 0, 0, 7, 0, 0, 29, 0, 0, 0, 0, 15, 0, 0, 
29, 28, 0, 0, 0, 16, 13, 0, 13, 29, 0), RT_I = c(5, 1, 3, 2, 
0, 1, 5, 5, 0, 0, 2, 2, 5, 0, 3, 2, 3, 2, 2, 0, 0, 0, 1, 2, 0, 
1, 0, 0, 2, 2, 3, 5, 2, 2, 5, 0, 5, 5, 0, 0, 1, 5, 0, 2), RT_J = c(2, 
2, 0, 4, 5, 0, 0, 2, 0, 3, 0, 2, 0, 2, 4, 5, 3, 3, 5, 5, 0, 2, 
1, 3, 0, 3, 3, 3, 5, 2, 3, 1, 0, 5, 0, 5, 1, 0, 0, 5, 0, 2, 3, 
5), cost_mean = c(6.692519, 3.408027, 4.581038, 3.790551, 4.587454, 
3.577459, 3.598104, 7.390889, 3.88252, 4.684281, 4.585622, 3.31468, 
5.538964, 4.669309, 4.197849, 4.129327, 3.323938, 3.40109, 5.785539, 
4.582812, 4.246902, 3.626328, 3.679836, 3.500615, 4.602014, 3.359576, 
3.542238, 3.258214, 4.051533, 4.255853, 3.799101, 5.775004, 3.753633, 
3.967117, 6.27828, 4.101767, 4.582091, 5.567822, 4.581957, 4.674565, 
3.559506, 7.994226, 4.583897, 4.116193)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = c(NA, -44L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients lower bd upper bd
(Intercept)  3.81355      3.25573  4.57738
I(RT_I^2)    0.13028      0.00895  0.22469
RT_I        -0.41703     -0.90534  0.03592
I(T1_J^2)   -0.00733     -0.03993  0.01319
T1_J         0.06068     -0.16700  0.20335
I(U1_I^2)    0.00083     -0.00091  0.00450
U1_I        -0.02586     -0.16277  0.02282

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 251286
Valid coordinates: 10560/52800
Tested coordinates: 505658
Valid coordinates: 15840/52800
Tested coordinates: 754504
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1005290
Valid coordinates: 26400/52800
Tested coordinates: 1261652
Valid coordinates: 31680/52800
Tested coordinates: 1516165
Valid coordinates: 36960/52800
Tested coordinates: 1769927
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2020682
Valid coordinates: 47520/52800
Tested coordinates: 2268896
Valid coordinates: 52800/52800
Tested coordinates: 2522878
Valid/Tested configurations: 52800/2522878
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.3575679173624636, 'T1_J': 0.3404563665410141, 'T2_J': 0.7386567150199409, 'U_J': 0.22911488688082665, 'U_I': 0.17833569065119126, 'I(T2_I^2)': 0.4414441288882144, 'T2_I': 0.2031722432699095, 'U1_I': 0.2738855932323948, 'I(U_I^2)': 0.2678267128952887, 'I(RT_I^2)': 8.798385664142921e-07, 'I(T2_J^2)': 0.4658110041383713, 'I(U1_I^2)': 0.007554655918319127, 'RT_I': 0.024505654274205188, 'I(T1_I^2)': 0.7646412115604725, 'I(T1_J^2)': 0.0036104240063322044, 'I(U_J^2)': 0.2031211387339069, 'RT_J': 0.6135324150031551, 'T1_I': 0.043256641963299945}
Ordered Keys: 
['I(RT_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'RT_I', 'T1_I', 'U_I', 'I(U_J^2)', 'T2_I', 'U_J', 'I(U_I^2)', 'U1_I', 'T1_J', 'I(RT_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'RT_J', 'T2_J', 'I(T1_I^2)']
Variables within threshold: ['RT_I', 'T1_J', 'U1_I']
Unique Variables: ['RT_I', 'T1_J', 'U1_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.3575679173624636, 'T1_J': 0.3404563665410141, 'T2_J': 0.7386567150199409, 'U_J': 0.22911488688082665, 'U_I': 0.17833569065119126, 'I(T2_I^2)': 0.4414441288882144, 'T2_I': 0.2031722432699095, 'U1_I': 0.2738855932323948, 'I(U_I^2)': 0.2678267128952887, 'I(RT_I^2)': 8.798385664142921e-07, 'I(T2_J^2)': 0.4658110041383713, 'I(U1_I^2)': 0.007554655918319127, 'RT_I': 0.024505654274205188, 'I(T1_I^2)': 0.7646412115604725, 'I(T1_J^2)': 0.0036104240063322044, 'I(U_J^2)': 0.2031211387339069, 'RT_J': 0.6135324150031551, 'T1_I': 0.043256641963299945}
Ordered Keys: 
['I(RT_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'RT_I', 'T1_I', 'U_I', 'I(U_J^2)', 'T2_I', 'U_J', 'I(U_I^2)', 'U1_I', 'T1_J', 'I(RT_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'RT_J', 'T2_J', 'I(T1_I^2)']
Variables within threshold: ['RT_I', 'T1_J', 'U1_I']
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
11910   10   11    0   11   16   0  17    2    4

Best From Design: [11, 5, 11, 0, 14, 14, 0, 0, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.857158
Design Best Point:
[11, 5, 11, 0, 14, 14, 0, 0, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.670806673367
Predicted Best Point:
[10, 11, 0, 11, 16, 0, 17, 2, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[10, 11, 0, 11, 16, 0, 17, 2, 4]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2101
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3631
        Writes: 		396
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.661752
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.670806673367
Slowdown (Predicted Best): 0.753887767291
Budget: 44/1000
Best point from design was better than predicted point
Updating Global Best: 3.258214
Current Best Point: 
[11, 5, 11, 0, 14, 14, 0, 0, 3]
Step 2
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 171602
Valid coordinates: 2400/12000
Tested coordinates: 349113
Valid coordinates: 3600/12000
Tested coordinates: 530147
Valid coordinates: 4800/12000
Tested coordinates: 700373
Valid coordinates: 6000/12000
Tested coordinates: 881757
Tested coordinates: 1000000
Valid coordinates: 7200/12000
Tested coordinates: 1063913
Valid coordinates: 8400/12000
Tested coordinates: 1240782
Valid coordinates: 9600/12000
Tested coordinates: 1418919
Valid coordinates: 10800/12000
Tested coordinates: 1597959
Valid coordinates: 12000/12000
Tested coordinates: 1785526
Valid/Tested configurations: 12000/1785526
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 152800      9

Pruned data dimensions: [1] 12019     9

Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['T1_J', 'U1_I', 'RT_I']
Two-Level Factors: ['T1_J', 'T2_J', 'U1_I', 'RT_I']
Three-Level Factors: ['T1_J', 'T2_J', 'U1_I', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)', 'I(T2_J^2)', 'T2_J']
Three-Level Terms: ['(Intercept)', 'I(T2_J^2)', 'T2_J']
Model Quadratic: ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['T1_J', 'T2_J', 'U1_I', 'RT_I', '(Intercept)', 'T2_J', 'T2_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_J', 'T2_J', 'U1_I', 'RT_I', '(Intercept)', 'T2_J', 'T2_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T2_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T2_Ie + T2_Je + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 12019     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1352     0   11    0   11   16   0  12    2    3
4389     0   11    3    0   16   0   0    2    2
5132    11   11   11    0   16   0  15    2    0
5531    11   11   11   11   16   0   0    2    5
7282     6   11    6   11   16   0  14    2    5
7309     6   11    0   11   16  13   0    2    5
7450     6   11    0    0   16   0   0    2    0
8070    11   11    0   11   16   0  29    2    1
8166     0   11    3    0   16   0  29    2    5
8997     7   11    7   11   16  29   0    2    2
9826     5   11   11    0   16   0  29    2    2
10408    0   11    4   11   16  14   0    2    0
10649   11   11   11    0   16  16   0    2    3
11284   11   11    0    0   16  28   0    2    5
11535    0   11   11   11   16  29   0    2    0

D-Efficiency Approximation: [1] 0.2905555

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		1316
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2323
        Writes: 		264
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.338877
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		300
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			609
        Writes: 		92
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.378227
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1038
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1817
        Writes: 		212
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.638743
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1980
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3409
        Writes: 		372
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.067172
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2881
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4931
        Writes: 		526
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.945905
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		8178
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12707
        Writes: 		1318
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.96456
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		77
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			195
        Writes: 		48
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.602465
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1981
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3431
        Writes: 		376
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.186451
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3781
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6431
        Writes: 		676
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.073598
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2126
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3699
        Writes: 		430
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.462235
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2104
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3638
        Writes: 		398
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.627042
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		239
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			548
        Writes: 		99
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.601103
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2505
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4133
        Writes: 		463
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.438973
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		14973
        Multiplications: 	4488
        Divisions: 		0
        Logical: 		0
        Reads: 			22637
        Writes: 		2323
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.079357
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			878
        Writes: 		144
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.601006
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1352     0   11    0   11   16   0  12    2    3  3.338877
4389     0   11    3    0   16   0   0    2    2  3.378227
5132    11   11   11    0   16   0  15    2    0  3.638743
5531    11   11   11   11   16   0   0    2    5  4.067172
7282     6   11    6   11   16   0  14    2    5  3.945905
7309     6   11    0   11   16  13   0    2    5  3.964560
7450     6   11    0    0   16   0   0    2    0  3.602465
8070    11   11    0   11   16   0  29    2    1  3.186451
8166     0   11    3    0   16   0  29    2    5  4.073598
8997     7   11    7   11   16  29   0    2    2  3.462235
9826     5   11   11    0   16   0  29    2    2  3.627042
10408    0   11    4   11   16  14   0    2    0  3.601103
10649   11   11   11    0   16  16   0    2    3  3.438973
11284   11   11    0    0   16  28   0    2    5  4.079357
11535    0   11   11   11   16  29   0    2    0  3.601006

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1352     0   11    0   11   16   0  12    2    3  3.338877
4389     0   11    3    0   16   0   0    2    2  3.378227
5132    11   11   11    0   16   0  15    2    0  3.638743
5531    11   11   11   11   16   0   0    2    5  4.067172
7282     6   11    6   11   16   0  14    2    5  3.945905
7309     6   11    0   11   16  13   0    2    5  3.964560
7450     6   11    0    0   16   0   0    2    0  3.602465
8070    11   11    0   11   16   0  29    2    1  3.186451
8166     0   11    3    0   16   0  29    2    5  4.073598
8997     7   11    7   11   16  29   0    2    2  3.462235
9826     5   11   11    0   16   0  29    2    2  3.627042
10408    0   11    4   11   16  14   0    2    0  3.601103
10649   11   11   11    0   16  16   0    2    3  3.438973
11284   11   11    0    0   16  28   0    2    5  4.079357
11535    0   11   11   11   16  29   0    2    0  3.601006

Clean encoded design, with measurements:
           T1_Ie     T1_Je      T2_Ie      T2_Je      U1_Ie        U_Ie
1352  -1.0000000 0.8333333 -1.0000000  0.8333333 0.06666667 -1.00000000
4389  -1.0000000 0.8333333 -0.5000000 -1.0000000 0.06666667 -1.00000000
5132   0.8333333 0.8333333  0.8333333 -1.0000000 0.06666667 -1.00000000
5531   0.8333333 0.8333333  0.8333333  0.8333333 0.06666667 -1.00000000
7282   0.0000000 0.8333333  0.0000000  0.8333333 0.06666667 -1.00000000
7309   0.0000000 0.8333333 -1.0000000  0.8333333 0.06666667 -0.13333333
7450   0.0000000 0.8333333 -1.0000000 -1.0000000 0.06666667 -1.00000000
8070   0.8333333 0.8333333 -1.0000000  0.8333333 0.06666667 -1.00000000
8166  -1.0000000 0.8333333 -0.5000000 -1.0000000 0.06666667 -1.00000000
8997   0.1666667 0.8333333  0.1666667  0.8333333 0.06666667  0.93333333
9826  -0.1666667 0.8333333  0.8333333 -1.0000000 0.06666667 -1.00000000
10408 -1.0000000 0.8333333 -0.3333333  0.8333333 0.06666667 -0.06666667
10649  0.8333333 0.8333333  0.8333333 -1.0000000 0.06666667  0.06666667
11284  0.8333333 0.8333333 -1.0000000 -1.0000000 0.06666667  0.86666667
11535 -1.0000000 0.8333333  0.8333333  0.8333333 0.06666667  0.93333333
             U_Je      RT_Ie      RT_Je cost_mean
1352  -0.20000000 -0.3333333  0.0000000  3.338877
4389  -1.00000000 -0.3333333 -0.3333333  3.378227
5132   0.00000000 -0.3333333 -1.0000000  3.638743
5531  -1.00000000 -0.3333333  0.6666667  4.067172
7282  -0.06666667 -0.3333333  0.6666667  3.945905
7309  -1.00000000 -0.3333333  0.6666667  3.964560
7450  -1.00000000 -0.3333333 -1.0000000  3.602465
8070   0.93333333 -0.3333333 -0.6666667  3.186451
8166   0.93333333 -0.3333333  0.6666667  4.073598
8997  -1.00000000 -0.3333333 -0.3333333  3.462235
9826   0.93333333 -0.3333333 -0.3333333  3.627042
10408 -1.00000000 -0.3333333 -1.0000000  3.601103
10649 -1.00000000 -0.3333333  0.0000000  3.438973
11284 -1.00000000 -0.3333333  0.6666667  4.079357
11535 -1.00000000 -0.3333333 -1.0000000  3.601006

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T2_I^2) + I(U_I^2) + I(U_J^2) + I(RT_J^2) + 
    T1_I + T2_I + T2_J + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Heteroscedasticity Test p-value: 0.816998320151
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value  Pr(>F)   
I(T1_I^2)    1 0.0070  0.0070   0.517 0.52404   
I(T2_I^2)    1 0.0000  0.0000   0.001 0.97367   
I(U_I^2)     1 0.0033  0.0033   0.241 0.65746   
I(U_J^2)     1 0.0030  0.0030   0.223 0.66920   
I(RT_J^2)    1 0.8568  0.8568  63.046 0.00417 **
T1_I         1 0.0049  0.0049   0.358 0.59170   
T2_I         1 0.0000  0.0000   0.000 0.98678   
T2_J         1 0.0332  0.0332   2.440 0.21621   
U_I          1 0.0004  0.0004   0.033 0.86788   
U_J          1 0.0034  0.0034   0.249 0.65236   
RT_J         1 0.2402  0.2402  17.672 0.02457 * 
Residuals    3 0.0408  0.0136                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1352   3.338877
4389   3.378227
5132   3.638743
5531   4.067172
7282   3.945905
7309   3.964560
7450   3.602465
8070   3.186451
8166   4.073598
8997   3.462235
9826   3.627042
10408  3.601103
10649  3.438973
11284  4.079357
11535  3.601006

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.5917045505894152, 'T2_J': 0.21620958240605562, 'U_J': 0.6523624443632863, 'U_I': 0.8678846370310733, 'I(U_I^2)': 0.6574632288006266, 'T2_I': 0.9867843950628186, 'I(RT_J^2)': 0.004166076334696894, 'I(T2_I^2)': 0.9736747508497067, 'I(T1_I^2)': 0.5240356979417949, 'I(U_J^2)': 0.6692028822168284, 'RT_J': 0.024572538171456212}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_J', 'I(T1_I^2)', 'T1_I', 'U_J', 'I(U_I^2)', 'I(U_J^2)', 'U_I', 'I(T2_I^2)', 'T2_I']
Variables within threshold: ['I(RT_J^2)', 'RT_J']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J']
Using Model: cost_mean ~ I(RT_J^2) + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J, tau = 0.15, data = structure(list(
    T1_I = c(0, 0, 11, 11, 6, 6, 6, 11, 0, 7, 5, 0, 11, 11, 0
    ), T1_J = c(11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 
    11, 11, 11), T2_I = c(0, 3, 11, 11, 6, 0, 0, 0, 3, 7, 11, 
    4, 11, 0, 11), T2_J = c(11, 0, 0, 11, 11, 11, 0, 11, 0, 11, 
    0, 11, 0, 0, 11), U1_I = c(16, 16, 16, 16, 16, 16, 16, 16, 
    16, 16, 16, 16, 16, 16, 16), U_I = c(0, 0, 0, 0, 0, 13, 0, 
    0, 0, 29, 0, 14, 16, 28, 29), U_J = c(12, 0, 15, 0, 14, 0, 
    0, 29, 29, 0, 29, 0, 0, 0, 0), RT_I = c(2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(3, 2, 0, 5, 5, 5, 0, 
    1, 5, 2, 2, 0, 3, 5, 0), cost_mean = c(3.338877, 3.378227, 
    3.638743, 4.067172, 3.945905, 3.96456, 3.602465, 3.186451, 
    4.073598, 3.462235, 3.627042, 3.601103, 3.438973, 4.079357, 
    3.601006)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 45:59, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.601010e+00 -1.797693e+308   3.601060e+00
I(RT_J^2)     7.818000e-02   3.577000e-02  1.797693e+308
RT_J         -3.219100e-01 -1.797693e+308  -2.840000e-02

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 522624
Tested coordinates: 1000000
Valid coordinates: 7200/36000
Tested coordinates: 1046976
Valid coordinates: 10800/36000
Tested coordinates: 1577325
Tested coordinates: 2000000
Valid coordinates: 14400/36000
Tested coordinates: 2099841
Valid coordinates: 18000/36000
Tested coordinates: 2643087
Tested coordinates: 3000000
Valid coordinates: 21600/36000
Tested coordinates: 3166849
Valid coordinates: 25200/36000
Tested coordinates: 3709144
Tested coordinates: 4000000
Valid coordinates: 28800/36000
Tested coordinates: 4250229
Valid coordinates: 32400/36000
Tested coordinates: 4785001
Tested coordinates: 5000000
Valid coordinates: 36000/36000
Tested coordinates: 5329122
Valid/Tested configurations: 36000/5329122
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 188800      9

Pruned data dimensions: [1] 48019     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.5917045505894152, 'T2_J': 0.21620958240605562, 'U_J': 0.6523624443632863, 'U_I': 0.8678846370310733, 'I(U_I^2)': 0.6574632288006266, 'T2_I': 0.9867843950628186, 'I(RT_J^2)': 0.004166076334696894, 'I(T2_I^2)': 0.9736747508497067, 'I(T1_I^2)': 0.5240356979417949, 'I(U_J^2)': 0.6692028822168284, 'RT_J': 0.024572538171456212}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_J', 'I(T1_I^2)', 'T1_I', 'U_J', 'I(U_I^2)', 'I(U_J^2)', 'U_I', 'I(T2_I^2)', 'T2_I']
Variables within threshold: ['RT_J']
Unique Variables: ['RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.5917045505894152, 'T2_J': 0.21620958240605562, 'U_J': 0.6523624443632863, 'U_I': 0.8678846370310733, 'I(U_I^2)': 0.6574632288006266, 'T2_I': 0.9867843950628186, 'I(RT_J^2)': 0.004166076334696894, 'I(T2_I^2)': 0.9736747508497067, 'I(T1_I^2)': 0.5240356979417949, 'I(U_J^2)': 0.6692028822168284, 'RT_J': 0.024572538171456212}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_J', 'I(T1_I^2)', 'T1_I', 'U_J', 'I(U_I^2)', 'I(U_J^2)', 'U_I', 'I(T2_I^2)', 'T2_I']
Variables within threshold: ['RT_J']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
37    4    6    7    9   27  20   0    2    5

Best From Design: [11, 11, 0, 11, 16, 0, 29, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.857158
Design Best Point:
[11, 11, 0, 11, 16, 0, 29, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.656031984136
Predicted Best Point:
[4, 6, 7, 9, 27, 20, 0, 2, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 6, 7, 9, 27, 20, 0, 2, 5]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		11372
        Multiplications: 	3432
        Divisions: 		0
        Logical: 		0
        Reads: 			17391
        Writes: 		1806
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.001392
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.656031984136
Slowdown (Predicted Best): 0.82381343164
Budget: 59/1000
Best point from design was better than predicted point
Updating Global Best: 3.186451
Current Best Point: 
[11, 11, 0, 11, 16, 0, 29, 2, 1]
Step 3
Generating valid search space of size 8800 (does not spend evaluations)
Valid coordinates: 880/8800
Tested coordinates: 133869
Valid coordinates: 1760/8800
Tested coordinates: 268175
Valid coordinates: 2640/8800
Tested coordinates: 391819
Valid coordinates: 3520/8800
Tested coordinates: 521572
Valid coordinates: 4400/8800
Tested coordinates: 653187
Valid coordinates: 5280/8800
Tested coordinates: 783518
Valid coordinates: 6160/8800
Tested coordinates: 915343
Tested coordinates: 1000000
Valid coordinates: 7040/8800
Tested coordinates: 1048110
Valid coordinates: 7920/8800
Tested coordinates: 1179142
Valid coordinates: 8800/8800
Tested coordinates: 1310736
Valid/Tested configurations: 8800/1310736
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 197600      9

Pruned data dimensions: [1] 16799     9

Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J
Clean Info:
One-Level Factors: ['T1_J', 'U1_I', 'RT_I', 'RT_J']
Two-Level Factors: ['T1_J', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
Three-Level Factors: ['T1_J', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)', 'T2_J']
Three-Level Terms: ['(Intercept)', 'T2_J']
Model Quadratic: ['T1_I', 'T2_I', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['T1_J', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)', 'T2_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_J', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)', 'T2_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 11 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T2_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T2_Ie + T2_Je + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 16799     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
333      0   11    5    0   16  19   0    2    5
554      4   11   11    0   16  29   0    2    5
2680     5   11    5    0   16   0  14    2    5
4397     7   11    7   11   16   0   0    2    5
4983    11   11    0   11   16  29   0    2    5
5079     0   11   11   11   16   0  15    2    5
5519     0   11    0    0   16   0   0    2    5
6735     0   11    7   11   16   0  29    2    5
9332     5   11    0   11   16  15   0    2    5
13904   11   11   11    0   16  10   0    2    5
16729    7   11    0    0   16   0  29    2    5

D-Efficiency Approximation: [1] 0.3093614

Measuring design of size 11
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		10896
        Multiplications: 	3300
        Divisions: 		0
        Logical: 		0
        Reads: 			16679
        Writes: 		1720
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.176208
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		15429
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23306
        Writes: 		2392
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.963375
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2881
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4931
        Writes: 		526
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.051997
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1980
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3409
        Writes: 		372
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.963125
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		15426
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23299
        Writes: 		2390
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.957769
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2941
        Multiplications: 	980
        Divisions: 		0
        Logical: 		0
        Reads: 			5031
        Writes: 		536
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.964703
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1975
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3401
        Writes: 		370
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.943695
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3781
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6431
        Writes: 		676
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.960139
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		9084
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14031
        Writes: 		1452
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.958631
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		6819
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10721
        Writes: 		1117
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.949451
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3781
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6431
        Writes: 		676
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.961468
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
333      0   11    5    0   16  19   0    2    5  4.176208
554      4   11   11    0   16  29   0    2    5  3.963375
2680     5   11    5    0   16   0  14    2    5  4.051997
4397     7   11    7   11   16   0   0    2    5  3.963125
4983    11   11    0   11   16  29   0    2    5  3.957769
5079     0   11   11   11   16   0  15    2    5  3.964703
5519     0   11    0    0   16   0   0    2    5  3.943695
6735     0   11    7   11   16   0  29    2    5  3.960139
9332     5   11    0   11   16  15   0    2    5  3.958631
13904   11   11   11    0   16  10   0    2    5  3.949451
16729    7   11    0    0   16   0  29    2    5  3.961468

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
333      0   11    5    0   16  19   0    2    5  4.176208
554      4   11   11    0   16  29   0    2    5  3.963375
2680     5   11    5    0   16   0  14    2    5  4.051997
4397     7   11    7   11   16   0   0    2    5  3.963125
4983    11   11    0   11   16  29   0    2    5  3.957769
5079     0   11   11   11   16   0  15    2    5  3.964703
5519     0   11    0    0   16   0   0    2    5  3.943695
6735     0   11    7   11   16   0  29    2    5  3.960139
9332     5   11    0   11   16  15   0    2    5  3.958631
13904   11   11   11    0   16  10   0    2    5  3.949451
16729    7   11    0    0   16   0  29    2    5  3.961468

Clean encoded design, with measurements:
           T1_Ie     T1_Je      T2_Ie      T2_Je      U1_Ie       U_Ie
333   -1.0000000 0.8333333 -0.1666667 -1.0000000 0.06666667  0.2666667
554   -0.3333333 0.8333333  0.8333333 -1.0000000 0.06666667  0.9333333
2680  -0.1666667 0.8333333 -0.1666667 -1.0000000 0.06666667 -1.0000000
4397   0.1666667 0.8333333  0.1666667  0.8333333 0.06666667 -1.0000000
4983   0.8333333 0.8333333 -1.0000000  0.8333333 0.06666667  0.9333333
5079  -1.0000000 0.8333333  0.8333333  0.8333333 0.06666667 -1.0000000
5519  -1.0000000 0.8333333 -1.0000000 -1.0000000 0.06666667 -1.0000000
6735  -1.0000000 0.8333333  0.1666667  0.8333333 0.06666667 -1.0000000
9332  -0.1666667 0.8333333 -1.0000000  0.8333333 0.06666667  0.0000000
13904  0.8333333 0.8333333  0.8333333 -1.0000000 0.06666667 -0.3333333
16729  0.1666667 0.8333333 -1.0000000 -1.0000000 0.06666667 -1.0000000
             U_Je      RT_Ie     RT_Je cost_mean
333   -1.00000000 -0.3333333 0.6666667  4.176208
554   -1.00000000 -0.3333333 0.6666667  3.963375
2680  -0.06666667 -0.3333333 0.6666667  4.051997
4397  -1.00000000 -0.3333333 0.6666667  3.963125
4983  -1.00000000 -0.3333333 0.6666667  3.957769
5079   0.00000000 -0.3333333 0.6666667  3.964703
5519  -1.00000000 -0.3333333 0.6666667  3.943695
6735   0.93333333 -0.3333333 0.6666667  3.960139
9332  -1.00000000 -0.3333333 0.6666667  3.958631
13904 -1.00000000 -0.3333333 0.6666667  3.949451
16729  0.93333333 -0.3333333 0.6666667  3.961468

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T2_I^2) + I(U_I^2) + I(U_J^2) + T1_I + 
    T2_I + T2_J + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70 10

Pruned data dimensions: [1] 16 10

Heteroscedasticity Test p-value: 0.456463432223
Heteroscedasticity transform NOT required.
Regression Step:            Df  Sum Sq  Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.00000 0.000000   0.000  0.994
I(T2_I^2)    1 0.00075 0.000753   0.128  0.733
I(U_I^2)     1 0.00111 0.001114   0.189  0.679
I(U_J^2)     1 0.00000 0.000000   0.000  0.996
T1_I         1 0.00987 0.009870   1.676  0.243
T2_I         1 0.01340 0.013403   2.275  0.182
T2_J         1 0.00778 0.007776   1.320  0.294
U_I          1 0.00208 0.002077   0.353  0.574
U_J          1 0.00004 0.000043   0.007  0.935
Residuals    6 0.03534 0.005891               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
333    4.176208
554    3.963375
2680   4.051997
4397   3.963125
4983   3.957769
5079   3.964703
5519   3.943695
6735   3.960139
9332   3.958631
13904  3.949451
16729  3.961468

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.24309925254271877, 'T2_J': 0.29431230959147503, 'U_J': 0.9349085383259919, 'U_I': 0.5743093644471019, 'I(U_I^2)': 0.6788722600942207, 'T2_I': 0.18217753424259925, 'I(T2_I^2)': 0.732960969493965, 'I(T1_I^2)': 0.9939686756469723, 'I(U_J^2)': 0.9958734208304723}
Ordered Keys: 
['T2_I', 'T1_I', 'T2_J', 'U_I', 'I(U_I^2)', 'I(T2_I^2)', 'U_J', 'I(T1_I^2)', 'I(U_J^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70 10

Pruned data dimensions: [1] 16 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T2_I^2) + I(U_I^2) + I(U_J^2) + 
    T1_I + T2_I + T2_J + U_I + U_J, tau = 0.15, data = structure(list(
    T1_I = c(11, 6, 6, 0, 11, 0, 4, 5, 7, 11, 0, 0, 0, 5, 11, 
    7), T1_J = c(11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 
    11, 11, 11, 11, 11), T2_I = c(11, 6, 0, 3, 0, 5, 11, 5, 7, 
    0, 11, 0, 7, 0, 11, 0), T2_J = c(11, 11, 11, 0, 0, 0, 0, 
    0, 11, 11, 11, 0, 11, 11, 0, 0), U1_I = c(16, 16, 16, 16, 
    16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16), U_I = c(0, 
    0, 13, 0, 28, 19, 29, 0, 0, 29, 0, 0, 0, 15, 10, 0), U_J = c(0, 
    14, 0, 29, 0, 0, 0, 14, 0, 0, 15, 0, 29, 0, 0, 29), RT_I = c(2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(5, 
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5), cost_mean = c(4.067172, 
    3.945905, 3.96456, 4.073598, 4.079357, 4.176208, 3.963375, 
    4.051997, 3.963125, 3.957769, 3.964703, 3.943695, 3.960139, 
    3.958631, 3.949451, 3.961468)), .Names = c("T1_I", "T1_J", 
"T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
), row.names = c(48L, 49L, 50L, 53L, 58L, 60L, 61L, 62L, 63L, 
64L, 65L, 66L, 67L, 68L, 69L, 70L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.943700e+00 -1.797693e+308   4.152850e+00
I(T1_I^2)    -1.200000e-04 -1.797693e+308  1.797693e+308
I(T2_I^2)    -5.460000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)     -2.300000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)      1.800000e-04 -1.797693e+308  1.797693e+308
T1_I          2.320000e-03 -1.797693e+308  1.797693e+308
T2_I          5.255000e-02 -1.797693e+308  1.797693e+308
T2_J         -8.310000e-03 -1.797693e+308  1.797693e+308
U_I           1.001000e-02 -1.797693e+308  1.797693e+308
U_J          -5.050000e-03 -1.797693e+308  1.797693e+308

Generating valid search space of size 26400 (does not spend evaluations)
Valid coordinates: 2640/26400
Tested coordinates: 391493
Valid coordinates: 5280/26400
Tested coordinates: 759755
Tested coordinates: 1000000
Valid coordinates: 7920/26400
Tested coordinates: 1139924
Valid coordinates: 10560/26400
Tested coordinates: 1528340
Valid coordinates: 13200/26400
Tested coordinates: 1926367
Tested coordinates: 2000000
Valid coordinates: 15840/26400
Tested coordinates: 2316910
Valid coordinates: 18480/26400
Tested coordinates: 2696589
Tested coordinates: 3000000
Valid coordinates: 21120/26400
Tested coordinates: 3080682
Valid coordinates: 23760/26400
Tested coordinates: 3463658
Valid coordinates: 26400/26400
Tested coordinates: 3849905
Valid/Tested configurations: 26400/3849905
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 224000      9

Pruned data dimensions: [1] 43199     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.24309925254271877, 'T2_J': 0.29431230959147503, 'U_J': 0.9349085383259919, 'U_I': 0.5743093644471019, 'I(U_I^2)': 0.6788722600942207, 'T2_I': 0.18217753424259925, 'I(T2_I^2)': 0.732960969493965, 'I(T1_I^2)': 0.9939686756469723, 'I(U_J^2)': 0.9958734208304723}
Ordered Keys: 
['T2_I', 'T1_I', 'T2_J', 'U_I', 'I(U_I^2)', 'I(T2_I^2)', 'U_J', 'I(T1_I^2)', 'I(U_J^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.24309925254271877, 'T2_J': 0.29431230959147503, 'U_J': 0.9349085383259919, 'U_I': 0.5743093644471019, 'I(U_I^2)': 0.6788722600942207, 'T2_I': 0.18217753424259925, 'I(T2_I^2)': 0.732960969493965, 'I(T1_I^2)': 0.9939686756469723, 'I(U_J^2)': 0.9958734208304723}
Ordered Keys: 
['T2_I', 'T1_I', 'T2_J', 'U_I', 'I(U_I^2)', 'I(T2_I^2)', 'U_J', 'I(T1_I^2)', 'I(U_J^2)']
No variables within acceptable threshold
Best Predicted:     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
350    4    1    0    5   29   0  23    5    0

Best From Design: [0, 11, 0, 0, 16, 0, 0, 2, 5]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.857158
Design Best Point:
[0, 11, 0, 0, 16, 0, 0, 2, 5]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.811934674557
Predicted Best Point:
[4, 1, 0, 5, 29, 0, 23, 5, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 1, 0, 5, 29, 0, 23, 5, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		11057
        Multiplications: 	3300
        Divisions: 		0
        Logical: 		0
        Reads: 			16657
        Writes: 		1709
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.543998
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 16, 'T1_J': 11, 'RT_I': 2, 'RT_J': 5}, 'quadratic': ['T1_I', 'T2_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.811934674557
Slowdown (Predicted Best): 1.14140779443
Budget: 70/1000
Best point from design was better than predicted point
Current Best Point: 
[11, 11, 0, 11, 16, 0, 29, 2, 1]
Final Best Point: 
[11, 11, 0, 11, 16, 0, 29, 2, 1]
Ending DLMT
Best Point: [11, 11, 0, 11, 16, 0, 29, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.52431592389
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.52431592389
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [11, 11, 0, 11, 16, 0, 29, 2, 1]={'T1_I': 2048, 'T1_J': 2048, 'U_J': 30, 'U_I': 1, 'T2_I': 1, 'T2_J': 2048, 'U1_I': 17, 'RT_I': 4, 'RT_J': 2}, cost=3.186451e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-8607.11, runs=75
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 2048
 T1_J = 2048
 T2_I = 1
 T2_J = 2048
 U1_I = 17
 U_I = 1
 U_J = 30
 cost_mean = 3.186451
 points = 75
 speedup = 1.52431592389
 step = 4
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1981
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3431
        Writes: 		376
        Comparisons:		13
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
