
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 80984
Valid coordinates: 3520/17600
Tested coordinates: 159548
Valid coordinates: 5280/17600
Tested coordinates: 245817
Valid coordinates: 7040/17600
Tested coordinates: 329295
Valid coordinates: 8800/17600
Tested coordinates: 413644
Valid coordinates: 10560/17600
Tested coordinates: 498109
Valid coordinates: 12320/17600
Tested coordinates: 581038
Valid coordinates: 14080/17600
Tested coordinates: 664902
Valid coordinates: 15840/17600
Tested coordinates: 750490
Valid coordinates: 17600/17600
Tested coordinates: 835900
Valid/Tested configurations: 17600/835900
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
176     10    0   11    0   15   0  28    2    0
239      0    4   11    5   28  14   0    0    0
359      1    4    0   11   29   0  24    0    2
3174     1   11   11    0    7   0  29    0    5
3321     0    8    6   11    2   0  29    2    0
4085     5    2    6    7    4  29   0    0    2
5021     0    0    5   10   29   0   0    5    1
5058     3    1   11   11   23  29   0    2    5
5436    11    7    0    7   26   0  29    5    2
6810     6    5    7    0   28   0   2    2    1
7469     0    5    9    0   18  17   0    5    2
8996     7    6    0   10   13   0   0    5    0
9189     5    0   11    6   16   0   0    3    3
9760     6    0    0    4    0  14   0    2    0
10248    0    4    2    5   13   0  15    2    5
10792   11    5   11   11    1   0   2    0    5
10866   10   11    0   11   16  14   0    1    2
12153    6    0    6    2   27  15   0    0    5
15010    0    0    0    0   20   0   8    0    0
15238    8   11    8   11   29   0  13    5    0
16385   11   10    0    0    0  28   0    2    5
16505    9    0   11    0    1   0  19    5    2

D-Efficiency Approximation: [1] 0.2198318

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1798
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3100
        Writes: 		339
        Comparisons:		10
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.65832
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		217
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			485
        Writes: 		100
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.703189
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		321
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			725
        Writes: 		110
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584496
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		596
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1341
        Writes: 		154
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581568
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1870
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3203
        Writes: 		342
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.664738
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1895
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3268
        Writes: 		375
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.703579
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1089
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2115
        Writes: 		253
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.171491
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		15445
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23341
        Writes: 		2405
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.115334
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		15411
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23251
        Writes: 		2366
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.553105
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		376
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			762
        Writes: 		120
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.254286
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3076
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5279
        Writes: 		580
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.758418
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		332
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			763
        Writes: 		105
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.642919
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1007
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			1736
        Writes: 		206
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.359245
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		218
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			507
        Writes: 		80
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.64086
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2944
        Multiplications: 	980
        Divisions: 		0
        Logical: 		0
        Reads: 			5039
        Writes: 		537
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.911826
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		347
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			789
        Writes: 		94
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.594316
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1091
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1969
        Writes: 		245
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.407713
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		7439
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11385
        Writes: 		1190
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.927164
Length of requested configs: 1
Code stats:
        Number of loops: 	5
        Max loop nest depth: 	2
        Additions: 		116
        Multiplications: 	40
        Divisions: 		0
        Logical: 		0
        Reads: 			275
        Writes: 		53
        Comparisons:		5
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.683706
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		6531
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10043
        Writes: 		1045
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.173738
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		14952
        Multiplications: 	4488
        Divisions: 		0
        Logical: 		0
        Reads: 			22596
        Writes: 		2304
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.963671
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		10658
        Multiplications: 	3216
        Divisions: 		0
        Logical: 		0
        Reads: 			16154
        Writes: 		1634
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.93013
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
176     10    0   11    0   15   0  28    2    0  3.658320
239      0    4   11    5   28  14   0    0    0  3.703189
359      1    4    0   11   29   0  24    0    2  4.584496
3174     1   11   11    0    7   0  29    0    5  4.581568
3321     0    8    6   11    2   0  29    2    0  3.664738
4085     5    2    6    7    4  29   0    0    2  6.703579
5021     0    0    5   10   29   0   0    5    1  5.171491
5058     3    1   11   11   23  29   0    2    5  4.115334
5436    11    7    0    7   26   0  29    5    2  6.553105
6810     6    5    7    0   28   0   2    2    1  3.254286
7469     0    5    9    0   18  17   0    5    2  6.758418
8996     7    6    0   10   13   0   0    5    0  5.642919
9189     5    0   11    6   16   0   0    3    3  3.359245
9760     6    0    0    4    0  14   0    2    0  3.640860
10248    0    4    2    5   13   0  15    2    5  3.911826
10792   11    5   11   11    1   0   2    0    5  4.594316
10866   10   11    0   11   16  14   0    1    2  3.407713
12153    6    0    6    2   27  15   0    0    5  3.927164
15010    0    0    0    0   20   0   8    0    0  4.683706
15238    8   11    8   11   29   0  13    5    0  6.173738
16385   11   10    0    0    0  28   0    2    5  3.963671
16505    9    0   11    0    1   0  19    5    2  6.930130

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
176     10    0   11    0   15   0  28    2    0  3.658320
239      0    4   11    5   28  14   0    0    0  3.703189
359      1    4    0   11   29   0  24    0    2  4.584496
3174     1   11   11    0    7   0  29    0    5  4.581568
3321     0    8    6   11    2   0  29    2    0  3.664738
4085     5    2    6    7    4  29   0    0    2  6.703579
5021     0    0    5   10   29   0   0    5    1  5.171491
5058     3    1   11   11   23  29   0    2    5  4.115334
5436    11    7    0    7   26   0  29    5    2  6.553105
6810     6    5    7    0   28   0   2    2    1  3.254286
7469     0    5    9    0   18  17   0    5    2  6.758418
8996     7    6    0   10   13   0   0    5    0  5.642919
9189     5    0   11    6   16   0   0    3    3  3.359245
9760     6    0    0    4    0  14   0    2    0  3.640860
10248    0    4    2    5   13   0  15    2    5  3.911826
10792   11    5   11   11    1   0   2    0    5  4.594316
10866   10   11    0   11   16  14   0    1    2  3.407713
12153    6    0    6    2   27  15   0    0    5  3.927164
15010    0    0    0    0   20   0   8    0    0  4.683706
15238    8   11    8   11   29   0  13    5    0  6.173738
16385   11   10    0    0    0  28   0    2    5  3.963671
16505    9    0   11    0    1   0  19    5    2  6.930130

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
176    0.6666667 -1.0000000  0.8333333 -1.0000000  0.00000000 -1.00000000
239   -1.0000000 -0.3333333  0.8333333 -0.1666667  0.86666667 -0.06666667
359   -0.8333333 -0.3333333 -1.0000000  0.8333333  0.93333333 -1.00000000
3174  -0.8333333  0.8333333  0.8333333 -1.0000000 -0.53333333 -1.00000000
3321  -1.0000000  0.3333333  0.0000000  0.8333333 -0.86666667 -1.00000000
4085  -0.1666667 -0.6666667  0.0000000  0.1666667 -0.73333333  0.93333333
5021  -1.0000000 -1.0000000 -0.1666667  0.6666667  0.93333333 -1.00000000
5058  -0.5000000 -0.8333333  0.8333333  0.8333333  0.53333333  0.93333333
5436   0.8333333  0.1666667 -1.0000000  0.1666667  0.73333333 -1.00000000
6810   0.0000000 -0.1666667  0.1666667 -1.0000000  0.86666667 -1.00000000
7469  -1.0000000 -0.1666667  0.5000000 -1.0000000  0.20000000  0.13333333
8996   0.1666667  0.0000000 -1.0000000  0.6666667 -0.13333333 -1.00000000
9189  -0.1666667 -1.0000000  0.8333333  0.0000000  0.06666667 -1.00000000
9760   0.0000000 -1.0000000 -1.0000000 -0.3333333 -1.00000000 -0.06666667
10248 -1.0000000 -0.3333333 -0.6666667 -0.1666667 -0.13333333 -1.00000000
10792  0.8333333 -0.1666667  0.8333333  0.8333333 -0.93333333 -1.00000000
10866  0.6666667  0.8333333 -1.0000000  0.8333333  0.06666667 -0.06666667
12153  0.0000000 -1.0000000  0.0000000 -0.6666667  0.80000000  0.00000000
15010 -1.0000000 -1.0000000 -1.0000000 -1.0000000  0.33333333 -1.00000000
15238  0.3333333  0.8333333  0.3333333  0.8333333  0.93333333 -1.00000000
16385  0.8333333  0.6666667 -1.0000000 -1.0000000 -1.00000000  0.86666667
16505  0.5000000 -1.0000000  0.8333333 -1.0000000 -0.93333333 -1.00000000
            U_Je      RT_Ie      RT_Je cost_mean
176    0.8666667 -0.3333333 -1.0000000  3.658320
239   -1.0000000 -1.0000000 -1.0000000  3.703189
359    0.6000000 -1.0000000 -0.3333333  4.584496
3174   0.9333333 -1.0000000  0.6666667  4.581568
3321   0.9333333 -0.3333333 -1.0000000  3.664738
4085  -1.0000000 -1.0000000 -0.3333333  6.703579
5021  -1.0000000  0.6666667 -0.6666667  5.171491
5058  -1.0000000 -0.3333333  0.6666667  4.115334
5436   0.9333333  0.6666667 -0.3333333  6.553105
6810  -0.8666667 -0.3333333 -0.6666667  3.254286
7469  -1.0000000  0.6666667 -0.3333333  6.758418
8996  -1.0000000  0.6666667 -1.0000000  5.642919
9189  -1.0000000  0.0000000  0.0000000  3.359245
9760  -1.0000000 -0.3333333 -1.0000000  3.640860
10248  0.0000000 -0.3333333  0.6666667  3.911826
10792 -0.8666667 -1.0000000  0.6666667  4.594316
10866 -1.0000000 -0.6666667 -0.3333333  3.407713
12153 -1.0000000 -1.0000000  0.6666667  3.927164
15010 -0.4666667 -1.0000000 -1.0000000  4.683706
15238 -0.1333333  0.6666667 -1.0000000  6.173738
16385 -1.0000000 -0.3333333  0.6666667  3.963671
16505  0.2666667  0.6666667 -0.3333333  6.930130

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.578799284107
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value  Pr(>F)   
I(T1_I^2)    1  0.337   0.337   1.597 0.29559   
I(T1_J^2)    1  0.043   0.043   0.203 0.68270   
I(T2_I^2)    1  0.003   0.003   0.015 0.90960   
I(T2_J^2)    1  0.035   0.035   0.165 0.71161   
I(U1_I^2)    1  0.004   0.004   0.018 0.90244   
I(U_I^2)     1  0.117   0.117   0.556 0.51001   
I(U_J^2)     1  0.471   0.471   2.233 0.23195   
I(RT_I^2)    1 17.571  17.571  83.260 0.00278 **
I(RT_J^2)    1  0.027   0.027   0.130 0.74229   
T1_I         1  0.053   0.053   0.252 0.65006   
T1_J         1  0.326   0.326   1.544 0.30225   
T2_I         1  0.089   0.089   0.419 0.56337   
T2_J         1  0.033   0.033   0.155 0.72024   
U1_I         1  0.105   0.105   0.495 0.53233   
U_I          1  0.088   0.088   0.418 0.56411   
U_J          1  2.191   2.191  10.382 0.04851 * 
RT_I         1  9.483   9.483  44.933 0.00677 **
RT_J         1  0.297   0.297   1.407 0.32095   
Residuals    3  0.633   0.211                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
176    3.658320
239    3.703189
359    4.584496
3174   4.581568
3321   3.664738
4085   6.703579
5021   5.171491
5058   4.115334
5436   6.553105
6810   3.254286
7469   6.758418
8996   5.642919
9189   3.359245
9760   3.640860
10248  3.911826
10792  4.594316
10866  3.407713
12153  3.927164
15010  4.683706
15238  6.173738
16385  3.963671
16505  6.930130

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.7422929531064841, 'T1_J': 0.30225252694333316, 'T2_J': 0.7202442177513864, 'U_J': 0.0485064134056378, 'U_I': 0.5641139532150486, 'I(T2_I^2)': 0.9095987132011424, 'T2_I': 0.5633709132632526, 'U1_I': 0.5323291841670696, 'I(U_I^2)': 0.5100079263509785, 'I(RT_I^2)': 0.002781958569325641, 'I(T2_J^2)': 0.7116063012433718, 'I(U1_I^2)': 0.9024383149398473, 'RT_I': 0.0067745371236582015, 'I(T1_I^2)': 0.2955867963806085, 'I(T1_J^2)': 0.6826977135178098, 'I(U_J^2)': 0.23194690437392224, 'RT_J': 0.32094891006939963, 'T1_I': 0.6500623639568575}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'U_J', 'I(U_J^2)', 'I(T1_I^2)', 'T1_J', 'RT_J', 'I(U_I^2)', 'U1_I', 'T2_I', 'U_I', 'T1_I', 'I(T1_J^2)', 'I(T2_J^2)', 'T2_J', 'I(RT_J^2)', 'I(U1_I^2)', 'I(T2_I^2)']
Variables within threshold: ['I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I']
Predicting Best Values for: ['I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I']
Using Model: cost_mean ~ I(RT_I^2) + RT_I + I(RT_I^2) + RT_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_I^2) + RT_I + I(RT_I^2) + RT_I, 
    tau = 0.15, data = structure(list(T1_I = c(10, 0, 1, 1, 0, 
    5, 0, 3, 11, 6, 0, 7, 5, 6, 0, 11, 10, 6, 0, 8, 11, 9), T1_J = c(0, 
    4, 4, 11, 8, 2, 0, 1, 7, 5, 5, 6, 0, 0, 4, 5, 11, 0, 0, 11, 
    10, 0), T2_I = c(11, 11, 0, 11, 6, 6, 5, 11, 0, 7, 9, 0, 
    11, 0, 2, 11, 0, 6, 0, 8, 0, 11), T2_J = c(0, 5, 11, 0, 11, 
    7, 10, 11, 7, 0, 0, 10, 6, 4, 5, 11, 11, 2, 0, 11, 0, 0), 
        U1_I = c(15, 28, 29, 7, 2, 4, 29, 23, 26, 28, 18, 13, 
        16, 0, 13, 1, 16, 27, 20, 29, 0, 1), U_I = c(0, 14, 0, 
        0, 0, 29, 0, 29, 0, 0, 17, 0, 0, 14, 0, 0, 14, 15, 0, 
        0, 28, 0), U_J = c(28, 0, 24, 29, 29, 0, 0, 0, 29, 2, 
        0, 0, 0, 0, 15, 2, 0, 0, 8, 13, 0, 19), RT_I = c(2, 0, 
        0, 0, 2, 0, 5, 2, 5, 2, 5, 5, 3, 2, 2, 0, 1, 0, 0, 5, 
        2, 5), RT_J = c(0, 0, 2, 5, 0, 2, 1, 5, 2, 1, 2, 0, 3, 
        0, 5, 5, 2, 5, 0, 0, 5, 2), cost_mean = c(3.65832, 3.703189, 
        4.584496, 4.581568, 3.664738, 6.703579, 5.171491, 4.115334, 
        6.553105, 3.254286, 6.758418, 5.642919, 3.359245, 3.64086, 
        3.911826, 4.594316, 3.407713, 3.927164, 4.683706, 6.173738, 
        3.963671, 6.93013)), .Names = c("T1_I", "T1_J", "T2_I", 
    "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
    ), row.names = c("176", "239", "359", "3174", "3321", "4085", 
    "5021", "5058", "5436", "6810", "7469", "8996", "9189", "9760", 
    "10248", "10792", "10866", "12153", "15010", "15238", "16385", 
    "16505"), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.927160e+00 -1.797693e+308   4.339030e+00
I(RT_I^2)     1.951000e-01   1.412100e-01  1.797693e+308
RT_I         -7.266400e-01 -1.797693e+308  -2.738000e-01

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 250576
Valid coordinates: 10560/52800
Tested coordinates: 505891
Valid coordinates: 15840/52800
Tested coordinates: 756010
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1011097
Valid coordinates: 26400/52800
Tested coordinates: 1266047
Valid coordinates: 31680/52800
Tested coordinates: 1521766
Valid coordinates: 36960/52800
Tested coordinates: 1773128
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2028219
Valid coordinates: 47520/52800
Tested coordinates: 2282095
Valid coordinates: 52800/52800
Tested coordinates: 2530499
Valid/Tested configurations: 52800/2530499
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7422929531064841, 'T1_J': 0.30225252694333316, 'T2_J': 0.7202442177513864, 'U_J': 0.0485064134056378, 'U_I': 0.5641139532150486, 'I(T2_I^2)': 0.9095987132011424, 'T2_I': 0.5633709132632526, 'U1_I': 0.5323291841670696, 'I(U_I^2)': 0.5100079263509785, 'I(RT_I^2)': 0.002781958569325641, 'I(T2_J^2)': 0.7116063012433718, 'I(U1_I^2)': 0.9024383149398473, 'RT_I': 0.0067745371236582015, 'I(T1_I^2)': 0.2955867963806085, 'I(T1_J^2)': 0.6826977135178098, 'I(U_J^2)': 0.23194690437392224, 'RT_J': 0.32094891006939963, 'T1_I': 0.6500623639568575}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'U_J', 'I(U_J^2)', 'I(T1_I^2)', 'T1_J', 'RT_J', 'I(U_I^2)', 'U1_I', 'T2_I', 'U_I', 'T1_I', 'I(T1_J^2)', 'I(T2_J^2)', 'T2_J', 'I(RT_J^2)', 'I(U1_I^2)', 'I(T2_I^2)']
Variables within threshold: ['RT_I']
Unique Variables: ['RT_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7422929531064841, 'T1_J': 0.30225252694333316, 'T2_J': 0.7202442177513864, 'U_J': 0.0485064134056378, 'U_I': 0.5641139532150486, 'I(T2_I^2)': 0.9095987132011424, 'T2_I': 0.5633709132632526, 'U1_I': 0.5323291841670696, 'I(U_I^2)': 0.5100079263509785, 'I(RT_I^2)': 0.002781958569325641, 'I(T2_J^2)': 0.7116063012433718, 'I(U1_I^2)': 0.9024383149398473, 'RT_I': 0.0067745371236582015, 'I(T1_I^2)': 0.2955867963806085, 'I(T1_J^2)': 0.6826977135178098, 'I(U_J^2)': 0.23194690437392224, 'RT_J': 0.32094891006939963, 'T1_I': 0.6500623639568575}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'U_J', 'I(U_J^2)', 'I(T1_I^2)', 'T1_J', 'RT_J', 'I(U_I^2)', 'U1_I', 'T2_I', 'U_I', 'T1_I', 'I(T1_J^2)', 'I(T2_J^2)', 'T2_J', 'I(RT_J^2)', 'I(U1_I^2)', 'I(T2_I^2)']
Variables within threshold: ['RT_I']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
7    3    4    8    9   11   3   0    2    1

Best From Design: [6, 5, 7, 0, 28, 0, 2, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.753903
Baseline Point:
4.753903
Design Best Point:
[6, 5, 7, 0, 28, 0, 2, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.684550357885
Predicted Best Point:
[3, 4, 8, 9, 11, 3, 0, 2, 1]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[3, 4, 8, 9, 11, 3, 0, 2, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		325
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			705
        Writes: 		111
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.338531
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.684550357885
Slowdown (Predicted Best): 0.702271586105
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.254286
Current Best Point: 
[6, 5, 7, 0, 28, 0, 2, 2, 1]
Step 1
Generating valid search space of size 15200 (does not spend evaluations)
Valid coordinates: 1520/15200
Tested coordinates: 60681
Valid coordinates: 3040/15200
Tested coordinates: 121564
Valid coordinates: 4560/15200
Tested coordinates: 181100
Valid coordinates: 6080/15200
Tested coordinates: 241536
Valid coordinates: 7600/15200
Tested coordinates: 302480
Valid coordinates: 9120/15200
Tested coordinates: 365620
Valid coordinates: 10640/15200
Tested coordinates: 426028
Valid coordinates: 12160/15200
Tested coordinates: 487199
Valid coordinates: 13680/15200
Tested coordinates: 547088
Valid coordinates: 15200/15200
Tested coordinates: 607450
Valid/Tested configurations: 15200/607450
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 85600     9

Pruned data dimensions: [1] 29180     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['RT_I']
Two-Level Factors: ['RT_I']
Three-Level Factors: ['RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 19 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 29180     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
4150     0    2    5    8    1   0  29    2    2
5149     1    0    0   11   29   0   8    2    3
9659    11   11    0   11    7   0  15    2    1
10582    6    9    0   11    0  11   0    2    5
11951   11    4    0    4    2  29   0    2    0
12216    4    0    0    3   20  14   0    2    0
14629    2    5    0   11   18  29   0    2    0
15038    0   11    6    0   26  26   0    2    5
15115    0   11    0    0   15   0   1    2    2
18585    5    2   11    0    0   0  15    2    0
19217    0    5   11    5   21   0  17    2    5
19601    8   10   11   11   27   0  29    2    0
20663    6    5    7    6   29   0   1    2    0
23405    5    7    5    0   17   0  10    2    3
25380   11    4   11    0   28  16   0    2    2
25867    0    1    6   11   14  16   0    2    0
26448    7    0   11    5    7  29   0    2    3
27806   11    0    0    0   18   0  29    2    5
29114   10    0   10   11   20   0   0    2    5

D-Efficiency Approximation: [1] 0.2367522

Measuring design of size 19
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2092
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3615
        Writes: 		385
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.084266
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1094
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1957
        Writes: 		239
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582282
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1132
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2013
        Writes: 		227
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.180707
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		7260
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11363
        Writes: 		1171
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.965946
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 16 must be greater than the stride value 16; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		375
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			850
        Writes: 		130
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.63974
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		243
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			556
        Writes: 		103
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.645314
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		400
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			903
        Writes: 		152
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.641891
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		14077
        Multiplications: 	4224
        Divisions: 		0
        Logical: 		0
        Reads: 			21333
        Writes: 		2199
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.966691
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		415
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			821
        Writes: 		113
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.29718
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		1020
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1783
        Writes: 		195
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.180065
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3066
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5241
        Writes: 		561
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.085145
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1898
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3260
        Writes: 		369
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.662922
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		220
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			464
        Writes: 		91
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.742525
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1202
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2133
        Writes: 		247
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.358425
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1345
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2397
        Writes: 		299
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.392359
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		266
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			609
        Writes: 		109
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.749107
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		4020
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6488
        Writes: 		703
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.395402
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		3482
        Multiplications: 	1136
        Divisions: 		0
        Logical: 		0
        Reads: 			5781
        Writes: 		609
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.174062
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1984
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3417
        Writes: 		376
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.965419
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
4150     0    2    5    8    1   0  29    2    2  4.084266
5149     1    0    0   11   29   0   8    2    3  4.582282
9659    11   11    0   11    7   0  15    2    1  3.180707
10582    6    9    0   11    0  11   0    2    5  3.965946
11951   11    4    0    4    2  29   0    2    0  3.639740
12216    4    0    0    3   20  14   0    2    0  3.645314
14629    2    5    0   11   18  29   0    2    0  3.641891
15038    0   11    6    0   26  26   0    2    5  3.966691
15115    0   11    0    0   15   0   1    2    2  3.297180
18585    5    2   11    0    0   0  15    2    0  4.180065
19217    0    5   11    5   21   0  17    2    5  4.085145
19601    8   10   11   11   27   0  29    2    0  3.662922
20663    6    5    7    6   29   0   1    2    0  3.742525
23405    5    7    5    0   17   0  10    2    3  3.358425
25380   11    4   11    0   28  16   0    2    2  3.392359
25867    0    1    6   11   14  16   0    2    0  3.749107
26448    7    0   11    5    7  29   0    2    3  3.395402
27806   11    0    0    0   18   0  29    2    5  4.174062
29114   10    0   10   11   20   0   0    2    5  3.965419

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
4150     0    2    5    8    1   0  29    2    2  4.084266
5149     1    0    0   11   29   0   8    2    3  4.582282
9659    11   11    0   11    7   0  15    2    1  3.180707
10582    6    9    0   11    0  11   0    2    5  3.965946
11951   11    4    0    4    2  29   0    2    0  3.639740
12216    4    0    0    3   20  14   0    2    0  3.645314
14629    2    5    0   11   18  29   0    2    0  3.641891
15038    0   11    6    0   26  26   0    2    5  3.966691
15115    0   11    0    0   15   0   1    2    2  3.297180
18585    5    2   11    0    0   0  15    2    0  4.180065
19217    0    5   11    5   21   0  17    2    5  4.085145
19601    8   10   11   11   27   0  29    2    0  3.662922
20663    6    5    7    6   29   0   1    2    0  3.742525
23405    5    7    5    0   17   0  10    2    3  3.358425
25380   11    4   11    0   28  16   0    2    2  3.392359
25867    0    1    6   11   14  16   0    2    0  3.749107
26448    7    0   11    5    7  29   0    2    3  3.395402
27806   11    0    0    0   18   0  29    2    5  4.174062
29114   10    0   10   11   20   0   0    2    5  3.965419

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
4150  -1.0000000 -0.6666667 -0.1666667  0.3333333 -0.93333333 -1.00000000
5149  -0.8333333 -1.0000000 -1.0000000  0.8333333  0.93333333 -1.00000000
9659   0.8333333  0.8333333 -1.0000000  0.8333333 -0.53333333 -1.00000000
10582  0.0000000  0.5000000 -1.0000000  0.8333333 -1.00000000 -0.26666667
11951  0.8333333 -0.3333333 -1.0000000 -0.3333333 -0.86666667  0.93333333
12216 -0.3333333 -1.0000000 -1.0000000 -0.5000000  0.33333333 -0.06666667
14629 -0.6666667 -0.1666667 -1.0000000  0.8333333  0.20000000  0.93333333
15038 -1.0000000  0.8333333  0.0000000 -1.0000000  0.73333333  0.73333333
15115 -1.0000000  0.8333333 -1.0000000 -1.0000000  0.00000000 -1.00000000
18585 -0.1666667 -0.6666667  0.8333333 -1.0000000 -1.00000000 -1.00000000
19217 -1.0000000 -0.1666667  0.8333333 -0.1666667  0.40000000 -1.00000000
19601  0.3333333  0.6666667  0.8333333  0.8333333  0.80000000 -1.00000000
20663  0.0000000 -0.1666667  0.1666667  0.0000000  0.93333333 -1.00000000
23405 -0.1666667  0.1666667 -0.1666667 -1.0000000  0.13333333 -1.00000000
25380  0.8333333 -0.3333333  0.8333333 -1.0000000  0.86666667  0.06666667
25867 -1.0000000 -0.8333333  0.0000000  0.8333333 -0.06666667  0.06666667
26448  0.1666667 -1.0000000  0.8333333 -0.1666667 -0.53333333  0.93333333
27806  0.8333333 -1.0000000 -1.0000000 -1.0000000  0.20000000 -1.00000000
29114  0.6666667 -1.0000000  0.6666667  0.8333333  0.33333333 -1.00000000
            U_Je      RT_Ie      RT_Je cost_mean
4150   0.9333333 -0.3333333 -0.3333333  4.084266
5149  -0.4666667 -0.3333333  0.0000000  4.582282
9659   0.0000000 -0.3333333 -0.6666667  3.180707
10582 -1.0000000 -0.3333333  0.6666667  3.965946
11951 -1.0000000 -0.3333333 -1.0000000  3.639740
12216 -1.0000000 -0.3333333 -1.0000000  3.645314
14629 -1.0000000 -0.3333333 -1.0000000  3.641891
15038 -1.0000000 -0.3333333  0.6666667  3.966691
15115 -0.9333333 -0.3333333 -0.3333333  3.297180
18585  0.0000000 -0.3333333 -1.0000000  4.180065
19217  0.1333333 -0.3333333  0.6666667  4.085145
19601  0.9333333 -0.3333333 -1.0000000  3.662922
20663 -0.9333333 -0.3333333 -1.0000000  3.742525
23405 -0.3333333 -0.3333333  0.0000000  3.358425
25380 -1.0000000 -0.3333333 -0.3333333  3.392359
25867 -1.0000000 -0.3333333 -1.0000000  3.749107
26448 -1.0000000 -0.3333333  0.0000000  3.395402
27806  0.9333333 -0.3333333  0.6666667  4.174062
29114 -1.0000000 -0.3333333  0.6666667  3.965419

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U1_I + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 41 10

Pruned data dimensions: [1] 26 10

Heteroscedasticity Test p-value: 0.589380539698
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.1393  0.1393   3.949 0.078137 .  
I(T1_J^2)    1 0.2542  0.2542   7.207 0.025017 *  
I(T2_I^2)    1 0.0033  0.0033   0.094 0.765617    
I(T2_J^2)    1 0.1045  0.1045   2.964 0.119252    
I(U1_I^2)    1 0.0120  0.0120   0.341 0.573498    
I(U_I^2)     1 0.0001  0.0001   0.003 0.956148    
I(U_J^2)     1 0.1398  0.1398   3.964 0.077671 .  
I(RT_J^2)    1 0.9319  0.9319  26.419 0.000611 ***
T1_I         1 0.0044  0.0044   0.125 0.731519    
T1_J         1 0.0392  0.0392   1.111 0.319279    
T2_I         1 0.0809  0.0809   2.294 0.164189    
T2_J         1 0.0157  0.0157   0.445 0.521639    
U1_I         1 0.5825  0.5825  16.513 0.002827 ** 
U_I          1 0.0455  0.0455   1.290 0.285456    
U_J          1 0.0375  0.0375   1.062 0.329604    
RT_J         1 0.1636  0.1636   4.637 0.059712 .  
Residuals    9 0.3175  0.0353                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
4150   4.084266
5149   4.582282
9659   3.180707
10582  3.965946
11951  3.639740
12216  3.645314
14629  3.641891
15038  3.966691
15115  3.297180
18585  4.180065
19217  4.085145
19601  3.662922
20663  3.742525
23405  3.358425
25380  3.392359
25867  3.749107
26448  3.395402
27806  4.174062
29114  3.965419

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.0006113426798046265, 'T1_J': 0.3192791522517284, 'T2_J': 0.5216392066514709, 'U_J': 0.3296042764374752, 'U_I': 0.2854562656881466, 'I(T2_I^2)': 0.7656174218132261, 'U1_I': 0.002826742105942399, 'I(U_I^2)': 0.9561482979176452, 'T2_I': 0.16418926927062696, 'I(T2_J^2)': 0.11925207745743518, 'I(U1_I^2)': 0.5734980341184657, 'I(T1_I^2)': 0.07813728532933027, 'I(T1_J^2)': 0.02501718185864873, 'I(U_J^2)': 0.07767144188615044, 'RT_J': 0.05971191107068531, 'T1_I': 0.7315194126732143}
Ordered Keys: 
['I(RT_J^2)', 'U1_I', 'I(T1_J^2)', 'RT_J', 'I(U_J^2)', 'I(T1_I^2)', 'I(T2_J^2)', 'T2_I', 'U_I', 'T1_J', 'U_J', 'T2_J', 'I(U1_I^2)', 'T1_I', 'I(T2_I^2)', 'I(U_I^2)']
Variables within threshold: ['I(RT_J^2)', 'RT_J', 'U1_I', 'I(U1_I^2)']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J', 'U1_I', 'I(U1_I^2)']
Using Model: cost_mean ~ I(RT_J^2) + RT_J + U1_I + I(U1_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 41 10

Pruned data dimensions: [1] 26 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J + U1_I + I(U1_I^2), 
    tau = 0.15, data = structure(list(T1_I = c(10, 0, 3, 6, 6, 
    0, 11, 0, 1, 11, 6, 11, 4, 2, 0, 0, 5, 0, 8, 6, 5, 11, 0, 
    7, 11, 10), T1_J = c(0, 8, 1, 5, 0, 4, 10, 2, 0, 11, 9, 4, 
    0, 5, 11, 11, 2, 5, 10, 5, 7, 4, 1, 0, 0, 0), T2_I = c(11, 
    6, 11, 7, 0, 2, 0, 5, 0, 0, 0, 0, 0, 0, 6, 0, 11, 11, 11, 
    7, 5, 11, 6, 11, 0, 10), T2_J = c(0, 11, 11, 0, 4, 5, 0, 
    8, 11, 11, 11, 4, 3, 11, 0, 0, 0, 5, 11, 6, 0, 0, 11, 5, 
    0, 11), U1_I = c(15, 2, 23, 28, 0, 13, 0, 1, 29, 7, 0, 2, 
    20, 18, 26, 15, 0, 21, 27, 29, 17, 28, 14, 7, 18, 20), U_I = c(0, 
    0, 29, 0, 14, 0, 28, 0, 0, 0, 11, 29, 14, 29, 26, 0, 0, 0, 
    0, 0, 0, 16, 16, 29, 0, 0), U_J = c(28, 29, 0, 2, 0, 15, 
    0, 29, 8, 15, 0, 0, 0, 0, 0, 1, 15, 17, 29, 1, 10, 0, 0, 
    0, 29, 0), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(0, 0, 5, 
    1, 0, 5, 5, 2, 3, 1, 5, 0, 0, 0, 5, 2, 0, 5, 0, 0, 3, 2, 
    0, 3, 5, 5), cost_mean = c(3.65832, 3.664738, 4.115334, 3.254286, 
    3.64086, 3.911826, 3.963671, 4.084266, 4.582282, 3.180707, 
    3.965946, 3.63974, 3.645314, 3.641891, 3.966691, 3.29718, 
    4.180065, 4.085145, 3.662922, 3.742525, 3.358425, 3.392359, 
    3.749107, 3.395402, 4.174062, 3.965419)), .Names = c("T1_I", 
    "T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
    "cost_mean"), row.names = c(1L, 5L, 8L, 10L, 14L, 15L, 21L, 
    23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 
    35L, 36L, 37L, 38L, 39L, 40L, 41L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.640860e+00 -1.797693e+308   3.652960e+00
I(RT_J^2)     1.199500e-01   6.956000e-02  1.797693e+308
RT_J         -5.373400e-01 -1.797693e+308  -5.333000e-02
U1_I         -6.840000e-03  -2.460000e-02   5.824000e-02
I(U1_I^2)     2.800000e-04  -5.000000e-04   1.260000e-03

Generating valid search space of size 45600 (does not spend evaluations)
Valid coordinates: 4560/45600
Tested coordinates: 180184
Valid coordinates: 9120/45600
Tested coordinates: 360715
Valid coordinates: 13680/45600
Tested coordinates: 543928
Valid coordinates: 18240/45600
Tested coordinates: 731814
Valid coordinates: 22800/45600
Tested coordinates: 909960
Tested coordinates: 1000000
Valid coordinates: 27360/45600
Tested coordinates: 1096678
Valid coordinates: 31920/45600
Tested coordinates: 1275700
Valid coordinates: 36480/45600
Tested coordinates: 1456491
Valid coordinates: 41040/45600
Tested coordinates: 1635518
Valid coordinates: 45600/45600
Tested coordinates: 1818672
Valid/Tested configurations: 45600/1818672
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 131200      9

Pruned data dimensions: [1] 74780     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0006113426798046265, 'T1_J': 0.3192791522517284, 'T2_J': 0.5216392066514709, 'U_J': 0.3296042764374752, 'U_I': 0.2854562656881466, 'I(T2_I^2)': 0.7656174218132261, 'U1_I': 0.002826742105942399, 'I(U_I^2)': 0.9561482979176452, 'T2_I': 0.16418926927062696, 'I(T2_J^2)': 0.11925207745743518, 'I(U1_I^2)': 0.5734980341184657, 'I(T1_I^2)': 0.07813728532933027, 'I(T1_J^2)': 0.02501718185864873, 'I(U_J^2)': 0.07767144188615044, 'RT_J': 0.05971191107068531, 'T1_I': 0.7315194126732143}
Ordered Keys: 
['I(RT_J^2)', 'U1_I', 'I(T1_J^2)', 'RT_J', 'I(U_J^2)', 'I(T1_I^2)', 'I(T2_J^2)', 'T2_I', 'U_I', 'T1_J', 'U_J', 'T2_J', 'I(U1_I^2)', 'T1_I', 'I(T2_I^2)', 'I(U_I^2)']
Variables within threshold: ['RT_J', 'U1_I']
Unique Variables: ['RT_J', 'U1_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0006113426798046265, 'T1_J': 0.3192791522517284, 'T2_J': 0.5216392066514709, 'U_J': 0.3296042764374752, 'U_I': 0.2854562656881466, 'I(T2_I^2)': 0.7656174218132261, 'U1_I': 0.002826742105942399, 'I(U_I^2)': 0.9561482979176452, 'T2_I': 0.16418926927062696, 'I(T2_J^2)': 0.11925207745743518, 'I(U1_I^2)': 0.5734980341184657, 'I(T1_I^2)': 0.07813728532933027, 'I(T1_J^2)': 0.02501718185864873, 'I(U_J^2)': 0.07767144188615044, 'RT_J': 0.05971191107068531, 'T1_I': 0.7315194126732143}
Ordered Keys: 
['I(RT_J^2)', 'U1_I', 'I(T1_J^2)', 'RT_J', 'I(U_J^2)', 'I(T1_I^2)', 'I(T2_J^2)', 'T2_I', 'U_I', 'T1_J', 'U_J', 'T2_J', 'I(U1_I^2)', 'T1_I', 'I(T2_I^2)', 'I(U_I^2)']
Variables within threshold: ['RT_J', 'U1_I']
Best Predicted:     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
356    6    5    0    7   23   0  24    1    2

Best From Design: [11, 11, 0, 11, 7, 0, 15, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753903
Design Best Point:
[11, 11, 0, 11, 7, 0, 15, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.669072759793
Predicted Best Point:
[6, 5, 0, 7, 23, 0, 24, 1, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[6, 5, 0, 7, 23, 0, 24, 1, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1004
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1959
        Writes: 		237
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.545442
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.669072759793
Slowdown (Predicted Best): 0.74579603328
Budget: 41/1000
Best point from design was better than predicted point
Updating Global Best: 3.180707
Current Best Point: 
[11, 11, 0, 11, 7, 0, 15, 2, 1]
Step 2
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 46985
Valid coordinates: 2400/12000
Tested coordinates: 94025
Valid coordinates: 3600/12000
Tested coordinates: 141198
Valid coordinates: 4800/12000
Tested coordinates: 190102
Valid coordinates: 6000/12000
Tested coordinates: 234439
Valid coordinates: 7200/12000
Tested coordinates: 281354
Valid coordinates: 8400/12000
Tested coordinates: 330369
Valid coordinates: 9600/12000
Tested coordinates: 377092
Valid coordinates: 10800/12000
Tested coordinates: 426141
Valid coordinates: 12000/12000
Tested coordinates: 475111
Valid/Tested configurations: 12000/475111
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 143200      9

Pruned data dimensions: [1] 12423     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Clean Info:
One-Level Factors: ['U1_I', 'RT_I', 'RT_J']
Two-Level Factors: ['U1_I', 'RT_I', 'RT_J']
Three-Level Factors: ['U1_I', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['U1_I', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U1_I', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 12423     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1507     0    6   11    6   23  29   0    2    2
1822     0   10   11   11   23   0  12    2    2
2190     7    0   11    9   23   0  29    2    2
3718     4    5   11    0   23  13   0    2    2
5848     0    0    5    4   23  14   0    2    2
7434     0    6    3    0   23   0  29    2    2
7693    11    0    0    0   23  29   0    2    2
8753     5    6    0    6   23   0  15    2    2
9524     1   11    0    0   23   0  29    2    2
9578    11    0   11    0   23   0  14    2    2
9588     5    6    5   11   23  29   0    2    2
11138    2    0    0   11   23   0   0    2    2
11191   11    4   11    8   23   0   0    2    2
11651    4   11    6    0   23   0   0    2    2
11711   11   11    0   11   23  18   0    2    2

D-Efficiency Approximation: [1] 0.2622217

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2133
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3713
        Writes: 		437
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.323006
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1094
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1959
        Writes: 		237
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.301311
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2111
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3652
        Writes: 		405
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.383538
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1160
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2088
        Writes: 		263
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.338569
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1218
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2183
        Writes: 		272
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.560764
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2108
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3645
        Writes: 		403
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.335158
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1846
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3059
        Writes: 		366
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.38088
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1268
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2245
        Writes: 		263
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.333898
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2108
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3645
        Writes: 		403
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580631
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		1042
        Multiplications: 	336
        Divisions: 		0
        Logical: 		0
        Reads: 			1791
        Writes: 		214
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.296738
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2142
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3734
        Writes: 		443
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.400449
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		307
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			623
        Writes: 		99
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.378227
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		313
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			637
        Writes: 		103
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.521342
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		310
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			630
        Writes: 		101
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.378306
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1462
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2591
        Writes: 		316
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.29601
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1507     0    6   11    6   23  29   0    2    2  3.323006
1822     0   10   11   11   23   0  12    2    2  3.301311
2190     7    0   11    9   23   0  29    2    2  3.383538
3718     4    5   11    0   23  13   0    2    2  3.338569
5848     0    0    5    4   23  14   0    2    2  3.560764
7434     0    6    3    0   23   0  29    2    2  3.335158
7693    11    0    0    0   23  29   0    2    2  3.380880
8753     5    6    0    6   23   0  15    2    2  3.333898
9524     1   11    0    0   23   0  29    2    2  4.580631
9578    11    0   11    0   23   0  14    2    2  3.296738
9588     5    6    5   11   23  29   0    2    2  3.400449
11138    2    0    0   11   23   0   0    2    2  3.378227
11191   11    4   11    8   23   0   0    2    2  3.521342
11651    4   11    6    0   23   0   0    2    2  3.378306
11711   11   11    0   11   23  18   0    2    2  3.296010

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1507     0    6   11    6   23  29   0    2    2  3.323006
1822     0   10   11   11   23   0  12    2    2  3.301311
2190     7    0   11    9   23   0  29    2    2  3.383538
3718     4    5   11    0   23  13   0    2    2  3.338569
5848     0    0    5    4   23  14   0    2    2  3.560764
7434     0    6    3    0   23   0  29    2    2  3.335158
7693    11    0    0    0   23  29   0    2    2  3.380880
8753     5    6    0    6   23   0  15    2    2  3.333898
9524     1   11    0    0   23   0  29    2    2  4.580631
9578    11    0   11    0   23   0  14    2    2  3.296738
9588     5    6    5   11   23  29   0    2    2  3.400449
11138    2    0    0   11   23   0   0    2    2  3.378227
11191   11    4   11    8   23   0   0    2    2  3.521342
11651    4   11    6    0   23   0   0    2    2  3.378306
11711   11   11    0   11   23  18   0    2    2  3.296010

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je     U1_Ie        U_Ie
1507  -1.0000000  0.0000000  0.8333333  0.0000000 0.5333333  0.93333333
1822  -1.0000000  0.6666667  0.8333333  0.8333333 0.5333333 -1.00000000
2190   0.1666667 -1.0000000  0.8333333  0.5000000 0.5333333 -1.00000000
3718  -0.3333333 -0.1666667  0.8333333 -1.0000000 0.5333333 -0.13333333
5848  -1.0000000 -1.0000000 -0.1666667 -0.3333333 0.5333333 -0.06666667
7434  -1.0000000  0.0000000 -0.5000000 -1.0000000 0.5333333 -1.00000000
7693   0.8333333 -1.0000000 -1.0000000 -1.0000000 0.5333333  0.93333333
8753  -0.1666667  0.0000000 -1.0000000  0.0000000 0.5333333 -1.00000000
9524  -0.8333333  0.8333333 -1.0000000 -1.0000000 0.5333333 -1.00000000
9578   0.8333333 -1.0000000  0.8333333 -1.0000000 0.5333333 -1.00000000
9588  -0.1666667  0.0000000 -0.1666667  0.8333333 0.5333333  0.93333333
11138 -0.6666667 -1.0000000 -1.0000000  0.8333333 0.5333333 -1.00000000
11191  0.8333333 -0.3333333  0.8333333  0.3333333 0.5333333 -1.00000000
11651 -0.3333333  0.8333333  0.0000000 -1.0000000 0.5333333 -1.00000000
11711  0.8333333  0.8333333 -1.0000000  0.8333333 0.5333333  0.20000000
             U_Je      RT_Ie      RT_Je cost_mean
1507  -1.00000000 -0.3333333 -0.3333333  3.323006
1822  -0.20000000 -0.3333333 -0.3333333  3.301311
2190   0.93333333 -0.3333333 -0.3333333  3.383538
3718  -1.00000000 -0.3333333 -0.3333333  3.338569
5848  -1.00000000 -0.3333333 -0.3333333  3.560764
7434   0.93333333 -0.3333333 -0.3333333  3.335158
7693  -1.00000000 -0.3333333 -0.3333333  3.380880
8753   0.00000000 -0.3333333 -0.3333333  3.333898
9524   0.93333333 -0.3333333 -0.3333333  4.580631
9578  -0.06666667 -0.3333333 -0.3333333  3.296738
9588  -1.00000000 -0.3333333 -0.3333333  3.400449
11138 -1.00000000 -0.3333333 -0.3333333  3.378227
11191 -1.00000000 -0.3333333 -0.3333333  3.521342
11651 -1.00000000 -0.3333333 -0.3333333  3.378306
11711 -1.00000000 -0.3333333 -0.3333333  3.296010

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U_I^2) + 
    I(U_J^2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 56 10

Pruned data dimensions: [1] 15 10

Heteroscedasticity Test p-value: 0.0187429707891
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
42    0    6   11    6   23  29   0    2    2  3.323006
43    0   10   11   11   23   0  12    2    2  3.301311
44    7    0   11    9   23   0  29    2    2  3.383538
45    4    5   11    0   23  13   0    2    2  3.338569
46    0    0    5    4   23  14   0    2    2  3.560764
47    0    6    3    0   23   0  29    2    2  3.335158
48   11    0    0    0   23  29   0    2    2  3.380880
49    5    6    0    6   23   0  15    2    2  3.333898
50    1   11    0    0   23   0  29    2    2  4.580631
51   11    0   11    0   23   0  14    2    2  3.296738
52    5    6    5   11   23  29   0    2    2  3.400449
53    2    0    0   11   23   0   0    2    2  3.378227
54   11    4   11    8   23   0   0    2    2  3.521342
55    4   11    6    0   23   0   0    2    2  3.378306
56   11   11    0   11   23  18   0    2    2  3.296010

Power Transform Unsuccessful
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.0642  0.0642   0.187  0.707
I(T1_J^2)    1 0.1487  0.1487   0.434  0.578
I(T2_I^2)    1 0.0519  0.0519   0.151  0.735
I(T2_J^2)    1 0.1217  0.1217   0.355  0.612
I(U_I^2)     1 0.0164  0.0164   0.048  0.847
I(U_J^2)     1 0.1616  0.1616   0.471  0.563
T1_I         1 0.0082  0.0082   0.024  0.891
T1_J         1 0.0352  0.0352   0.103  0.779
T2_I         1 0.0533  0.0533   0.155  0.732
T2_J         1 0.0170  0.0170   0.050  0.844
U_I          1 0.0000  0.0000   0.000  0.993
U_J          1 0.0775  0.0775   0.226  0.681
Residuals    2 0.6861  0.3431               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1507   3.323006
1822   3.301311
2190   3.383538
3718   3.338569
5848   3.560764
7434   3.335158
7693   3.380880
8753   3.333898
9524   4.580631
9578   3.296738
9588   3.400449
11138  3.378227
11191  3.521342
11651  3.378306
11711  3.296010

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.8914170309385998, 'T1_J': 0.779150629440309, 'T2_J': 0.8443264771602305, 'U_J': 0.681437254008754, 'U_I': 0.9934206924433178, 'I(U_I^2)': 0.8472396744554667, 'T2_I': 0.7315408639563641, 'I(T2_J^2)': 0.6118946238822096, 'I(T2_I^2)': 0.7347012025896318, 'I(T1_I^2)': 0.7074344595712487, 'I(T1_J^2)': 0.5779081043803519, 'I(U_J^2)': 0.5633648271209222}
Ordered Keys: 
['I(U_J^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'U_J', 'I(T1_I^2)', 'T2_I', 'I(T2_I^2)', 'T1_J', 'T2_J', 'I(U_I^2)', 'T1_I', 'U_I']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 56 10

Pruned data dimensions: [1] 15 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U_I^2) + I(U_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U_I + U_J, tau = 0.15, data = structure(list(T1_I = c(0, 
0, 7, 4, 0, 0, 11, 5, 1, 11, 5, 2, 11, 4, 11), T1_J = c(6, 10, 
0, 5, 0, 6, 0, 6, 11, 0, 6, 0, 4, 11, 11), T2_I = c(11, 11, 11, 
11, 5, 3, 0, 0, 0, 11, 5, 0, 11, 6, 0), T2_J = c(6, 11, 9, 0, 
4, 0, 0, 6, 0, 0, 11, 11, 8, 0, 11), U1_I = c(23, 23, 23, 23, 
23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23), U_I = c(29, 0, 0, 
13, 14, 0, 29, 0, 0, 0, 29, 0, 0, 0, 18), U_J = c(0, 12, 29, 
0, 0, 29, 0, 15, 29, 14, 0, 0, 0, 0, 0), RT_I = c(2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2), cost_mean = c(3.323006, 3.301311, 
3.383538, 3.338569, 3.560764, 3.335158, 3.38088, 3.333898, 4.580631, 
3.296738, 3.400449, 3.378227, 3.521342, 3.378306, 3.29601)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = 42:56, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.380740e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -2.570000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)     3.940000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)    -2.170000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -4.300000e-04 -1.797693e+308  1.797693e+308
I(U_I^2)     -3.000000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)     -2.800000e-04 -1.797693e+308  1.797693e+308
T1_I          1.583000e-02 -1.797693e+308  1.797693e+308
T1_J         -4.955000e-02 -1.797693e+308  1.797693e+308
T2_I          2.035000e-02 -1.797693e+308  1.797693e+308
T2_J          2.590000e-03 -1.797693e+308  1.797693e+308
U_I           1.343000e-02 -1.797693e+308  1.797693e+308
U_J           1.043000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 142244
Valid coordinates: 7200/36000
Tested coordinates: 284275
Valid coordinates: 10800/36000
Tested coordinates: 430268
Valid coordinates: 14400/36000
Tested coordinates: 577409
Valid coordinates: 18000/36000
Tested coordinates: 719600
Valid coordinates: 21600/36000
Tested coordinates: 864443
Tested coordinates: 1000000
Valid coordinates: 25200/36000
Tested coordinates: 1008810
Valid coordinates: 28800/36000
Tested coordinates: 1150757
Valid coordinates: 32400/36000
Tested coordinates: 1294491
Valid coordinates: 36000/36000
Tested coordinates: 1436830
Valid/Tested configurations: 36000/1436830
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 179200      9

Pruned data dimensions: [1] 48423     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.8914170309385998, 'T1_J': 0.779150629440309, 'T2_J': 0.8443264771602305, 'U_J': 0.681437254008754, 'U_I': 0.9934206924433178, 'I(U_I^2)': 0.8472396744554667, 'T2_I': 0.7315408639563641, 'I(T2_J^2)': 0.6118946238822096, 'I(T2_I^2)': 0.7347012025896318, 'I(T1_I^2)': 0.7074344595712487, 'I(T1_J^2)': 0.5779081043803519, 'I(U_J^2)': 0.5633648271209222}
Ordered Keys: 
['I(U_J^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'U_J', 'I(T1_I^2)', 'T2_I', 'I(T2_I^2)', 'T1_J', 'T2_J', 'I(U_I^2)', 'T1_I', 'U_I']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.8914170309385998, 'T1_J': 0.779150629440309, 'T2_J': 0.8443264771602305, 'U_J': 0.681437254008754, 'U_I': 0.9934206924433178, 'I(U_I^2)': 0.8472396744554667, 'T2_I': 0.7315408639563641, 'I(T2_J^2)': 0.6118946238822096, 'I(T2_I^2)': 0.7347012025896318, 'I(T1_I^2)': 0.7074344595712487, 'I(T1_J^2)': 0.5779081043803519, 'I(U_J^2)': 0.5633648271209222}
Ordered Keys: 
['I(U_J^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'U_J', 'I(T1_I^2)', 'T2_I', 'I(T2_I^2)', 'T1_J', 'T2_J', 'I(U_I^2)', 'T1_I', 'U_I']
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
8253    5    1    5    9   15   8   0    1    5

Best From Design: [11, 11, 0, 11, 23, 18, 0, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753903
Design Best Point:
[11, 11, 0, 11, 23, 18, 0, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.693327146137
Predicted Best Point:
[5, 1, 5, 9, 15, 8, 0, 1, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[5, 1, 5, 9, 15, 8, 0, 1, 5]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		5017
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			8096
        Writes: 		856
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.121598
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.693327146137
Slowdown (Predicted Best): 0.8669924481
Budget: 56/1000
Best point from design was better than predicted point
Current Best Point: 
[11, 11, 0, 11, 7, 0, 15, 2, 1]
Step 3
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 46452
Valid coordinates: 2400/12000
Tested coordinates: 94523
Valid coordinates: 3600/12000
Tested coordinates: 141104
Valid coordinates: 4800/12000
Tested coordinates: 188879
Valid coordinates: 6000/12000
Tested coordinates: 237590
Valid coordinates: 7200/12000
Tested coordinates: 284576
Valid coordinates: 8400/12000
Tested coordinates: 330506
Valid coordinates: 9600/12000
Tested coordinates: 376873
Valid coordinates: 10800/12000
Tested coordinates: 426020
Valid coordinates: 12000/12000
Tested coordinates: 474203
Valid/Tested configurations: 12000/474203
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 191200      9

Pruned data dimensions: [1] 60423     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Clean Info:
One-Level Factors: ['U1_I', 'RT_I', 'RT_J']
Two-Level Factors: ['U1_I', 'RT_I', 'RT_J']
Three-Level Factors: ['U1_I', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['U1_I', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U1_I', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 60423     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
9173     6    6    6    6   23  29   0    2    2
10009    5    0    5    0   23  13   0    2    2
11348   11    4    0    0   23   0   0    2    2
14407   11    3   11    0   23   0  29    2    2
24577   11   11    0   11   23  17   0    2    2
28659    5    0    0    6   23   0  29    2    2
30351    0   10    0    0   23  29   0    2    2
38011    0    0    5   11   23   0   0    2    2
41342    0    5   11    5   23  13   0    2    2
46969    5    0   11   11   23  29   0    2    2
49434    0   10    6   11   23   0  29    2    2
51647    5   11    6    0   23   0  15    2    2
52421   11    0   11    5   23   0  12    2    2
55549    3    5    0   11   23   0  14    2    2
57535    4   11   11   11   23   0   0    2    2

D-Efficiency Approximation: [1] 0.2730517

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2133
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3713
        Writes: 		437
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.324525
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1014
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1747
        Writes: 		222
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.29919
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		307
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			623
        Writes: 		99
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.384537
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2108
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3645
        Writes: 		403
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.639199
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1401
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2489
        Writes: 		305
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.377759
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2108
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3645
        Writes: 		403
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.419182
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		2120
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3702
        Writes: 		435
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.30018
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		307
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			623
        Writes: 		99
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.296793
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1157
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2081
        Writes: 		261
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.33744
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2136
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3720
        Writes: 		439
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.295028
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2114
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3659
        Writes: 		407
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.300847
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1271
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2252
        Writes: 		265
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.293247
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1088
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1945
        Writes: 		233
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.378971
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1214
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2159
        Writes: 		257
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.397613
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		310
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			630
        Writes: 		101
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.295548
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
9173     6    6    6    6   23  29   0    2    2  3.324525
10009    5    0    5    0   23  13   0    2    2  3.299190
11348   11    4    0    0   23   0   0    2    2  3.384537
14407   11    3   11    0   23   0  29    2    2  3.639199
24577   11   11    0   11   23  17   0    2    2  3.377759
28659    5    0    0    6   23   0  29    2    2  3.419182
30351    0   10    0    0   23  29   0    2    2  3.300180
38011    0    0    5   11   23   0   0    2    2  3.296793
41342    0    5   11    5   23  13   0    2    2  3.337440
46969    5    0   11   11   23  29   0    2    2  3.295028
49434    0   10    6   11   23   0  29    2    2  3.300847
51647    5   11    6    0   23   0  15    2    2  3.293247
52421   11    0   11    5   23   0  12    2    2  3.378971
55549    3    5    0   11   23   0  14    2    2  3.397613
57535    4   11   11   11   23   0   0    2    2  3.295548

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
9173     6    6    6    6   23  29   0    2    2  3.324525
10009    5    0    5    0   23  13   0    2    2  3.299190
11348   11    4    0    0   23   0   0    2    2  3.384537
14407   11    3   11    0   23   0  29    2    2  3.639199
24577   11   11    0   11   23  17   0    2    2  3.377759
28659    5    0    0    6   23   0  29    2    2  3.419182
30351    0   10    0    0   23  29   0    2    2  3.300180
38011    0    0    5   11   23   0   0    2    2  3.296793
41342    0    5   11    5   23  13   0    2    2  3.337440
46969    5    0   11   11   23  29   0    2    2  3.295028
49434    0   10    6   11   23   0  29    2    2  3.300847
51647    5   11    6    0   23   0  15    2    2  3.293247
52421   11    0   11    5   23   0  12    2    2  3.378971
55549    3    5    0   11   23   0  14    2    2  3.397613
57535    4   11   11   11   23   0   0    2    2  3.295548

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je     U1_Ie       U_Ie
9173   0.0000000  0.0000000  0.0000000  0.0000000 0.5333333  0.9333333
10009 -0.1666667 -1.0000000 -0.1666667 -1.0000000 0.5333333 -0.1333333
11348  0.8333333 -0.3333333 -1.0000000 -1.0000000 0.5333333 -1.0000000
14407  0.8333333 -0.5000000  0.8333333 -1.0000000 0.5333333 -1.0000000
24577  0.8333333  0.8333333 -1.0000000  0.8333333 0.5333333  0.1333333
28659 -0.1666667 -1.0000000 -1.0000000  0.0000000 0.5333333 -1.0000000
30351 -1.0000000  0.6666667 -1.0000000 -1.0000000 0.5333333  0.9333333
38011 -1.0000000 -1.0000000 -0.1666667  0.8333333 0.5333333 -1.0000000
41342 -1.0000000 -0.1666667  0.8333333 -0.1666667 0.5333333 -0.1333333
46969 -0.1666667 -1.0000000  0.8333333  0.8333333 0.5333333  0.9333333
49434 -1.0000000  0.6666667  0.0000000  0.8333333 0.5333333 -1.0000000
51647 -0.1666667  0.8333333  0.0000000 -1.0000000 0.5333333 -1.0000000
52421  0.8333333 -1.0000000  0.8333333 -0.1666667 0.5333333 -1.0000000
55549 -0.5000000 -0.1666667 -1.0000000  0.8333333 0.5333333 -1.0000000
57535 -0.3333333  0.8333333  0.8333333  0.8333333 0.5333333 -1.0000000
             U_Je      RT_Ie      RT_Je cost_mean
9173  -1.00000000 -0.3333333 -0.3333333  3.324525
10009 -1.00000000 -0.3333333 -0.3333333  3.299190
11348 -1.00000000 -0.3333333 -0.3333333  3.384537
14407  0.93333333 -0.3333333 -0.3333333  3.639199
24577 -1.00000000 -0.3333333 -0.3333333  3.377759
28659  0.93333333 -0.3333333 -0.3333333  3.419182
30351 -1.00000000 -0.3333333 -0.3333333  3.300180
38011 -1.00000000 -0.3333333 -0.3333333  3.296793
41342 -1.00000000 -0.3333333 -0.3333333  3.337440
46969 -1.00000000 -0.3333333 -0.3333333  3.295028
49434  0.93333333 -0.3333333 -0.3333333  3.300847
51647  0.00000000 -0.3333333 -0.3333333  3.293247
52421 -0.20000000 -0.3333333 -0.3333333  3.378971
55549 -0.06666667 -0.3333333 -0.3333333  3.397613
57535 -1.00000000 -0.3333333 -0.3333333  3.295548

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U_I^2) + 
    I(U_J^2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 71 10

Pruned data dimensions: [1] 30 10

Heteroscedasticity Test p-value: 4.97664138284e-12
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
42    0    6   11    6   23  29   0    2    2  3.323006
43    0   10   11   11   23   0  12    2    2  3.301311
44    7    0   11    9   23   0  29    2    2  3.383538
45    4    5   11    0   23  13   0    2    2  3.338569
46    0    0    5    4   23  14   0    2    2  3.560764
47    0    6    3    0   23   0  29    2    2  3.335158
48   11    0    0    0   23  29   0    2    2  3.380880
49    5    6    0    6   23   0  15    2    2  3.333898
50    1   11    0    0   23   0  29    2    2  4.580631
51   11    0   11    0   23   0  14    2    2  3.296738
52    5    6    5   11   23  29   0    2    2  3.400449
53    2    0    0   11   23   0   0    2    2  3.378227
54   11    4   11    8   23   0   0    2    2  3.521342
55    4   11    6    0   23   0   0    2    2  3.378306
56   11   11    0   11   23  18   0    2    2  3.296010
57    6    6    6    6   23  29   0    2    2  3.324525
58    5    0    5    0   23  13   0    2    2  3.299190
59   11    4    0    0   23   0   0    2    2  3.384537
60   11    3   11    0   23   0  29    2    2  3.639199
61   11   11    0   11   23  17   0    2    2  3.377759
62    5    0    0    6   23   0  29    2    2  3.419182
63    0   10    0    0   23  29   0    2    2  3.300180
64    0    0    5   11   23   0   0    2    2  3.296793
65    0    5   11    5   23  13   0    2    2  3.337440
66    5    0   11   11   23  29   0    2    2  3.295028
67    0   10    6   11   23   0  29    2    2  3.300847
68    5   11    6    0   23   0  15    2    2  3.293247
69   11    0   11    5   23   0  12    2    2  3.378971
70    3    5    0   11   23   0  14    2    2  3.397613
71    4   11   11   11   23   0   0    2    2  3.295548

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value Pr(>F)
I(T1_I^2)    1 1.309e-29 1.309e-29   1.338  0.263
I(T1_J^2)    1 1.005e-29 1.005e-29   1.028  0.325
I(T2_I^2)    1 8.450e-30 8.448e-30   0.863  0.366
I(T2_J^2)    1 8.170e-30 8.172e-30   0.835  0.374
I(U_I^2)     1 1.097e-29 1.097e-29   1.121  0.305
I(U_J^2)     1 1.740e-29 1.740e-29   1.778  0.200
T1_I         1 2.600e-31 2.620e-31   0.027  0.872
T1_J         1 5.540e-30 5.543e-30   0.567  0.462
T2_I         1 3.920e-30 3.920e-30   0.401  0.535
T2_J         1 7.930e-30 7.931e-30   0.811  0.381
U_I          1 4.500e-31 4.450e-31   0.046  0.834
U_J          1 2.175e-29 2.175e-29   2.223  0.154
Residuals   17 1.663e-28 9.784e-30               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
9173   3.324525
10009  3.299190
11348  3.384537
14407  3.639199
24577  3.377759
28659  3.419182
30351  3.300180
38011  3.296793
41342  3.337440
46969  3.295028
49434  3.300847
51647  3.293247
52421  3.378971
55549  3.397613
57535  3.295548

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.8720016431610706, 'T1_J': 0.4619176046242909, 'T2_J': 0.3805238070545146, 'U_J': 0.15430268169652514, 'U_I': 0.833583467418568, 'I(U_I^2)': 0.3045662352938087, 'T2_I': 0.5351851016003708, 'I(T2_J^2)': 0.3735554212182989, 'I(T2_I^2)': 0.36579718969005304, 'I(T1_I^2)': 0.26335604862096323, 'I(T1_J^2)': 0.32491501824545777, 'I(U_J^2)': 0.1999342545657151}
Ordered Keys: 
['U_J', 'I(U_J^2)', 'I(T1_I^2)', 'I(U_I^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'T2_J', 'T1_J', 'T2_I', 'U_I', 'T1_I']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 71 10

Pruned data dimensions: [1] 30 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U_I^2) + I(U_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U_I + U_J, tau = 0.15, data = structure(list(T1_I = c(0, 
0, 7, 4, 0, 0, 11, 5, 1, 11, 5, 2, 11, 4, 11, 6, 5, 11, 11, 11, 
5, 0, 0, 0, 5, 0, 5, 11, 3, 4), T1_J = c(6, 10, 0, 5, 0, 6, 0, 
6, 11, 0, 6, 0, 4, 11, 11, 6, 0, 4, 3, 11, 0, 10, 0, 5, 0, 10, 
11, 0, 5, 11), T2_I = c(11, 11, 11, 11, 5, 3, 0, 0, 0, 11, 5, 
0, 11, 6, 0, 6, 5, 0, 11, 0, 0, 0, 5, 11, 11, 6, 6, 11, 0, 11
), T2_J = c(6, 11, 9, 0, 4, 0, 0, 6, 0, 0, 11, 11, 8, 0, 11, 
6, 0, 0, 0, 11, 6, 0, 11, 5, 11, 11, 0, 5, 11, 11), U1_I = c(23, 
23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 
23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23), U_I = c(29, 
0, 0, 13, 14, 0, 29, 0, 0, 0, 29, 0, 0, 0, 18, 29, 13, 0, 0, 
17, 0, 29, 0, 13, 29, 0, 0, 0, 0, 0), U_J = c(0, 12, 29, 0, 0, 
29, 0, 15, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 29, 0, 0, 0, 
0, 29, 15, 12, 14, 0), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), 
    RT_J = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), cost_mean = c(3.323006, 
    3.301311, 3.383538, 3.338569, 3.560764, 3.335158, 3.38088, 
    3.333898, 4.580631, 3.296738, 3.400449, 3.378227, 3.521342, 
    3.378306, 3.29601, 3.324525, 3.29919, 3.384537, 3.639199, 
    3.377759, 3.419182, 3.30018, 3.296793, 3.33744, 3.295028, 
    3.300847, 3.293247, 3.378971, 3.397613, 3.295548)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = 42:71, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.357950e+00   2.625470e+00   3.368360e+00
I(T1_I^2)    -1.200000e-04  -1.880000e-03   9.800000e-04
I(T1_J^2)    -3.200000e-04  -5.230000e-03   1.185000e-02
I(T2_I^2)     9.700000e-04  -1.300000e-04  1.797693e+308
I(T2_J^2)    -1.400000e-03  -3.640000e-03  1.797693e+308
I(U_I^2)      1.000000e-04  -1.700000e-04  1.797693e+308
I(U_J^2)      3.400000e-04   2.000000e-05  1.797693e+308
T1_I          3.870000e-03  -6.340000e-03   2.956000e-02
T1_J          7.600000e-04  -1.016700e-01   4.723000e-02
T2_I         -1.291000e-02 -1.797693e+308   1.400000e-04
T2_J          1.349000e-02 -1.797693e+308   3.384000e-02
U_I          -3.920000e-03 -1.797693e+308   6.800000e-04
U_J          -9.390000e-03 -1.797693e+308   7.470000e-03

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 144221
Valid coordinates: 7200/36000
Tested coordinates: 288386
Valid coordinates: 10800/36000
Tested coordinates: 433474
Valid coordinates: 14400/36000
Tested coordinates: 579038
Valid coordinates: 18000/36000
Tested coordinates: 720434
Valid coordinates: 21600/36000
Tested coordinates: 864432
Tested coordinates: 1000000
Valid coordinates: 25200/36000
Tested coordinates: 1009963
Valid coordinates: 28800/36000
Tested coordinates: 1153348
Valid coordinates: 32400/36000
Tested coordinates: 1296742
Valid coordinates: 36000/36000
Tested coordinates: 1443056
Valid/Tested configurations: 36000/1443056
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 227200      9

Pruned data dimensions: [1] 96423     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.8720016431610706, 'T1_J': 0.4619176046242909, 'T2_J': 0.3805238070545146, 'U_J': 0.15430268169652514, 'U_I': 0.833583467418568, 'I(U_I^2)': 0.3045662352938087, 'T2_I': 0.5351851016003708, 'I(T2_J^2)': 0.3735554212182989, 'I(T2_I^2)': 0.36579718969005304, 'I(T1_I^2)': 0.26335604862096323, 'I(T1_J^2)': 0.32491501824545777, 'I(U_J^2)': 0.1999342545657151}
Ordered Keys: 
['U_J', 'I(U_J^2)', 'I(T1_I^2)', 'I(U_I^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'T2_J', 'T1_J', 'T2_I', 'U_I', 'T1_I']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.8720016431610706, 'T1_J': 0.4619176046242909, 'T2_J': 0.3805238070545146, 'U_J': 0.15430268169652514, 'U_I': 0.833583467418568, 'I(U_I^2)': 0.3045662352938087, 'T2_I': 0.5351851016003708, 'I(T2_J^2)': 0.3735554212182989, 'I(T2_I^2)': 0.36579718969005304, 'I(T1_I^2)': 0.26335604862096323, 'I(T1_J^2)': 0.32491501824545777, 'I(U_J^2)': 0.1999342545657151}
Ordered Keys: 
['U_J', 'I(U_J^2)', 'I(T1_I^2)', 'I(U_I^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'T2_J', 'T1_J', 'T2_I', 'U_I', 'T1_I']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
45186    4    2   10    2    9   0  22    3    4

Best From Design: [5, 11, 6, 0, 23, 0, 15, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753903
Design Best Point:
[5, 11, 6, 0, 23, 0, 15, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.692745939494
Predicted Best Point:
[4, 2, 10, 2, 9, 0, 22, 3, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 2, 10, 2, 9, 0, 22, 3, 4]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 4 must be greater than the stride value 4; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		4577
        Multiplications: 	1440
        Divisions: 		0
        Logical: 		0
        Reads: 			7324
        Writes: 		761
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.478974
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 23, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.692745939494
Slowdown (Predicted Best): 0.942167730389
Budget: 71/1000
Best point from design was better than predicted point
Current Best Point: 
[11, 11, 0, 11, 7, 0, 15, 2, 1]
Final Best Point: 
[11, 11, 0, 11, 7, 0, 15, 2, 1]
Ending DLMT
Best Point: [11, 11, 0, 11, 7, 0, 15, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.49460575903
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.49460575903
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [11, 11, 0, 11, 7, 0, 15, 2, 1]={'T1_I': 2048, 'T1_J': 2048, 'U_J': 16, 'U_I': 1, 'T2_I': 1, 'T2_J': 2048, 'U1_I': 8, 'RT_I': 4, 'RT_J': 2}, cost=3.180707e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-8080.56, runs=76
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 2048
 T1_J = 2048
 T2_I = 1
 T2_J = 2048
 U1_I = 8
 U_I = 1
 U_J = 16
 cost_mean = 3.180707
 points = 76
 speedup = 1.49460575903
 step = 4
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1132
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2013
        Writes: 		227
        Comparisons:		13
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
