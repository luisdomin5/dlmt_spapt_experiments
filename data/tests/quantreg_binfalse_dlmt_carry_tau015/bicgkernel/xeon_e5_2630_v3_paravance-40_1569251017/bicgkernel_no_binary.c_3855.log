
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 89162
Valid coordinates: 3520/17600
Tested coordinates: 174624
Valid coordinates: 5280/17600
Tested coordinates: 260994
Valid coordinates: 7040/17600
Tested coordinates: 342217
Valid coordinates: 8800/17600
Tested coordinates: 428153
Valid coordinates: 10560/17600
Tested coordinates: 513801
Valid coordinates: 12320/17600
Tested coordinates: 602845
Valid coordinates: 14080/17600
Tested coordinates: 684928
Valid coordinates: 15840/17600
Tested coordinates: 767202
Valid coordinates: 17600/17600
Tested coordinates: 848177
Valid/Tested configurations: 17600/848177
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
564      1    0    5   11   10  10   0    5    0
654      0   11    0    0   15   0  29    3    0
679      8    4    0    0    0  28   0    5    2
940      5    7    5    9   25   0  29    0    5
1296    11    6    0    6    1   0  17    0    5
2557     0    4   11    0   16  19   0    0    5
2593     6    5    0    7   29  16   0    3    0
5076     2    3    4   11   11   0  15    2    0
5686     2    0    9    0    0   0  29    3    2
5860    11    5   11    5   17  17   0    3    2
6194     5   11    5    0    2  12   0    0    0
6581     0   11    0   11   26  18   0    0    3
7452     1   10    2   11   29   3   0    2    5
7875     0    4    3    4   29  29   0    0    0
11161   11    7   11   11    0   0   0    0    0
11284   11    1   11    0   29   0  12    5    0
11758    6    0    0    6   15   0   0    0    3
12666    1    1   11    6    2   0  11    2    5
13295    8   10   11   10   19  29   0    5    0
14488    5   11    5    0   15   0  10    1    3
15907   11    0    0    1    9  29   0    2    5
16490    0    7    7    8   18   0   0    5    2

D-Efficiency Approximation: [1] 0.2206218

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		448
        Multiplications: 	176
        Divisions: 		0
        Logical: 		0
        Reads: 			1015
        Writes: 		139
        Comparisons:		13
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.585498
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		3568
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5687
        Writes: 		597
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.800312
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		3724
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6356
        Writes: 		680
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.918117
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		614
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1377
        Writes: 		172
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58153
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		479
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1082
        Writes: 		122
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.588003
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		9240
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14011
        Writes: 		1447
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.949256
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		317
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			719
        Writes: 		132
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.521567
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1042
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1828
        Writes: 		213
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.910046
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		3682
        Multiplications: 	1136
        Divisions: 		0
        Logical: 		0
        Reads: 			5743
        Writes: 		590
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581514
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1635
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2877
        Writes: 		339
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.375651
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		165
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			375
        Writes: 		64
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.748572
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		2306
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3758
        Writes: 		428
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.15577
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		3673
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			6141
        Writes: 		669
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.78666
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 16 must be greater than the stride value 16; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		362
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			803
        Writes: 		142
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.603633
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	5
        Additions: 		19
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			60
        Writes: 		16
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.589222
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		6079
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			9383
        Writes: 		979
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.633047
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		107
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			259
        Writes: 		50
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.671829
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2696
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4624
        Writes: 		488
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.026318
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		647
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1451
        Writes: 		205
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.533317
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		670
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1329
        Writes: 		165
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.594569
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		15419
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23285
        Writes: 		2383
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.161385
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1988
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3427
        Writes: 		378
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.743502
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
564      1    0    5   11   10  10   0    5    0  4.585498
654      0   11    0    0   15   0  29    3    0  3.800312
679      8    4    0    0    0  28   0    5    2  6.918117
940      5    7    5    9   25   0  29    0    5  4.581530
1296    11    6    0    6    1   0  17    0    5  4.588003
2557     0    4   11    0   16  19   0    0    5  3.949256
2593     6    5    0    7   29  16   0    3    0  3.521567
5076     2    3    4   11   11   0  15    2    0  3.910046
5686     2    0    9    0    0   0  29    3    2  4.581514
5860    11    5   11    5   17  17   0    3    2  3.375651
6194     5   11    5    0    2  12   0    0    0  3.748572
6581     0   11    0   11   26  18   0    0    3  3.155770
7452     1   10    2   11   29   3   0    2    5  4.786660
7875     0    4    3    4   29  29   0    0    0  4.603633
11161   11    7   11   11    0   0   0    0    0  4.589222
11284   11    1   11    0   29   0  12    5    0  6.633047
11758    6    0    0    6   15   0   0    0    3  4.671829
12666    1    1   11    6    2   0  11    2    5  9.026318
13295    8   10   11   10   19  29   0    5    0  5.533317
14488    5   11    5    0   15   0  10    1    3  3.594569
15907   11    0    0    1    9  29   0    2    5  4.161385
16490    0    7    7    8   18   0   0    5    2  6.743502

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
564      1    0    5   11   10  10   0    5    0  4.585498
654      0   11    0    0   15   0  29    3    0  3.800312
679      8    4    0    0    0  28   0    5    2  6.918117
940      5    7    5    9   25   0  29    0    5  4.581530
1296    11    6    0    6    1   0  17    0    5  4.588003
2557     0    4   11    0   16  19   0    0    5  3.949256
2593     6    5    0    7   29  16   0    3    0  3.521567
5076     2    3    4   11   11   0  15    2    0  3.910046
5686     2    0    9    0    0   0  29    3    2  4.581514
5860    11    5   11    5   17  17   0    3    2  3.375651
6194     5   11    5    0    2  12   0    0    0  3.748572
6581     0   11    0   11   26  18   0    0    3  3.155770
7452     1   10    2   11   29   3   0    2    5  4.786660
7875     0    4    3    4   29  29   0    0    0  4.603633
11161   11    7   11   11    0   0   0    0    0  4.589222
11284   11    1   11    0   29   0  12    5    0  6.633047
11758    6    0    0    6   15   0   0    0    3  4.671829
12666    1    1   11    6    2   0  11    2    5  9.026318
13295    8   10   11   10   19  29   0    5    0  5.533317
14488    5   11    5    0   15   0  10    1    3  3.594569
15907   11    0    0    1    9  29   0    2    5  4.161385
16490    0    7    7    8   18   0   0    5    2  6.743502

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
564   -0.8333333 -1.0000000 -0.1666667  0.8333333 -0.33333333 -0.33333333
654   -1.0000000  0.8333333 -1.0000000 -1.0000000  0.00000000 -1.00000000
679    0.3333333 -0.3333333 -1.0000000 -1.0000000 -1.00000000  0.86666667
940   -0.1666667  0.1666667 -0.1666667  0.5000000  0.66666667 -1.00000000
1296   0.8333333  0.0000000 -1.0000000  0.0000000 -0.93333333 -1.00000000
2557  -1.0000000 -0.3333333  0.8333333 -1.0000000  0.06666667  0.26666667
2593   0.0000000 -0.1666667 -1.0000000  0.1666667  0.93333333  0.06666667
5076  -0.6666667 -0.5000000 -0.3333333  0.8333333 -0.26666667 -1.00000000
5686  -0.6666667 -1.0000000  0.5000000 -1.0000000 -1.00000000 -1.00000000
5860   0.8333333 -0.1666667  0.8333333 -0.1666667  0.13333333  0.13333333
6194  -0.1666667  0.8333333 -0.1666667 -1.0000000 -0.86666667 -0.20000000
6581  -1.0000000  0.8333333 -1.0000000  0.8333333  0.73333333  0.20000000
7452  -0.8333333  0.6666667 -0.6666667  0.8333333  0.93333333 -0.80000000
7875  -1.0000000 -0.3333333 -0.5000000 -0.3333333  0.93333333  0.93333333
11161  0.8333333  0.1666667  0.8333333  0.8333333 -1.00000000 -1.00000000
11284  0.8333333 -0.8333333  0.8333333 -1.0000000  0.93333333 -1.00000000
11758  0.0000000 -1.0000000 -1.0000000  0.0000000  0.00000000 -1.00000000
12666 -0.8333333 -0.8333333  0.8333333  0.0000000 -0.86666667 -1.00000000
13295  0.3333333  0.6666667  0.8333333  0.6666667  0.26666667  0.93333333
14488 -0.1666667  0.8333333 -0.1666667 -1.0000000  0.00000000 -1.00000000
15907  0.8333333 -1.0000000 -1.0000000 -0.8333333 -0.40000000  0.93333333
16490 -1.0000000  0.1666667  0.1666667  0.3333333  0.20000000 -1.00000000
            U_Je      RT_Ie      RT_Je cost_mean
564   -1.0000000  0.6666667 -1.0000000  4.585498
654    0.9333333  0.0000000 -1.0000000  3.800312
679   -1.0000000  0.6666667 -0.3333333  6.918117
940    0.9333333 -1.0000000  0.6666667  4.581530
1296   0.1333333 -1.0000000  0.6666667  4.588003
2557  -1.0000000 -1.0000000  0.6666667  3.949256
2593  -1.0000000  0.0000000 -1.0000000  3.521567
5076   0.0000000 -0.3333333 -1.0000000  3.910046
5686   0.9333333  0.0000000 -0.3333333  4.581514
5860  -1.0000000  0.0000000 -0.3333333  3.375651
6194  -1.0000000 -1.0000000 -1.0000000  3.748572
6581  -1.0000000 -1.0000000  0.0000000  3.155770
7452  -1.0000000 -0.3333333  0.6666667  4.786660
7875  -1.0000000 -1.0000000 -1.0000000  4.603633
11161 -1.0000000 -1.0000000 -1.0000000  4.589222
11284 -0.2000000  0.6666667 -1.0000000  6.633047
11758 -1.0000000 -1.0000000  0.0000000  4.671829
12666 -0.2666667 -0.3333333  0.6666667  9.026318
13295 -1.0000000  0.6666667 -1.0000000  5.533317
14488 -0.3333333 -0.6666667  0.0000000  3.594569
15907 -1.0000000 -0.3333333  0.6666667  4.161385
16490 -1.0000000  0.6666667 -0.3333333  6.743502

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.157279790137
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1  0.003   0.003   0.002  0.965
I(T1_J^2)    1  5.276   5.276   3.933  0.142
I(T2_I^2)    1  4.156   4.156   3.098  0.177
I(T2_J^2)    1  0.069   0.069   0.052  0.835
I(U1_I^2)    1  0.145   0.145   0.108  0.764
I(U_I^2)     1  0.015   0.015   0.011  0.922
I(U_J^2)     1  0.315   0.315   0.235  0.661
I(RT_I^2)    1  6.275   6.275   4.678  0.119
I(RT_J^2)    1  5.310   5.310   3.959  0.141
T1_I         1  0.100   0.100   0.075  0.802
T1_J         1  0.138   0.138   0.103  0.770
T2_I         1  0.355   0.355   0.264  0.643
T2_J         1  1.315   1.315   0.981  0.395
U1_I         1  6.893   6.893   5.138  0.108
U_I          1  7.330   7.330   5.465  0.101
U_J          1  0.160   0.160   0.119  0.753
RT_I         1  0.128   0.128   0.096  0.777
RT_J         1  0.136   0.136   0.101  0.771
Residuals    3  4.024   1.341               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
564    4.585498
654    3.800312
679    6.918117
940    4.581530
1296   4.588003
2557   3.949256
2593   3.521567
5076   3.910046
5686   4.581514
5860   3.375651
6194   3.748572
6581   3.155770
7452   4.786660
7875   4.603633
11161  4.589222
11284  6.633047
11758  4.671829
12666  9.026318
13295  5.533317
14488  3.594569
15907  4.161385
16490  6.743502

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.14073203137281134, 'T1_J': 0.7698244149993126, 'T2_J': 0.3950573992401225, 'U_J': 0.7527271754105416, 'U_I': 0.10143736147917452, 'I(T2_I^2)': 0.176602090381467, 'T2_I': 0.6425387751340101, 'U1_I': 0.10824596040437523, 'I(U_I^2)': 0.9223257702394179, 'I(RT_I^2)': 0.11925896394586304, 'I(T2_J^2)': 0.8348288926608396, 'I(U1_I^2)': 0.7635600142833254, 'RT_I': 0.7772047966331942, 'I(T1_I^2)': 0.9645922707112107, 'I(T1_J^2)': 0.1416063833298608, 'I(U_J^2)': 0.6612250453476275, 'RT_J': 0.7714369806204097, 'T1_I': 0.8023979465280601}
Ordered Keys: 
['U_I', 'U1_I', 'I(RT_I^2)', 'I(RT_J^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'T2_J', 'T2_I', 'I(U_J^2)', 'U_J', 'I(U1_I^2)', 'T1_J', 'RT_J', 'RT_I', 'T1_I', 'I(T2_J^2)', 'I(U_I^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.15, data = structure(list(T1_I = c(1, 
0, 8, 5, 11, 0, 6, 2, 2, 11, 5, 0, 1, 0, 11, 11, 6, 1, 8, 5, 
11, 0), T1_J = c(0, 11, 4, 7, 6, 4, 5, 3, 0, 5, 11, 11, 10, 4, 
7, 1, 0, 1, 10, 11, 0, 7), T2_I = c(5, 0, 0, 5, 0, 11, 0, 4, 
9, 11, 5, 0, 2, 3, 11, 11, 0, 11, 11, 5, 0, 7), T2_J = c(11, 
0, 0, 9, 6, 0, 7, 11, 0, 5, 0, 11, 11, 4, 11, 0, 6, 6, 10, 0, 
1, 8), U1_I = c(10, 15, 0, 25, 1, 16, 29, 11, 0, 17, 2, 26, 29, 
29, 0, 29, 15, 2, 19, 15, 9, 18), U_I = c(10, 0, 28, 0, 0, 19, 
16, 0, 0, 17, 12, 18, 3, 29, 0, 0, 0, 0, 29, 0, 29, 0), U_J = c(0, 
29, 0, 29, 17, 0, 0, 15, 29, 0, 0, 0, 0, 0, 0, 12, 0, 11, 0, 
10, 0, 0), RT_I = c(5, 3, 5, 0, 0, 0, 3, 2, 3, 3, 0, 0, 2, 0, 
0, 5, 0, 2, 5, 1, 2, 5), RT_J = c(0, 0, 2, 5, 5, 5, 0, 0, 2, 
2, 0, 3, 5, 0, 0, 0, 3, 5, 0, 3, 5, 2), cost_mean = c(4.585498, 
3.800312, 6.918117, 4.58153, 4.588003, 3.949256, 3.521567, 3.910046, 
4.581514, 3.375651, 3.748572, 3.15577, 4.78666, 4.603633, 4.589222, 
6.633047, 4.671829, 9.026318, 5.533317, 3.594569, 4.161385, 6.743502
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("564", "654", 
"679", "940", "1296", "2557", "2593", "5076", "5686", "5860", 
"6194", "6581", "7452", "7875", "11161", "11284", "11758", "12666", 
"13295", "14488", "15907", "16490"), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.719770e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     3.330000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.102000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)     9.950000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -8.100000e-04 -1.797693e+308  1.797693e+308
I(U1_I^2)     1.910000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)      7.280000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)      4.400000e-04 -1.797693e+308  1.797693e+308
I(RT_I^2)     1.294200e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     3.850000e-03 -1.797693e+308  1.797693e+308
T1_I         -7.752000e-02 -1.797693e+308  1.797693e+308
T1_J          7.944000e-02 -1.797693e+308  1.797693e+308
T2_I         -8.361000e-02 -1.797693e+308  1.797693e+308
T2_J          1.069000e-02 -1.797693e+308  1.797693e+308
U1_I         -3.840000e-02 -1.797693e+308  1.797693e+308
U_I          -2.324100e-01 -1.797693e+308  1.797693e+308
U_J          -3.556000e-02 -1.797693e+308  1.797693e+308
RT_I         -2.712800e-01 -1.797693e+308  1.797693e+308
RT_J          1.244200e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 252746
Valid coordinates: 10560/52800
Tested coordinates: 512545
Valid coordinates: 15840/52800
Tested coordinates: 769898
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1020493
Valid coordinates: 26400/52800
Tested coordinates: 1277098
Valid coordinates: 31680/52800
Tested coordinates: 1531392
Valid coordinates: 36960/52800
Tested coordinates: 1780779
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2039398
Valid coordinates: 47520/52800
Tested coordinates: 2287211
Valid coordinates: 52800/52800
Tested coordinates: 2542687
Valid/Tested configurations: 52800/2542687
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.14073203137281134, 'T1_J': 0.7698244149993126, 'T2_J': 0.3950573992401225, 'U_J': 0.7527271754105416, 'U_I': 0.10143736147917452, 'I(T2_I^2)': 0.176602090381467, 'T2_I': 0.6425387751340101, 'U1_I': 0.10824596040437523, 'I(U_I^2)': 0.9223257702394179, 'I(RT_I^2)': 0.11925896394586304, 'I(T2_J^2)': 0.8348288926608396, 'I(U1_I^2)': 0.7635600142833254, 'RT_I': 0.7772047966331942, 'I(T1_I^2)': 0.9645922707112107, 'I(T1_J^2)': 0.1416063833298608, 'I(U_J^2)': 0.6612250453476275, 'RT_J': 0.7714369806204097, 'T1_I': 0.8023979465280601}
Ordered Keys: 
['U_I', 'U1_I', 'I(RT_I^2)', 'I(RT_J^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'T2_J', 'T2_I', 'I(U_J^2)', 'U_J', 'I(U1_I^2)', 'T1_J', 'RT_J', 'RT_I', 'T1_I', 'I(T2_J^2)', 'I(U_I^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.14073203137281134, 'T1_J': 0.7698244149993126, 'T2_J': 0.3950573992401225, 'U_J': 0.7527271754105416, 'U_I': 0.10143736147917452, 'I(T2_I^2)': 0.176602090381467, 'T2_I': 0.6425387751340101, 'U1_I': 0.10824596040437523, 'I(U_I^2)': 0.9223257702394179, 'I(RT_I^2)': 0.11925896394586304, 'I(T2_J^2)': 0.8348288926608396, 'I(U1_I^2)': 0.7635600142833254, 'RT_I': 0.7772047966331942, 'I(T1_I^2)': 0.9645922707112107, 'I(T1_J^2)': 0.1416063833298608, 'I(U_J^2)': 0.6612250453476275, 'RT_J': 0.7714369806204097, 'T1_I': 0.8023979465280601}
Ordered Keys: 
['U_I', 'U1_I', 'I(RT_I^2)', 'I(RT_J^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'T2_J', 'T2_I', 'I(U_J^2)', 'U_J', 'I(U1_I^2)', 'T1_J', 'RT_J', 'RT_I', 'T1_I', 'I(T2_J^2)', 'I(U_I^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
29369    5   11    6    0   16  17   0    1    0

Best From Design: [0, 11, 0, 11, 26, 18, 0, 0, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.756048
Baseline Point:
4.756048
Design Best Point:
[0, 11, 0, 11, 26, 18, 0, 0, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.663527786095
Predicted Best Point:
[5, 11, 6, 0, 16, 17, 0, 1, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[5, 11, 6, 0, 16, 17, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		254
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			581
        Writes: 		106
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.556846
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.663527786095
Slowdown (Predicted Best): 0.747857464853
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.15577
Current Best Point: 
[0, 11, 0, 11, 26, 18, 0, 0, 3]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 85388
Valid coordinates: 3520/17600
Tested coordinates: 170050
Valid coordinates: 5280/17600
Tested coordinates: 253404
Valid coordinates: 7040/17600
Tested coordinates: 335525
Valid coordinates: 8800/17600
Tested coordinates: 419141
Valid coordinates: 10560/17600
Tested coordinates: 501522
Valid coordinates: 12320/17600
Tested coordinates: 585949
Valid coordinates: 14080/17600
Tested coordinates: 666470
Valid coordinates: 15840/17600
Tested coordinates: 748220
Valid coordinates: 17600/17600
Tested coordinates: 830344
Valid/Tested configurations: 17600/830344
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
214      2   11   11    0   29  16   0    5    0
2487     6    6   11    6    2  28   0    2    5
3227     0    6   11    6   15  13   0    3    2
4693     1   11    0    0   17   0   0    5    1
11161   11    7   11   11    0   0   0    0    0
20355    2   11    6    0    1  10   0    2    5
23898    0   11    7   11   11  28   0    0    3
27190    7    9    0    9   29   0  28    2    1
28004    1    0   11   10   29   0   1    0    5
28836    1    4    5    0    0   0   0    2    2
39701   11    0   11    0   10   0  29    2    4
42238   11    5    0    6    0   0  14    5    2
44702    6    7   11    0    6   0  14    0    3
49743    0    3    0    0    9  29   0    2    0
52825   11    3    0    4   16  10   0    0    5
55608    3    6    5   11    9   0  29    5    0
56085    6    0    6    3   29  28   0    5    2
59297    0    0    0    5    1   0  27    0    0
59374    3    3    5    0   28  15   0    0    2
63252    0    4    8   11   29   0  17    2    5
68044    4    0    0   11    2  17   0    5    2
80344    5    0    7    7   16   0  11    2    0

D-Efficiency Approximation: [1] 0.2287857

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		527
        Multiplications: 	200
        Divisions: 		0
        Logical: 		0
        Reads: 			1185
        Writes: 		176
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.592074
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		14962
        Multiplications: 	4488
        Divisions: 		0
        Logical: 		0
        Reads: 			22616
        Writes: 		2311
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.21528
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1389
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2465
        Writes: 		293
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.353705
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1077
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2091
        Writes: 		241
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.771309
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		6807
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10698
        Writes: 		1104
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.953861
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		3472
        Multiplications: 	1080
        Divisions: 		0
        Logical: 		0
        Reads: 			5559
        Writes: 		605
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.348698
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1934
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3357
        Writes: 		379
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.237112
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		366
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			825
        Writes: 		120
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583023
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		282
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			575
        Writes: 		75
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.787461
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		2514
        Multiplications: 	816
        Divisions: 		0
        Logical: 		0
        Reads: 			4165
        Writes: 		441
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.760859
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		8606
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			13304
        Writes: 		1351
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.762202
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		244
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			559
        Writes: 		75
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.669169
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		369
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			853
        Writes: 		135
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.760953
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		5169
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			8067
        Writes: 		848
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.641136
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		13752
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20584
        Writes: 		2087
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.677311
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3758
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6423
        Writes: 		712
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.978657
Length of requested configs: 1
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	3
        Additions: 		279
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			628
        Writes: 		74
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.573952
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1059
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1874
        Writes: 		241
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58273
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3080
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5271
        Writes: 		573
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.898287
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3060
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5247
        Writes: 		564
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582587
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		801
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1424
        Writes: 		174
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.649318
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
214      2   11   11    0   29  16   0    5    0  4.592074
2487     6    6   11    6    2  28   0    2    5  4.215280
3227     0    6   11    6   15  13   0    3    2  3.353705
4693     1   11    0    0   17   0   0    5    1  4.771309
11161   11    7   11   11    0   0   0    0    0  4.589222
20355    2   11    6    0    1  10   0    2    5  3.953861
23898    0   11    7   11   11  28   0    0    3  7.348698
27190    7    9    0    9   29   0  28    2    1  3.237112
28004    1    0   11   10   29   0   1    0    5  4.583023
28836    1    4    5    0    0   0   0    2    2  4.787461
39701   11    0   11    0   10   0  29    2    4  3.760859
42238   11    5    0    6    0   0  14    5    2  6.762202
44702    6    7   11    0    6   0  14    0    3  4.669169
49743    0    3    0    0    9  29   0    2    0  3.760953
52825   11    3    0    4   16  10   0    0    5  3.641136
55608    3    6    5   11    9   0  29    5    0  4.677311
56085    6    0    6    3   29  28   0    5    2  6.978657
59297    0    0    0    5    1   0  27    0    0  4.573952
59374    3    3    5    0   28  15   0    0    2  4.582730
63252    0    4    8   11   29   0  17    2    5  3.898287
68044    4    0    0   11    2  17   0    5    2  4.582587
80344    5    0    7    7   16   0  11    2    0  3.649318

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
214      2   11   11    0   29  16   0    5    0  4.592074
2487     6    6   11    6    2  28   0    2    5  4.215280
3227     0    6   11    6   15  13   0    3    2  3.353705
4693     1   11    0    0   17   0   0    5    1  4.771309
11161   11    7   11   11    0   0   0    0    0  4.589222
20355    2   11    6    0    1  10   0    2    5  3.953861
23898    0   11    7   11   11  28   0    0    3  7.348698
27190    7    9    0    9   29   0  28    2    1  3.237112
28004    1    0   11   10   29   0   1    0    5  4.583023
28836    1    4    5    0    0   0   0    2    2  4.787461
39701   11    0   11    0   10   0  29    2    4  3.760859
42238   11    5    0    6    0   0  14    5    2  6.762202
44702    6    7   11    0    6   0  14    0    3  4.669169
49743    0    3    0    0    9  29   0    2    0  3.760953
52825   11    3    0    4   16  10   0    0    5  3.641136
55608    3    6    5   11    9   0  29    5    0  4.677311
56085    6    0    6    3   29  28   0    5    2  6.978657
59297    0    0    0    5    1   0  27    0    0  4.573952
59374    3    3    5    0   28  15   0    0    2  4.582730
63252    0    4    8   11   29   0  17    2    5  3.898287
68044    4    0    0   11    2  17   0    5    2  4.582587
80344    5    0    7    7   16   0  11    2    0  3.649318

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
214   -0.6666667  0.8333333  0.8333333 -1.0000000  0.93333333  0.06666667
2487   0.0000000  0.0000000  0.8333333  0.0000000 -0.86666667  0.86666667
3227  -1.0000000  0.0000000  0.8333333  0.0000000  0.00000000 -0.13333333
4693  -0.8333333  0.8333333 -1.0000000 -1.0000000  0.13333333 -1.00000000
11161  0.8333333  0.1666667  0.8333333  0.8333333 -1.00000000 -1.00000000
20355 -0.6666667  0.8333333  0.0000000 -1.0000000 -0.93333333 -0.33333333
23898 -1.0000000  0.8333333  0.1666667  0.8333333 -0.26666667  0.86666667
27190  0.1666667  0.5000000 -1.0000000  0.5000000  0.93333333 -1.00000000
28004 -0.8333333 -1.0000000  0.8333333  0.6666667  0.93333333 -1.00000000
28836 -0.8333333 -0.3333333 -0.1666667 -1.0000000 -1.00000000 -1.00000000
39701  0.8333333 -1.0000000  0.8333333 -1.0000000 -0.33333333 -1.00000000
42238  0.8333333 -0.1666667 -1.0000000  0.0000000 -1.00000000 -1.00000000
44702  0.0000000  0.1666667  0.8333333 -1.0000000 -0.60000000 -1.00000000
49743 -1.0000000 -0.5000000 -1.0000000 -1.0000000 -0.40000000  0.93333333
52825  0.8333333 -0.5000000 -1.0000000 -0.3333333  0.06666667 -0.33333333
55608 -0.5000000  0.0000000 -0.1666667  0.8333333 -0.40000000 -1.00000000
56085  0.0000000 -1.0000000  0.0000000 -0.5000000  0.93333333  0.86666667
59297 -1.0000000 -1.0000000 -1.0000000 -0.1666667 -0.93333333 -1.00000000
59374 -0.5000000 -0.5000000 -0.1666667 -1.0000000  0.86666667  0.00000000
63252 -1.0000000 -0.3333333  0.3333333  0.8333333  0.93333333 -1.00000000
68044 -0.3333333 -1.0000000 -1.0000000  0.8333333 -0.86666667  0.13333333
80344 -0.1666667 -1.0000000  0.1666667  0.1666667  0.06666667 -1.00000000
             U_Je      RT_Ie      RT_Je cost_mean
214   -1.00000000  0.6666667 -1.0000000  4.592074
2487  -1.00000000 -0.3333333  0.6666667  4.215280
3227  -1.00000000  0.0000000 -0.3333333  3.353705
4693  -1.00000000  0.6666667 -0.6666667  4.771309
11161 -1.00000000 -1.0000000 -1.0000000  4.589222
20355 -1.00000000 -0.3333333  0.6666667  3.953861
23898 -1.00000000 -1.0000000  0.0000000  7.348698
27190  0.86666667 -0.3333333 -0.6666667  3.237112
28004 -0.93333333 -1.0000000  0.6666667  4.583023
28836 -1.00000000 -0.3333333 -0.3333333  4.787461
39701  0.93333333 -0.3333333  0.3333333  3.760859
42238 -0.06666667  0.6666667 -0.3333333  6.762202
44702 -0.06666667 -1.0000000  0.0000000  4.669169
49743 -1.00000000 -0.3333333 -1.0000000  3.760953
52825 -1.00000000 -1.0000000  0.6666667  3.641136
55608  0.93333333  0.6666667 -1.0000000  4.677311
56085 -1.00000000  0.6666667 -0.3333333  6.978657
59297  0.80000000 -1.0000000 -1.0000000  4.573952
59374 -1.00000000 -1.0000000 -0.3333333  4.582730
63252  0.13333333 -0.3333333  0.6666667  3.898287
68044 -1.00000000  0.6666667 -0.3333333  4.582587
80344 -0.26666667 -0.3333333 -1.0000000  3.649318

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.00524057852916
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1     1    0    5   11   10  10   0    5    0  4.585498
2     0   11    0    0   15   0  29    3    0  3.800312
3     8    4    0    0    0  28   0    5    2  6.918117
4     5    7    5    9   25   0  29    0    5  4.581530
5    11    6    0    6    1   0  17    0    5  4.588003
6     0    4   11    0   16  19   0    0    5  3.949256
7     6    5    0    7   29  16   0    3    0  3.521567
8     2    3    4   11   11   0  15    2    0  3.910046
9     2    0    9    0    0   0  29    3    2  4.581514
10   11    5   11    5   17  17   0    3    2  3.375651
11    5   11    5    0    2  12   0    0    0  3.748572
12    0   11    0   11   26  18   0    0    3  3.155770
13    1   10    2   11   29   3   0    2    5  4.786660
14    0    4    3    4   29  29   0    0    0  4.603633
15   11    7   11   11    0   0   0    0    0  4.589222
16   11    1   11    0   29   0  12    5    0  6.633047
17    6    0    0    6   15   0   0    0    3  4.671829
18    1    1   11    6    2   0  11    2    5  9.026318
19    8   10   11   10   19  29   0    5    0  5.533317
20    5   11    5    0   15   0  10    1    3  3.594569
21   11    0    0    1    9  29   0    2    5  4.161385
22    0    7    7    8   18   0   0    5    2  6.743502
23    2   11   11    0   29  16   0    5    0  4.592074
24    6    6   11    6    2  28   0    2    5  4.215280
25    0    6   11    6   15  13   0    3    2  3.353705
26    1   11    0    0   17   0   0    5    1  4.771309
27   11    7   11   11    0   0   0    0    0  4.589222
28    2   11    6    0    1  10   0    2    5  3.953861
29    0   11    7   11   11  28   0    0    3  7.348698
30    7    9    0    9   29   0  28    2    1  3.237112
31    1    0   11   10   29   0   1    0    5  4.583023
32    1    4    5    0    0   0   0    2    2  4.787461
33   11    0   11    0   10   0  29    2    4  3.760859
34   11    5    0    6    0   0  14    5    2  6.762202
35    6    7   11    0    6   0  14    0    3  4.669169
36    0    3    0    0    9  29   0    2    0  3.760953
37   11    3    0    4   16  10   0    0    5  3.641136
38    3    6    5   11    9   0  29    5    0  4.677311
39    6    0    6    3   29  28   0    5    2  6.978657
40    0    0    0    5    1   0  27    0    0  4.573952
41    3    3    5    0   28  15   0    0    2  4.582730
42    0    4    8   11   29   0  17    2    5  3.898287
43    4    0    0   11    2  17   0    5    2  4.582587
44    5    0    7    7   16   0  11    2    0  3.649318

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.0000018 0.0000018   0.049 0.826448    
I(T1_J^2)    1 0.0001155 0.0001155   3.227 0.084540 .  
I(T2_I^2)    1 0.0000379 0.0000379   1.057 0.313634    
I(T2_J^2)    1 0.0000024 0.0000024   0.068 0.796035    
I(U1_I^2)    1 0.0000470 0.0000470   1.313 0.262685    
I(U_I^2)     1 0.0000823 0.0000823   2.300 0.141942    
I(U_J^2)     1 0.0000236 0.0000236   0.659 0.424640    
I(RT_I^2)    1 0.0007100 0.0007100  19.831 0.000154 ***
I(RT_J^2)    1 0.0001220 0.0001220   3.407 0.076794 .  
T1_I         1 0.0000009 0.0000009   0.026 0.872780    
T1_J         1 0.0000032 0.0000032   0.090 0.766307    
T2_I         1 0.0001478 0.0001478   4.127 0.052965 .  
T2_J         1 0.0000006 0.0000006   0.016 0.901592    
U1_I         1 0.0004367 0.0004367  12.196 0.001800 ** 
U_I          1 0.0007404 0.0007404  20.680 0.000120 ***
U_J          1 0.0000157 0.0000157   0.439 0.513457    
RT_I         1 0.0005417 0.0005417  15.129 0.000657 ***
RT_J         1 0.0000017 0.0000017   0.047 0.830223    
Residuals   25 0.0008951 0.0000358                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
214    4.592074
2487   4.215280
3227   3.353705
4693   4.771309
11161  4.589222
20355  3.953861
23898  7.348698
27190  3.237112
28004  4.583023
28836  4.787461
39701  3.760859
42238  6.762202
44702  4.669169
49743  3.760953
52825  3.641136
55608  4.677311
56085  6.978657
59297  4.573952
59374  4.582730
63252  3.898287
68044  4.582587
80344  3.649318

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.07679447320196997, 'T1_J': 0.7663068833264386, 'T2_J': 0.9015917115864733, 'U_J': 0.5134568601235829, 'U_I': 0.00012041992331543413, 'I(T2_I^2)': 0.3136336932461232, 'T2_I': 0.05296508121474236, 'U1_I': 0.001799750998318493, 'I(U_I^2)': 0.14194234495516822, 'I(RT_I^2)': 0.0001537595403911595, 'I(T2_J^2)': 0.796034834928081, 'I(U1_I^2)': 0.2626854212786852, 'RT_I': 0.0006574160567188172, 'I(T1_I^2)': 0.8264483022638924, 'I(T1_J^2)': 0.08454004573103051, 'I(U_J^2)': 0.4246400463577348, 'RT_J': 0.8302226665113768, 'T1_I': 0.8727802258598921}
Ordered Keys: 
['U_I', 'I(RT_I^2)', 'RT_I', 'U1_I', 'T2_I', 'I(RT_J^2)', 'I(T1_J^2)', 'I(U_I^2)', 'I(U1_I^2)', 'I(T2_I^2)', 'I(U_J^2)', 'U_J', 'T1_J', 'I(T2_J^2)', 'I(T1_I^2)', 'RT_J', 'T1_I', 'T2_J']
Variables within threshold: ['U_I', 'I(U_I^2)', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I', 'U1_I', 'I(U1_I^2)']
Predicting Best Values for: ['U_I', 'I(U_I^2)', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I', 'U1_I', 'I(U1_I^2)']
Using Model: cost_mean ~ U_I + I(U_I^2) + I(RT_I^2) + RT_I + I(RT_I^2) + RT_I + U1_I + I(U1_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ U_I + I(U_I^2) + I(RT_I^2) + RT_I + 
    I(RT_I^2) + RT_I + U1_I + I(U1_I^2), tau = 0.15, data = structure(list(
    T1_I = c(1, 0, 8, 5, 11, 0, 6, 2, 2, 11, 5, 0, 1, 0, 11, 
    11, 6, 1, 8, 5, 11, 0, 2, 6, 0, 1, 11, 2, 0, 7, 1, 1, 11, 
    11, 6, 0, 11, 3, 6, 0, 3, 0, 4, 5), T1_J = c(0, 11, 4, 7, 
    6, 4, 5, 3, 0, 5, 11, 11, 10, 4, 7, 1, 0, 1, 10, 11, 0, 7, 
    11, 6, 6, 11, 7, 11, 11, 9, 0, 4, 0, 5, 7, 3, 3, 6, 0, 0, 
    3, 4, 0, 0), T2_I = c(5, 0, 0, 5, 0, 11, 0, 4, 9, 11, 5, 
    0, 2, 3, 11, 11, 0, 11, 11, 5, 0, 7, 11, 11, 11, 0, 11, 6, 
    7, 0, 11, 5, 11, 0, 11, 0, 0, 5, 6, 0, 5, 8, 0, 7), T2_J = c(11, 
    0, 0, 9, 6, 0, 7, 11, 0, 5, 0, 11, 11, 4, 11, 0, 6, 6, 10, 
    0, 1, 8, 0, 6, 6, 0, 11, 0, 11, 9, 10, 0, 0, 6, 0, 0, 4, 
    11, 3, 5, 0, 11, 11, 7), U1_I = c(10, 15, 0, 25, 1, 16, 29, 
    11, 0, 17, 2, 26, 29, 29, 0, 29, 15, 2, 19, 15, 9, 18, 29, 
    2, 15, 17, 0, 1, 11, 29, 29, 0, 10, 0, 6, 9, 16, 9, 29, 1, 
    28, 29, 2, 16), U_I = c(10, 0, 28, 0, 0, 19, 16, 0, 0, 17, 
    12, 18, 3, 29, 0, 0, 0, 0, 29, 0, 29, 0, 16, 28, 13, 0, 0, 
    10, 28, 0, 0, 0, 0, 0, 0, 29, 10, 0, 28, 0, 15, 0, 17, 0), 
    U_J = c(0, 29, 0, 29, 17, 0, 0, 15, 29, 0, 0, 0, 0, 0, 0, 
    12, 0, 11, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 1, 0, 29, 
    14, 14, 0, 0, 29, 0, 27, 0, 17, 0, 11), RT_I = c(5, 3, 5, 
    0, 0, 0, 3, 2, 3, 3, 0, 0, 2, 0, 0, 5, 0, 2, 5, 1, 2, 5, 
    5, 2, 3, 5, 0, 2, 0, 2, 0, 2, 2, 5, 0, 2, 0, 5, 5, 0, 0, 
    2, 5, 2), RT_J = c(0, 0, 2, 5, 5, 5, 0, 0, 2, 2, 0, 3, 5, 
    0, 0, 0, 3, 5, 0, 3, 5, 2, 0, 5, 2, 1, 0, 5, 3, 1, 5, 2, 
    4, 2, 3, 0, 5, 0, 2, 0, 2, 5, 2, 0), cost_mean = c(4.585498, 
    3.800312, 6.918117, 4.58153, 4.588003, 3.949256, 3.521567, 
    3.910046, 4.581514, 3.375651, 3.748572, 3.15577, 4.78666, 
    4.603633, 4.589222, 6.633047, 4.671829, 9.026318, 5.533317, 
    3.594569, 4.161385, 6.743502, 4.592074, 4.21528, 3.353705, 
    4.771309, 4.589222, 3.953861, 7.348698, 3.237112, 4.583023, 
    4.787461, 3.760859, 6.762202, 4.669169, 3.760953, 3.641136, 
    4.677311, 6.978657, 4.573952, 4.58273, 3.898287, 4.582587, 
    3.649318)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
-44L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients lower bd upper bd
(Intercept)  4.58922      3.19477  4.62282
U_I         -0.09373     -0.15008 -0.05522
I(U_I^2)     0.00321      0.00193  0.00549
I(RT_I^2)    0.08498      0.06042  0.21198
RT_I        -0.25751     -0.89966 -0.10519
U1_I        -0.09447     -0.16379  0.00209
I(U1_I^2)    0.00264     -0.00052  0.00479

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 255035
Valid coordinates: 10560/52800
Tested coordinates: 504255
Valid coordinates: 15840/52800
Tested coordinates: 761466
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1008199
Valid coordinates: 26400/52800
Tested coordinates: 1263028
Valid coordinates: 31680/52800
Tested coordinates: 1515913
Valid coordinates: 36960/52800
Tested coordinates: 1765832
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2006585
Valid coordinates: 47520/52800
Tested coordinates: 2257056
Valid coordinates: 52800/52800
Tested coordinates: 2511103
Valid/Tested configurations: 52800/2511103
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.07679447320196997, 'T1_J': 0.7663068833264386, 'T2_J': 0.9015917115864733, 'U_J': 0.5134568601235829, 'U_I': 0.00012041992331543413, 'I(T2_I^2)': 0.3136336932461232, 'T2_I': 0.05296508121474236, 'U1_I': 0.001799750998318493, 'I(U_I^2)': 0.14194234495516822, 'I(RT_I^2)': 0.0001537595403911595, 'I(T2_J^2)': 0.796034834928081, 'I(U1_I^2)': 0.2626854212786852, 'RT_I': 0.0006574160567188172, 'I(T1_I^2)': 0.8264483022638924, 'I(T1_J^2)': 0.08454004573103051, 'I(U_J^2)': 0.4246400463577348, 'RT_J': 0.8302226665113768, 'T1_I': 0.8727802258598921}
Ordered Keys: 
['U_I', 'I(RT_I^2)', 'RT_I', 'U1_I', 'T2_I', 'I(RT_J^2)', 'I(T1_J^2)', 'I(U_I^2)', 'I(U1_I^2)', 'I(T2_I^2)', 'I(U_J^2)', 'U_J', 'T1_J', 'I(T2_J^2)', 'I(T1_I^2)', 'RT_J', 'T1_I', 'T2_J']
Variables within threshold: ['U_I', 'RT_I', 'U1_I']
Unique Variables: ['U_I', 'RT_I', 'U1_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.07679447320196997, 'T1_J': 0.7663068833264386, 'T2_J': 0.9015917115864733, 'U_J': 0.5134568601235829, 'U_I': 0.00012041992331543413, 'I(T2_I^2)': 0.3136336932461232, 'T2_I': 0.05296508121474236, 'U1_I': 0.001799750998318493, 'I(U_I^2)': 0.14194234495516822, 'I(RT_I^2)': 0.0001537595403911595, 'I(T2_J^2)': 0.796034834928081, 'I(U1_I^2)': 0.2626854212786852, 'RT_I': 0.0006574160567188172, 'I(T1_I^2)': 0.8264483022638924, 'I(T1_J^2)': 0.08454004573103051, 'I(U_J^2)': 0.4246400463577348, 'RT_J': 0.8302226665113768, 'T1_I': 0.8727802258598921}
Ordered Keys: 
['U_I', 'I(RT_I^2)', 'RT_I', 'U1_I', 'T2_I', 'I(RT_J^2)', 'I(T1_J^2)', 'I(U_I^2)', 'I(U1_I^2)', 'I(T2_I^2)', 'I(U_J^2)', 'U_J', 'T1_J', 'I(T2_J^2)', 'I(T1_I^2)', 'RT_J', 'T1_I', 'T2_J']
Variables within threshold: ['U_I', 'RT_I', 'U1_I']
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
6163    4    9   10   11   18  15   0    2    3

Best From Design: [7, 9, 0, 9, 29, 0, 28, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 15, 'U1_I': 18, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.756048
Design Best Point:
[7, 9, 0, 9, 29, 0, 28, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.680630641238
Predicted Best Point:
[4, 9, 10, 11, 18, 15, 0, 2, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 9, 10, 11, 18, 15, 0, 2, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		2402
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3983
        Writes: 		454
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.344249
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 15, 'U1_I': 18, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.680630641238
Slowdown (Predicted Best): 0.703157117001
Budget: 44/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 11, 0, 11, 26, 18, 0, 0, 3]
Step 2
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 94456
Valid coordinates: 2400/12000
Tested coordinates: 187369
Valid coordinates: 3600/12000
Tested coordinates: 284593
Valid coordinates: 4800/12000
Tested coordinates: 380743
Valid coordinates: 6000/12000
Tested coordinates: 475144
Valid coordinates: 7200/12000
Tested coordinates: 564544
Valid coordinates: 8400/12000
Tested coordinates: 659731
Valid coordinates: 9600/12000
Tested coordinates: 758288
Valid coordinates: 10800/12000
Tested coordinates: 847908
Valid coordinates: 12000/12000
Tested coordinates: 941229
Valid/Tested configurations: 12000/941229
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 152800      9

Pruned data dimensions: [1] 12023     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U_J + RT_J
Clean Info:
One-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I']
Two-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I']
Three-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I']
One-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Two-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Three-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', '(Intercept)', 'U_J', 'U_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', '(Intercept)', 'U_J', 'U_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 12023     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
227     11   11    0    0   18  15   0    2    3
1894     6    0    6    0   18  15   0    2    3
2130     0   11    5   11   18  15   0    2    3
2411    11    0   11    5   18  15   0    2    5
4597     4    0    0    6   18  15   0    2    2
5645    11    0    0   11   18  15   0    2    0
5885     0    5    0    5   18  15   0    2    5
6842     0    0   11    0   18  15   0    2    0
7128     7    7    7    7   18  15   0    2    0
7681     0    5   11   11   18  15   0    2    2
7748    11    7   11    0   18  15   0    2    3
8274     0    4    5    0   18  15   0    2    5
8580     5   11    0    0   18  15   0    2    0
10847    7    4    0   11   18  15   0    2    5
11209    4   11   11   11   18  15   0    2    5

D-Efficiency Approximation: [1] 0.2842643

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2390
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3955
        Writes: 		446
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.346619
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		2229
        Multiplications: 	688
        Divisions: 		0
        Logical: 		0
        Reads: 			3581
        Writes: 		403
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.327265
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2390
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3955
        Writes: 		446
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.337234
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		9086
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14035
        Writes: 		1454
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.148236
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1274
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2275
        Writes: 		278
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.553563
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.599746
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		9073
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14024
        Writes: 		1452
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.027139
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		242
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			553
        Writes: 		98
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.633252
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.610674
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1283
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2296
        Writes: 		284
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.546867
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2390
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3955
        Writes: 		446
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.354793
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		9086
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14035
        Writes: 		1454
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.690915
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.600639
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		9095
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14056
        Writes: 		1460
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.691152
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		9089
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14042
        Writes: 		1456
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.957692
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
227     11   11    0    0   18  15   0    2    3  3.346619
1894     6    0    6    0   18  15   0    2    3  3.327265
2130     0   11    5   11   18  15   0    2    3  3.337234
2411    11    0   11    5   18  15   0    2    5  4.148236
4597     4    0    0    6   18  15   0    2    2  3.553563
5645    11    0    0   11   18  15   0    2    0  3.599746
5885     0    5    0    5   18  15   0    2    5  4.027139
6842     0    0   11    0   18  15   0    2    0  3.633252
7128     7    7    7    7   18  15   0    2    0  3.610674
7681     0    5   11   11   18  15   0    2    2  3.546867
7748    11    7   11    0   18  15   0    2    3  3.354793
8274     0    4    5    0   18  15   0    2    5  3.690915
8580     5   11    0    0   18  15   0    2    0  3.600639
10847    7    4    0   11   18  15   0    2    5  3.691152
11209    4   11   11   11   18  15   0    2    5  3.957692

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
227     11   11    0    0   18  15   0    2    3  3.346619
1894     6    0    6    0   18  15   0    2    3  3.327265
2130     0   11    5   11   18  15   0    2    3  3.337234
2411    11    0   11    5   18  15   0    2    5  4.148236
4597     4    0    0    6   18  15   0    2    2  3.553563
5645    11    0    0   11   18  15   0    2    0  3.599746
5885     0    5    0    5   18  15   0    2    5  4.027139
6842     0    0   11    0   18  15   0    2    0  3.633252
7128     7    7    7    7   18  15   0    2    0  3.610674
7681     0    5   11   11   18  15   0    2    2  3.546867
7748    11    7   11    0   18  15   0    2    3  3.354793
8274     0    4    5    0   18  15   0    2    5  3.690915
8580     5   11    0    0   18  15   0    2    0  3.600639
10847    7    4    0   11   18  15   0    2    5  3.691152
11209    4   11   11   11   18  15   0    2    5  3.957692

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je U1_Ie U_Ie U_Je      RT_Ie
227    0.8333333  0.8333333 -1.0000000 -1.0000000   0.2    0   -1 -0.3333333
1894   0.0000000 -1.0000000  0.0000000 -1.0000000   0.2    0   -1 -0.3333333
2130  -1.0000000  0.8333333 -0.1666667  0.8333333   0.2    0   -1 -0.3333333
2411   0.8333333 -1.0000000  0.8333333 -0.1666667   0.2    0   -1 -0.3333333
4597  -0.3333333 -1.0000000 -1.0000000  0.0000000   0.2    0   -1 -0.3333333
5645   0.8333333 -1.0000000 -1.0000000  0.8333333   0.2    0   -1 -0.3333333
5885  -1.0000000 -0.1666667 -1.0000000 -0.1666667   0.2    0   -1 -0.3333333
6842  -1.0000000 -1.0000000  0.8333333 -1.0000000   0.2    0   -1 -0.3333333
7128   0.1666667  0.1666667  0.1666667  0.1666667   0.2    0   -1 -0.3333333
7681  -1.0000000 -0.1666667  0.8333333  0.8333333   0.2    0   -1 -0.3333333
7748   0.8333333  0.1666667  0.8333333 -1.0000000   0.2    0   -1 -0.3333333
8274  -1.0000000 -0.3333333 -0.1666667 -1.0000000   0.2    0   -1 -0.3333333
8580  -0.1666667  0.8333333 -1.0000000 -1.0000000   0.2    0   -1 -0.3333333
10847  0.1666667 -0.3333333 -1.0000000  0.8333333   0.2    0   -1 -0.3333333
11209 -0.3333333  0.8333333  0.8333333  0.8333333   0.2    0   -1 -0.3333333
           RT_Je cost_mean
227    0.0000000  3.346619
1894   0.0000000  3.327265
2130   0.0000000  3.337234
2411   0.6666667  4.148236
4597  -0.3333333  3.553563
5645  -1.0000000  3.599746
5885   0.6666667  4.027139
6842  -1.0000000  3.633252
7128  -1.0000000  3.610674
7681  -0.3333333  3.546867
7748   0.0000000  3.354793
8274   0.6666667  3.690915
8580  -1.0000000  3.600639
10847  0.6666667  3.691152
11209  0.6666667  3.957692

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(RT_J^2) + 
    T1_I + T1_J + T2_I + T2_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Heteroscedasticity Test p-value: 0.589157958813
Heteroscedasticity transform NOT required.
Regression Step:            Df  Sum Sq Mean Sq F value  Pr(>F)   
I(T1_I^2)    1 0.00478 0.00478   0.669 0.45937   
I(T1_J^2)    1 0.03961 0.03961   5.538 0.07823 . 
I(T2_I^2)    1 0.03892 0.03892   5.443 0.07999 . 
I(T2_J^2)    1 0.00924 0.00924   1.292 0.31908   
I(RT_J^2)    1 0.31553 0.31553  44.123 0.00267 **
T1_I         1 0.00398 0.00398   0.557 0.49693   
T1_J         1 0.01575 0.01575   2.203 0.21192   
T2_I         1 0.09049 0.09049  12.653 0.02365 * 
T2_J         1 0.14892 0.14892  20.825 0.01031 * 
RT_J         1 0.19357 0.19357  27.068 0.00650 **
Residuals    4 0.02860 0.00715                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
227    3.346619
1894   3.327265
2130   3.337234
2411   4.148236
4597   3.553563
5645   3.599746
5885   4.027139
6842   3.633252
7128   3.610674
7681   3.546867
7748   3.354793
8274   3.690915
8580   3.600639
10847  3.691152
11209  3.957692

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.49692637052556154, 'T1_J': 0.21192081803266952, 'T2_J': 0.010311539306079327, 'T2_I': 0.023646012332337145, 'I(RT_J^2)': 0.0026661619314572536, 'I(T2_I^2)': 0.07998538879030286, 'I(T1_I^2)': 0.4593693974128237, 'I(T1_J^2)': 0.07822500621251889, 'I(T2_J^2)': 0.31908240209025845, 'RT_J': 0.006503993484592489}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_J', 'T2_I', 'I(T1_J^2)', 'I(T2_I^2)', 'T1_J', 'I(T2_J^2)', 'I(T1_I^2)', 'T1_I']
Variables within threshold: ['I(RT_J^2)', 'RT_J', 'I(RT_J^2)', 'RT_J']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J', 'I(RT_J^2)', 'RT_J']
Using Model: cost_mean ~ I(RT_J^2) + RT_J + I(RT_J^2) + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J + I(RT_J^2) + RT_J, 
    tau = 0.15, data = structure(list(T1_I = c(11, 6, 0, 11, 
    4, 11, 0, 0, 7, 0, 11, 0, 5, 7, 4), T1_J = c(11, 0, 11, 0, 
    0, 0, 5, 0, 7, 5, 7, 4, 11, 4, 11), T2_I = c(0, 6, 5, 11, 
    0, 0, 0, 11, 7, 11, 11, 5, 0, 0, 11), T2_J = c(0, 0, 11, 
    5, 6, 11, 5, 0, 7, 11, 0, 0, 0, 11, 11), U1_I = c(18, 18, 
    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18), U_I = c(15, 
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15), 
        U_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), 
        RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), 
        RT_J = c(3, 3, 3, 5, 2, 0, 5, 0, 0, 2, 3, 5, 0, 5, 5), 
        cost_mean = c(3.346619, 3.327265, 3.337234, 4.148236, 
        3.553563, 3.599746, 4.027139, 3.633252, 3.610674, 3.546867, 
        3.354793, 3.690915, 3.600639, 3.691152, 3.957692)), .Names = c("T1_I", 
    "T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
    "cost_mean"), row.names = 45:59, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.599750e+00 -1.797693e+308   3.600590e+00
I(RT_J^2)     5.453000e-02  -5.851000e-02  1.797693e+308
RT_J         -2.544200e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 9404
Valid coordinates: 7200/36000
Tested coordinates: 18947
Valid coordinates: 10800/36000
Tested coordinates: 28307
Valid coordinates: 14400/36000
Tested coordinates: 37710
Valid coordinates: 18000/36000
Tested coordinates: 47013
Valid coordinates: 21600/36000
Tested coordinates: 56422
Valid coordinates: 25200/36000
Tested coordinates: 65797
Valid coordinates: 28800/36000
Tested coordinates: 75102
Valid coordinates: 32400/36000
Tested coordinates: 84622
Valid coordinates: 36000/36000
Tested coordinates: 94078
Valid/Tested configurations: 36000/94078
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 188800      9

Pruned data dimensions: [1] 48023     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.49692637052556154, 'T1_J': 0.21192081803266952, 'T2_J': 0.010311539306079327, 'T2_I': 0.023646012332337145, 'I(RT_J^2)': 0.0026661619314572536, 'I(T2_I^2)': 0.07998538879030286, 'I(T1_I^2)': 0.4593693974128237, 'I(T1_J^2)': 0.07822500621251889, 'I(T2_J^2)': 0.31908240209025845, 'RT_J': 0.006503993484592489}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_J', 'T2_I', 'I(T1_J^2)', 'I(T2_I^2)', 'T1_J', 'I(T2_J^2)', 'I(T1_I^2)', 'T1_I']
Variables within threshold: ['RT_J']
Unique Variables: ['RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.49692637052556154, 'T1_J': 0.21192081803266952, 'T2_J': 0.010311539306079327, 'T2_I': 0.023646012332337145, 'I(RT_J^2)': 0.0026661619314572536, 'I(T2_I^2)': 0.07998538879030286, 'I(T1_I^2)': 0.4593693974128237, 'I(T1_J^2)': 0.07822500621251889, 'I(T2_J^2)': 0.31908240209025845, 'RT_J': 0.006503993484592489}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_J', 'T2_I', 'I(T1_J^2)', 'I(T2_I^2)', 'T1_J', 'I(T2_J^2)', 'I(T1_I^2)', 'T1_I']
Variables within threshold: ['RT_J']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
5    8    2   11    0   24   0  24    4    0

Best From Design: [6, 0, 6, 0, 18, 15, 0, 2, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.756048
Design Best Point:
[6, 0, 6, 0, 18, 15, 0, 2, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.699586084918
Predicted Best Point:
[8, 2, 11, 0, 24, 0, 24, 4, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[8, 2, 11, 0, 24, 0, 24, 4, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		5837
        Multiplications: 	1768
        Divisions: 		0
        Logical: 		0
        Reads: 			8980
        Writes: 		936
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.262335
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.699586084918
Slowdown (Predicted Best): 0.896192595197
Budget: 59/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 11, 0, 11, 26, 18, 0, 0, 3]
Step 3
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 2087
Valid coordinates: 1600/8000
Tested coordinates: 4176
Valid coordinates: 2400/8000
Tested coordinates: 6115
Valid coordinates: 3200/8000
Tested coordinates: 8138
Valid coordinates: 4000/8000
Tested coordinates: 10292
Valid coordinates: 4800/8000
Tested coordinates: 12376
Valid coordinates: 5600/8000
Tested coordinates: 14475
Valid coordinates: 6400/8000
Tested coordinates: 16550
Valid coordinates: 7200/8000
Tested coordinates: 18563
Valid coordinates: 8000/8000
Tested coordinates: 20652
Valid/Tested configurations: 8000/20652
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 196800      9

Pruned data dimensions: [1] 16012     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Clean Info:
One-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J']
Clean 2 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 16012     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
731      5    5   11   11   18  15   0    2    0
1072    11    0   11    6   18  15   0    2    0
1149     0    0   11    0   18  15   0    2    0
3607     5    0    0    6   18  15   0    2    0
5124     0   11    0   11   18  15   0    2    0
5521    11   11   11   11   18  15   0    2    0
9166    11    5    0    0   18  15   0    2    0
9749     0    6    7    6   18  15   0    2    0
10330    5   11    6    0   18  15   0    2    0
11073    0    0    5   11   18  15   0    2    0

D-Efficiency Approximation: [1] 0.3072149

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		263
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			602
        Writes: 		112
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.640338
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.620143
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.620305
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		238
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			563
        Writes: 		102
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.71082
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.599777
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.637975
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.620919
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		254
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			581
        Writes: 		106
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.604667
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			574
        Writes: 		104
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.600139
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
731      5    5   11   11   18  15   0    2    0  3.640338
1072    11    0   11    6   18  15   0    2    0  3.620143
1149     0    0   11    0   18  15   0    2    0  3.633252
3607     5    0    0    6   18  15   0    2    0  3.620305
5124     0   11    0   11   18  15   0    2    0  3.710820
5521    11   11   11   11   18  15   0    2    0  3.599777
9166    11    5    0    0   18  15   0    2    0  3.637975
9749     0    6    7    6   18  15   0    2    0  3.620919
10330    5   11    6    0   18  15   0    2    0  3.604667
11073    0    0    5   11   18  15   0    2    0  3.600139

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
731      5    5   11   11   18  15   0    2    0  3.640338
1072    11    0   11    6   18  15   0    2    0  3.620143
1149     0    0   11    0   18  15   0    2    0  3.633252
3607     5    0    0    6   18  15   0    2    0  3.620305
5124     0   11    0   11   18  15   0    2    0  3.710820
5521    11   11   11   11   18  15   0    2    0  3.599777
9166    11    5    0    0   18  15   0    2    0  3.637975
9749     0    6    7    6   18  15   0    2    0  3.620919
10330    5   11    6    0   18  15   0    2    0  3.604667
11073    0    0    5   11   18  15   0    2    0  3.600139

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je U1_Ie U_Ie U_Je      RT_Ie
731   -0.1666667 -0.1666667  0.8333333  0.8333333   0.2    0   -1 -0.3333333
1072   0.8333333 -1.0000000  0.8333333  0.0000000   0.2    0   -1 -0.3333333
1149  -1.0000000 -1.0000000  0.8333333 -1.0000000   0.2    0   -1 -0.3333333
3607  -0.1666667 -1.0000000 -1.0000000  0.0000000   0.2    0   -1 -0.3333333
5124  -1.0000000  0.8333333 -1.0000000  0.8333333   0.2    0   -1 -0.3333333
5521   0.8333333  0.8333333  0.8333333  0.8333333   0.2    0   -1 -0.3333333
9166   0.8333333 -0.1666667 -1.0000000 -1.0000000   0.2    0   -1 -0.3333333
9749  -1.0000000  0.0000000  0.1666667  0.0000000   0.2    0   -1 -0.3333333
10330 -0.1666667  0.8333333  0.0000000 -1.0000000   0.2    0   -1 -0.3333333
11073 -1.0000000 -1.0000000 -0.1666667  0.8333333   0.2    0   -1 -0.3333333
      RT_Je cost_mean
731      -1  3.640338
1072     -1  3.620143
1149     -1  3.633252
3607     -1  3.620305
5124     -1  3.710820
5521     -1  3.599777
9166     -1  3.637975
9749     -1  3.620919
10330    -1  3.604667
11073    -1  3.600139

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + T1_I + 
    T1_J + T2_I + T2_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 69 10

Pruned data dimensions: [1] 14 10

Heteroscedasticity Test p-value: 0.176578313166
Heteroscedasticity transform NOT required.
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)  
I(T1_I^2)    1 0.000997 0.000997   1.205 0.3223  
I(T1_J^2)    1 0.000152 0.000152   0.183 0.6864  
I(T2_I^2)    1 0.000005 0.000005   0.006 0.9414  
I(T2_J^2)    1 0.000359 0.000359   0.433 0.5394  
T1_I         1 0.001172 0.001172   1.416 0.2875  
T1_J         1 0.000461 0.000461   0.558 0.4888  
T2_I         1 0.003473 0.003473   4.198 0.0958 .
T2_J         1 0.000295 0.000295   0.357 0.5764  
Residuals    5 0.004137 0.000827                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
731    3.640338
1072   3.620143
1149   3.633252
3607   3.620305
5124   3.710820
5521   3.599777
9166   3.637975
9749   3.620919
10330  3.604667
11073  3.600139

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.2874608869180086, 'T1_J': 0.4887884005195672, 'T2_J': 0.5764257081670572, 'T2_I': 0.095771841319341, 'I(T2_J^2)': 0.5394187079438364, 'I(T2_I^2)': 0.9413783448107695, 'I(T1_I^2)': 0.32233265177284215, 'I(T1_J^2)': 0.6863527908526466}
Ordered Keys: 
['T2_I', 'T1_I', 'I(T1_I^2)', 'T1_J', 'I(T2_J^2)', 'T2_J', 'I(T1_J^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 69 10

Pruned data dimensions: [1] 14 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + T1_I + T1_J + T2_I + T2_J, tau = 0.15, data = structure(list(
    T1_I = c(11, 0, 7, 5, 5, 11, 0, 5, 0, 11, 11, 0, 5, 0), T1_J = c(0, 
    0, 7, 11, 5, 0, 0, 0, 11, 11, 5, 6, 11, 0), T2_I = c(0, 11, 
    7, 0, 11, 11, 11, 0, 0, 11, 0, 7, 6, 5), T2_J = c(11, 0, 
    7, 0, 11, 6, 0, 6, 11, 11, 0, 6, 0, 11), U1_I = c(18, 18, 
    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18), U_I = c(15, 
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15), U_J = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_I = c(2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0), cost_mean = c(3.599746, 3.633252, 
    3.610674, 3.600639, 3.640338, 3.620143, 3.633252, 3.620305, 
    3.71082, 3.599777, 3.637975, 3.620919, 3.604667, 3.600139
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(50L, 52L, 
53L, 57L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.618770e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.500000e-04 -1.797693e+308  1.797693e+308
I(T1_J^2)    -6.200000e-04  -1.380000e-03  1.797693e+308
I(T2_I^2)     8.000000e-04 -1.797693e+308  1.797693e+308
I(T2_J^2)    -1.800000e-04 -1.797693e+308  1.797693e+308
T1_I          0.000000e+00 -1.797693e+308  1.797693e+308
T1_J          5.470000e-03 -1.797693e+308   3.194000e-02
T2_I         -7.500000e-03 -1.797693e+308  1.797693e+308
T2_J          1.870000e-03 -1.797693e+308  1.797693e+308

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 6177
Valid coordinates: 4800/24000
Tested coordinates: 12489
Valid coordinates: 7200/24000
Tested coordinates: 18766
Valid coordinates: 9600/24000
Tested coordinates: 25218
Valid coordinates: 12000/24000
Tested coordinates: 31443
Valid coordinates: 14400/24000
Tested coordinates: 37849
Valid coordinates: 16800/24000
Tested coordinates: 44177
Valid coordinates: 19200/24000
Tested coordinates: 50615
Valid coordinates: 21600/24000
Tested coordinates: 56884
Valid coordinates: 24000/24000
Tested coordinates: 63215
Valid/Tested configurations: 24000/63215
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 220800      9

Pruned data dimensions: [1] 40012     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.2874608869180086, 'T1_J': 0.4887884005195672, 'T2_J': 0.5764257081670572, 'T2_I': 0.095771841319341, 'I(T2_J^2)': 0.5394187079438364, 'I(T2_I^2)': 0.9413783448107695, 'I(T1_I^2)': 0.32233265177284215, 'I(T1_J^2)': 0.6863527908526466}
Ordered Keys: 
['T2_I', 'T1_I', 'I(T1_I^2)', 'T1_J', 'I(T2_J^2)', 'T2_J', 'I(T1_J^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.2874608869180086, 'T1_J': 0.4887884005195672, 'T2_J': 0.5764257081670572, 'T2_I': 0.095771841319341, 'I(T2_J^2)': 0.5394187079438364, 'I(T2_I^2)': 0.9413783448107695, 'I(T1_I^2)': 0.32233265177284215, 'I(T1_J^2)': 0.6863527908526466}
Ordered Keys: 
['T2_I', 'T1_I', 'I(T1_I^2)', 'T1_J', 'I(T2_J^2)', 'T2_J', 'I(T1_J^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
42    0    3    2   11   12  24   0    0    2

Best From Design: [11, 11, 11, 11, 18, 15, 0, 2, 0]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.756048
Design Best Point:
[11, 11, 11, 11, 18, 15, 0, 2, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.756884076864
Predicted Best Point:
[0, 3, 2, 11, 12, 24, 0, 0, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 3, 2, 11, 12, 24, 0, 0, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1595
        Multiplications: 	520
        Divisions: 		0
        Logical: 		0
        Reads: 			2767
        Writes: 		326
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.674537
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 15, 'U1_I': 18, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.756884076864
Slowdown (Predicted Best): 0.982861611153
Budget: 69/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 11, 0, 11, 26, 18, 0, 0, 3]
Final Best Point: 
[0, 11, 0, 11, 26, 18, 0, 0, 3]
Ending DLMT
Best Point: [0, 11, 0, 11, 26, 18, 0, 0, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.50709589102
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.50709589102
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [0, 11, 0, 11, 26, 18, 0, 0, 3]={'T1_I': 1, 'T1_J': 2048, 'U_J': 1, 'U_I': 19, 'T2_I': 1, 'T2_J': 2048, 'U1_I': 27, 'RT_I': 1, 'RT_J': 8}, cost=3.155770e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-7762.52, runs=72
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 1
 RT_J = 8
 T1_I = 1
 T1_J = 2048
 T2_I = 1
 T2_J = 2048
 U1_I = 27
 U_I = 19
 U_J = 1
 cost_mean = 3.15577
 points = 72
 speedup = 1.50709589102
 step = 4
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		2306
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3758
        Writes: 		428
        Comparisons:		10
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
