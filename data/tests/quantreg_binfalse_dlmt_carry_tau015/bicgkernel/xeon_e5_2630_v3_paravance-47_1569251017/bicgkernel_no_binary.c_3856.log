
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 86033
Valid coordinates: 3520/17600
Tested coordinates: 170091
Valid coordinates: 5280/17600
Tested coordinates: 255202
Valid coordinates: 7040/17600
Tested coordinates: 340126
Valid coordinates: 8800/17600
Tested coordinates: 420672
Valid coordinates: 10560/17600
Tested coordinates: 505050
Valid coordinates: 12320/17600
Tested coordinates: 591072
Valid coordinates: 14080/17600
Tested coordinates: 677260
Valid coordinates: 15840/17600
Tested coordinates: 760795
Valid coordinates: 17600/17600
Tested coordinates: 844181
Valid/Tested configurations: 17600/844181
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1879     5    6    7    0   18  17   0    5    2
2041     0    9    7    0   11   0  16    2    5
2202    11    0   11    0   29   1   0    0    5
2315     0   11   11   11   14  29   0    5    0
3225     0    5    1    7   27  13   0    5    0
4299     1    5    0   11   10   0  16    0    0
5805     6    0    0    1   14   0   1    5    2
5966     1    5   11    6    3   0   0    3    3
8349     5    5   11    0   29  29   0    2    0
9403    11    0   11    7   14  11   0    1    0
9853     4    0    0    6   28   0  14    2    2
10258   10    1    0   10    0   0  29    3    0
10670    1    0    4    5    0  29   0    0    3
10808    2   11    0    0    1   2   0    0    1
10965    6    0   10   11    0  17   0    2    5
12113   11    7   11    7    1   0  20    5    2
12439   11   11   11   11   28  17   0    0    2
12665    0   11   11    0   24   0  29    2    3
12929   11    9    0   10   11  29   0    3    4
13261    0    1    3   11   27   0  29    0    3
14126    6    4    0    6   12   0  29    0    5
16194    6   10    6   11   28   0   0    3    0

D-Efficiency Approximation: [1] 0.2233992

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		3079
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5286
        Writes: 		582
        Comparisons:		16
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.767923
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2996
        Multiplications: 	1000
        Divisions: 		0
        Logical: 		0
        Reads: 			5121
        Writes: 		541
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.950414
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		1068
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			2033
        Writes: 		240
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.972976
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		639
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1434
        Writes: 		198
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.530147
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		501
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1129
        Writes: 		169
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.700097
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		195
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			440
        Writes: 		65
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582487
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2743
        Multiplications: 	924
        Divisions: 		0
        Logical: 		0
        Reads: 			4747
        Writes: 		506
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.997938
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1000
        Multiplications: 	324
        Divisions: 		0
        Logical: 		0
        Reads: 			1724
        Writes: 		197
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.675925
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		405
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			911
        Writes: 		159
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.637983
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		189
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			438
        Writes: 		84
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.790178
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1213
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2155
        Writes: 		258
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.338265
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		3559
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5670
        Writes: 		585
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.766183
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		3576
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5717
        Writes: 		612
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.67007
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		144
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			327
        Writes: 		53
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.706767
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		9972
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15321
        Writes: 		1569
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.957111
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		11318
        Multiplications: 	3432
        Divisions: 		0
        Logical: 		0
        Reads: 			17261
        Writes: 		1747
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.623958
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1178
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2071
        Writes: 		261
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.191015
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2349
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4047
        Writes: 		444
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.453112
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		8742
        Multiplications: 	2652
        Divisions: 		0
        Logical: 		0
        Reads: 			13470
        Writes: 		1407
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.796961
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		400
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			901
        Writes: 		126
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 8.986293
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		601
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1351
        Writes: 		159
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.005954
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		131
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			313
        Writes: 		72
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.634532
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1879     5    6    7    0   18  17   0    5    2  6.767923
2041     0    9    7    0   11   0  16    2    5  3.950414
2202    11    0   11    0   29   1   0    0    5  3.972976
2315     0   11   11   11   14  29   0    5    0  5.530147
3225     0    5    1    7   27  13   0    5    0  4.700097
4299     1    5    0   11   10   0  16    0    0  4.582487
5805     6    0    0    1   14   0   1    5    2  6.997938
5966     1    5   11    6    3   0   0    3    3  4.675925
8349     5    5   11    0   29  29   0    2    0  3.637983
9403    11    0   11    7   14  11   0    1    0  3.790178
9853     4    0    0    6   28   0  14    2    2  3.338265
10258   10    1    0   10    0   0  29    3    0  4.766183
10670    1    0    4    5    0  29   0    0    3  4.670070
10808    2   11    0    0    1   2   0    0    1  3.706767
10965    6    0   10   11    0  17   0    2    5  3.957111
12113   11    7   11    7    1   0  20    5    2  6.623958
12439   11   11   11   11   28  17   0    0    2  3.191015
12665    0   11   11    0   24   0  29    2    3  3.453112
12929   11    9    0   10   11  29   0    3    4  3.796961
13261    0    1    3   11   27   0  29    0    3  8.986293
14126    6    4    0    6   12   0  29    0    5  5.005954
16194    6   10    6   11   28   0   0    3    0  3.634532

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1879     5    6    7    0   18  17   0    5    2  6.767923
2041     0    9    7    0   11   0  16    2    5  3.950414
2202    11    0   11    0   29   1   0    0    5  3.972976
2315     0   11   11   11   14  29   0    5    0  5.530147
3225     0    5    1    7   27  13   0    5    0  4.700097
4299     1    5    0   11   10   0  16    0    0  4.582487
5805     6    0    0    1   14   0   1    5    2  6.997938
5966     1    5   11    6    3   0   0    3    3  4.675925
8349     5    5   11    0   29  29   0    2    0  3.637983
9403    11    0   11    7   14  11   0    1    0  3.790178
9853     4    0    0    6   28   0  14    2    2  3.338265
10258   10    1    0   10    0   0  29    3    0  4.766183
10670    1    0    4    5    0  29   0    0    3  4.670070
10808    2   11    0    0    1   2   0    0    1  3.706767
10965    6    0   10   11    0  17   0    2    5  3.957111
12113   11    7   11    7    1   0  20    5    2  6.623958
12439   11   11   11   11   28  17   0    0    2  3.191015
12665    0   11   11    0   24   0  29    2    3  3.453112
12929   11    9    0   10   11  29   0    3    4  3.796961
13261    0    1    3   11   27   0  29    0    3  8.986293
14126    6    4    0    6   12   0  29    0    5  5.005954
16194    6   10    6   11   28   0   0    3    0  3.634532

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
1879  -0.1666667  0.0000000  0.1666667 -1.0000000  0.20000000  0.1333333
2041  -1.0000000  0.5000000  0.1666667 -1.0000000 -0.26666667 -1.0000000
2202   0.8333333 -1.0000000  0.8333333 -1.0000000  0.93333333 -0.9333333
2315  -1.0000000  0.8333333  0.8333333  0.8333333 -0.06666667  0.9333333
3225  -1.0000000 -0.1666667 -0.8333333  0.1666667  0.80000000 -0.1333333
4299  -0.8333333 -0.1666667 -1.0000000  0.8333333 -0.33333333 -1.0000000
5805   0.0000000 -1.0000000 -1.0000000 -0.8333333 -0.06666667 -1.0000000
5966  -0.8333333 -0.1666667  0.8333333  0.0000000 -0.80000000 -1.0000000
8349  -0.1666667 -0.1666667  0.8333333 -1.0000000  0.93333333  0.9333333
9403   0.8333333 -1.0000000  0.8333333  0.1666667 -0.06666667 -0.2666667
9853  -0.3333333 -1.0000000 -1.0000000  0.0000000  0.86666667 -1.0000000
10258  0.6666667 -0.8333333 -1.0000000  0.6666667 -1.00000000 -1.0000000
10670 -0.8333333 -1.0000000 -0.3333333 -0.1666667 -1.00000000  0.9333333
10808 -0.6666667  0.8333333 -1.0000000 -1.0000000 -0.93333333 -0.8666667
10965  0.0000000 -1.0000000  0.6666667  0.8333333 -1.00000000  0.1333333
12113  0.8333333  0.1666667  0.8333333  0.1666667 -0.93333333 -1.0000000
12439  0.8333333  0.8333333  0.8333333  0.8333333  0.86666667  0.1333333
12665 -1.0000000  0.8333333  0.8333333 -1.0000000  0.60000000 -1.0000000
12929  0.8333333  0.5000000 -1.0000000  0.6666667 -0.26666667  0.9333333
13261 -1.0000000 -0.8333333 -0.5000000  0.8333333  0.80000000 -1.0000000
14126  0.0000000 -0.3333333 -1.0000000  0.0000000 -0.20000000 -1.0000000
16194  0.0000000  0.6666667  0.0000000  0.8333333  0.86666667 -1.0000000
             U_Je      RT_Ie      RT_Je cost_mean
1879  -1.00000000  0.6666667 -0.3333333  6.767923
2041   0.06666667 -0.3333333  0.6666667  3.950414
2202  -1.00000000 -1.0000000  0.6666667  3.972976
2315  -1.00000000  0.6666667 -1.0000000  5.530147
3225  -1.00000000  0.6666667 -1.0000000  4.700097
4299   0.06666667 -1.0000000 -1.0000000  4.582487
5805  -0.93333333  0.6666667 -0.3333333  6.997938
5966  -1.00000000  0.0000000  0.0000000  4.675925
8349  -1.00000000 -0.3333333 -1.0000000  3.637983
9403  -1.00000000 -0.6666667 -1.0000000  3.790178
9853  -0.06666667 -0.3333333 -0.3333333  3.338265
10258  0.93333333  0.0000000 -1.0000000  4.766183
10670 -1.00000000 -1.0000000  0.0000000  4.670070
10808 -1.00000000 -1.0000000 -0.6666667  3.706767
10965 -1.00000000 -0.3333333  0.6666667  3.957111
12113  0.33333333  0.6666667 -0.3333333  6.623958
12439 -1.00000000 -1.0000000 -0.3333333  3.191015
12665  0.93333333 -0.3333333  0.0000000  3.453112
12929 -1.00000000  0.0000000  0.3333333  3.796961
13261  0.93333333 -1.0000000  0.0000000  8.986293
14126  0.93333333 -1.0000000  0.6666667  5.005954
16194 -1.00000000  0.0000000 -1.0000000  3.634532

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.197840068505
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  1.093   1.093   0.784 0.4411  
I(T1_J^2)    1  4.786   4.786   3.433 0.1609  
I(T2_I^2)    1  0.395   0.395   0.284 0.6313  
I(T2_J^2)    1  0.768   0.768   0.551 0.5117  
I(U1_I^2)    1  0.424   0.424   0.304 0.6196  
I(U_I^2)     1  0.364   0.364   0.261 0.6448  
I(U_J^2)     1  2.332   2.332   1.673 0.2864  
I(RT_I^2)    1 12.876  12.876   9.238 0.0559 .
I(RT_J^2)    1  0.025   0.025   0.018 0.9027  
T1_I         1  0.591   0.591   0.424 0.5613  
T1_J         1  0.062   0.062   0.045 0.8461  
T2_I         1  2.361   2.361   1.694 0.2840  
T2_J         1  1.930   1.930   1.384 0.3242  
U1_I         1  0.377   0.377   0.270 0.6392  
U_I          1  0.373   0.373   0.268 0.6406  
U_J          1  0.967   0.967   0.694 0.4660  
RT_I         1  6.917   6.917   4.962 0.1123  
RT_J         1  3.826   3.826   2.745 0.1962  
Residuals    3  4.182   1.394                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1879   6.767923
2041   3.950414
2202   3.972976
2315   5.530147
3225   4.700097
4299   4.582487
5805   6.997938
5966   4.675925
8349   3.637983
9403   3.790178
9853   3.338265
10258  4.766183
10670  4.670070
10808  3.706767
10965  3.957111
12113  6.623958
12439  3.191015
12665  3.453112
12929  3.796961
13261  8.986293
14126  5.005954
16194  3.634532

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.9027124394540078, 'T1_J': 0.8460762597310587, 'T2_J': 0.32421493989691913, 'U_J': 0.4659549680891748, 'U_I': 0.6405531907213282, 'I(T2_I^2)': 0.631300557317377, 'T2_I': 0.2839984489352056, 'U1_I': 0.639164430426378, 'I(U_I^2)': 0.6447608423741519, 'I(RT_I^2)': 0.05589596126715696, 'I(T2_J^2)': 0.5117485008008467, 'I(U1_I^2)': 0.6195749204097445, 'RT_I': 0.11225052470445371, 'I(T1_I^2)': 0.4410960656097833, 'I(T1_J^2)': 0.16094977597548824, 'I(U_J^2)': 0.2864153469539841, 'RT_J': 0.19615156093544175, 'T1_I': 0.5613419634814542}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'RT_J', 'T2_I', 'I(U_J^2)', 'T2_J', 'I(T1_I^2)', 'U_J', 'I(T2_J^2)', 'T1_I', 'I(U1_I^2)', 'I(T2_I^2)', 'U1_I', 'U_I', 'I(U_I^2)', 'T1_J', 'I(RT_J^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.15, data = structure(list(T1_I = c(5, 
0, 11, 0, 0, 1, 6, 1, 5, 11, 4, 10, 1, 2, 6, 11, 11, 0, 11, 0, 
6, 6), T1_J = c(6, 9, 0, 11, 5, 5, 0, 5, 5, 0, 0, 1, 0, 11, 0, 
7, 11, 11, 9, 1, 4, 10), T2_I = c(7, 7, 11, 11, 1, 0, 0, 11, 
11, 11, 0, 0, 4, 0, 10, 11, 11, 11, 0, 3, 0, 6), T2_J = c(0, 
0, 0, 11, 7, 11, 1, 6, 0, 7, 6, 10, 5, 0, 11, 7, 11, 0, 10, 11, 
6, 11), U1_I = c(18, 11, 29, 14, 27, 10, 14, 3, 29, 14, 28, 0, 
0, 1, 0, 1, 28, 24, 11, 27, 12, 28), U_I = c(17, 0, 1, 29, 13, 
0, 0, 0, 29, 11, 0, 0, 29, 2, 17, 0, 17, 0, 29, 0, 0, 0), U_J = c(0, 
16, 0, 0, 0, 16, 1, 0, 0, 0, 14, 29, 0, 0, 0, 20, 0, 29, 0, 29, 
29, 0), RT_I = c(5, 2, 0, 5, 5, 0, 5, 3, 2, 1, 2, 3, 0, 0, 2, 
5, 0, 2, 3, 0, 0, 3), RT_J = c(2, 5, 5, 0, 0, 0, 2, 3, 0, 0, 
2, 0, 3, 1, 5, 2, 2, 3, 4, 3, 5, 0), cost_mean = c(6.767923, 
3.950414, 3.972976, 5.530147, 4.700097, 4.582487, 6.997938, 4.675925, 
3.637983, 3.790178, 3.338265, 4.766183, 4.67007, 3.706767, 3.957111, 
6.623958, 3.191015, 3.453112, 3.796961, 8.986293, 5.005954, 3.634532
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("1879", "2041", 
"2202", "2315", "3225", "4299", "5805", "5966", "8349", "9403", 
"9853", "10258", "10670", "10808", "10965", "12113", "12439", 
"12665", "12929", "13261", "14126", "16194"), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.260500e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.404000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.455000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)    -7.800000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)     1.160000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)    -2.540000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)      2.380000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)      1.730000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     2.293900e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)    -7.506000e-02 -1.797693e+308  1.797693e+308
T1_I          1.796500e-01 -1.797693e+308  1.797693e+308
T1_J          6.695000e-02 -1.797693e+308  1.797693e+308
T2_I          1.267900e-01 -1.797693e+308  1.797693e+308
T2_J         -1.195800e-01 -1.797693e+308  1.797693e+308
U1_I          4.773000e-02 -1.797693e+308  1.797693e+308
U_I          -7.461000e-02 -1.797693e+308  1.797693e+308
U_J          -3.555000e-02 -1.797693e+308  1.797693e+308
RT_I         -7.972700e-01 -1.797693e+308  1.797693e+308
RT_J          3.366100e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 253193
Valid coordinates: 10560/52800
Tested coordinates: 501318
Valid coordinates: 15840/52800
Tested coordinates: 754724
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1008042
Valid coordinates: 26400/52800
Tested coordinates: 1256752
Valid coordinates: 31680/52800
Tested coordinates: 1508474
Valid coordinates: 36960/52800
Tested coordinates: 1767867
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2024803
Valid coordinates: 47520/52800
Tested coordinates: 2280994
Valid coordinates: 52800/52800
Tested coordinates: 2537455
Valid/Tested configurations: 52800/2537455
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9027124394540078, 'T1_J': 0.8460762597310587, 'T2_J': 0.32421493989691913, 'U_J': 0.4659549680891748, 'U_I': 0.6405531907213282, 'I(T2_I^2)': 0.631300557317377, 'T2_I': 0.2839984489352056, 'U1_I': 0.639164430426378, 'I(U_I^2)': 0.6447608423741519, 'I(RT_I^2)': 0.05589596126715696, 'I(T2_J^2)': 0.5117485008008467, 'I(U1_I^2)': 0.6195749204097445, 'RT_I': 0.11225052470445371, 'I(T1_I^2)': 0.4410960656097833, 'I(T1_J^2)': 0.16094977597548824, 'I(U_J^2)': 0.2864153469539841, 'RT_J': 0.19615156093544175, 'T1_I': 0.5613419634814542}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'RT_J', 'T2_I', 'I(U_J^2)', 'T2_J', 'I(T1_I^2)', 'U_J', 'I(T2_J^2)', 'T1_I', 'I(U1_I^2)', 'I(T2_I^2)', 'U1_I', 'U_I', 'I(U_I^2)', 'T1_J', 'I(RT_J^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9027124394540078, 'T1_J': 0.8460762597310587, 'T2_J': 0.32421493989691913, 'U_J': 0.4659549680891748, 'U_I': 0.6405531907213282, 'I(T2_I^2)': 0.631300557317377, 'T2_I': 0.2839984489352056, 'U1_I': 0.639164430426378, 'I(U_I^2)': 0.6447608423741519, 'I(RT_I^2)': 0.05589596126715696, 'I(T2_J^2)': 0.5117485008008467, 'I(U1_I^2)': 0.6195749204097445, 'RT_I': 0.11225052470445371, 'I(T1_I^2)': 0.4410960656097833, 'I(T1_J^2)': 0.16094977597548824, 'I(U_J^2)': 0.2864153469539841, 'RT_J': 0.19615156093544175, 'T1_I': 0.5613419634814542}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'RT_J', 'T2_I', 'I(U_J^2)', 'T2_J', 'I(T1_I^2)', 'U_J', 'I(T2_J^2)', 'T1_I', 'I(U1_I^2)', 'I(T2_I^2)', 'U1_I', 'U_I', 'I(U_I^2)', 'T1_J', 'I(RT_J^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
53660    1   10    0   10   29  10   0    1    5

Best From Design: [11, 11, 11, 11, 28, 17, 0, 0, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.957519
Baseline Point:
4.957519
Design Best Point:
[11, 11, 11, 11, 28, 17, 0, 0, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.643671764042
Predicted Best Point:
[1, 10, 0, 10, 29, 10, 0, 1, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 10, 0, 10, 29, 10, 0, 1, 5]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		5928
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			9427
        Writes: 		998
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.953726
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.643671764042
Slowdown (Predicted Best): 0.797521098759
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.191015
Current Best Point: 
[11, 11, 11, 11, 28, 17, 0, 0, 2]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84307
Valid coordinates: 3520/17600
Tested coordinates: 168102
Valid coordinates: 5280/17600
Tested coordinates: 255432
Valid coordinates: 7040/17600
Tested coordinates: 340926
Valid coordinates: 8800/17600
Tested coordinates: 423891
Valid coordinates: 10560/17600
Tested coordinates: 504272
Valid coordinates: 12320/17600
Tested coordinates: 587272
Valid coordinates: 14080/17600
Tested coordinates: 671086
Valid coordinates: 15840/17600
Tested coordinates: 756532
Valid coordinates: 17600/17600
Tested coordinates: 840210
Valid/Tested configurations: 17600/840210
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
690     11    5   11   11   29   0  29    0    5
859      6    0    8    4   18  29   0    2    5
2315     0   11   11   11   14  29   0    5    0
4891     0    5    0    5   22   0  28    2    0
8771     6    6    6    6   10  16   0    5    0
10979    0    3   11    0    0  11   0    2    5
13017    2    6    9    0   29  29   0    0    0
17497   11   11    0    0   28   0  19    0    5
18618    4    7    0   11   16   0   9    0    5
29349    5    6    0   11    0   0  17    2    0
29853   11    4   11    0   10   0   1    2    0
31037    5    0    0    0   20   0  29    5    2
31327    1    0    4   10   29   0   1    5    0
33463    0   11    5    0    6   0   0    2    5
34842    5   11   11   11   29  11   0    2    2
36047    0    0    5   11    0   0  15    0    3
43650    3    0   11    3    1   0  16    5    0
43932    2   10    6    0    4   0  29    0    0
52613   11    5    0    9    0  28   0    5    2
56674   11    0    0   11   13  15   0    0    0
72519    0    7    7    0   17   0  15    3    3
87988    2    4   11    5    8   0   0    0    3

D-Efficiency Approximation: [1] 0.2324162

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		618
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1385
        Writes: 		176
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581785
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		15431
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23310
        Writes: 		2394
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.70006
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1819
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3121
        Writes: 		346
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.689775
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		505
        Multiplications: 	200
        Divisions: 		0
        Logical: 		0
        Reads: 			1140
        Writes: 		155
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.626856
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		7251
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11342
        Writes: 		1165
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.764384
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		365
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			810
        Writes: 		144
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.676831
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		524
        Multiplications: 	212
        Divisions: 		0
        Logical: 		0
        Reads: 			1176
        Writes: 		153
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581581
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		425
        Multiplications: 	172
        Divisions: 		0
        Logical: 		0
        Reads: 			959
        Writes: 		123
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582738
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1143
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			1990
        Writes: 		217
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.669082
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		192
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			405
        Writes: 		66
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.890437
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		15104
        Multiplications: 	4496
        Divisions: 		0
        Logical: 		0
        Reads: 			22585
        Writes: 		2291
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.701098
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1110
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2130
        Writes: 		255
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.665346
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1970
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3389
        Writes: 		362
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.960184
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1044
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1896
        Writes: 		247
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.290532
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		239
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			551
        Writes: 		66
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582399
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		7862
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			11974
        Writes: 		1217
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584022
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		306
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			688
        Writes: 		85
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581494
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		3733
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6377
        Writes: 		686
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.694212
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		206
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			463
        Writes: 		84
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.649894
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2842
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4633
        Writes: 		497
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.456551
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		106
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			259
        Writes: 		47
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.588649
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
690     11    5   11   11   29   0  29    0    5  4.581785
859      6    0    8    4   18  29   0    2    5  3.700060
2315     0   11   11   11   14  29   0    5    0  5.530147
4891     0    5    0    5   22   0  28    2    0  3.689775
8771     6    6    6    6   10  16   0    5    0  5.626856
10979    0    3   11    0    0  11   0    2    5  3.764384
13017    2    6    9    0   29  29   0    0    0  4.676831
17497   11   11    0    0   28   0  19    0    5  4.581581
18618    4    7    0   11   16   0   9    0    5  4.582738
29349    5    6    0   11    0   0  17    2    0  3.669082
29853   11    4   11    0   10   0   1    2    0  3.890437
31037    5    0    0    0   20   0  29    5    2  6.701098
31327    1    0    4   10   29   0   1    5    0  4.665346
33463    0   11    5    0    6   0   0    2    5  3.960184
34842    5   11   11   11   29  11   0    2    2  3.290532
36047    0    0    5   11    0   0  15    0    3  4.582399
43650    3    0   11    3    1   0  16    5    0  4.584022
43932    2   10    6    0    4   0  29    0    0  4.581494
52613   11    5    0    9    0  28   0    5    2  6.694212
56674   11    0    0   11   13  15   0    0    0  3.649894
72519    0    7    7    0   17   0  15    3    3  3.456551
87988    2    4   11    5    8   0   0    0    3  4.588649

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
690     11    5   11   11   29   0  29    0    5  4.581785
859      6    0    8    4   18  29   0    2    5  3.700060
2315     0   11   11   11   14  29   0    5    0  5.530147
4891     0    5    0    5   22   0  28    2    0  3.689775
8771     6    6    6    6   10  16   0    5    0  5.626856
10979    0    3   11    0    0  11   0    2    5  3.764384
13017    2    6    9    0   29  29   0    0    0  4.676831
17497   11   11    0    0   28   0  19    0    5  4.581581
18618    4    7    0   11   16   0   9    0    5  4.582738
29349    5    6    0   11    0   0  17    2    0  3.669082
29853   11    4   11    0   10   0   1    2    0  3.890437
31037    5    0    0    0   20   0  29    5    2  6.701098
31327    1    0    4   10   29   0   1    5    0  4.665346
33463    0   11    5    0    6   0   0    2    5  3.960184
34842    5   11   11   11   29  11   0    2    2  3.290532
36047    0    0    5   11    0   0  15    0    3  4.582399
43650    3    0   11    3    1   0  16    5    0  4.584022
43932    2   10    6    0    4   0  29    0    0  4.581494
52613   11    5    0    9    0  28   0    5    2  6.694212
56674   11    0    0   11   13  15   0    0    0  3.649894
72519    0    7    7    0   17   0  15    3    3  3.456551
87988    2    4   11    5    8   0   0    0    3  4.588649

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
690    0.8333333 -0.1666667  0.8333333  0.8333333  0.93333333 -1.00000000
859    0.0000000 -1.0000000  0.3333333 -0.3333333  0.20000000  0.93333333
2315  -1.0000000  0.8333333  0.8333333  0.8333333 -0.06666667  0.93333333
4891  -1.0000000 -0.1666667 -1.0000000 -0.1666667  0.46666667 -1.00000000
8771   0.0000000  0.0000000  0.0000000  0.0000000 -0.33333333  0.06666667
10979 -1.0000000 -0.5000000  0.8333333 -1.0000000 -1.00000000 -0.26666667
13017 -0.6666667  0.0000000  0.5000000 -1.0000000  0.93333333  0.93333333
17497  0.8333333  0.8333333 -1.0000000 -1.0000000  0.86666667 -1.00000000
18618 -0.3333333  0.1666667 -1.0000000  0.8333333  0.06666667 -1.00000000
29349 -0.1666667  0.0000000 -1.0000000  0.8333333 -1.00000000 -1.00000000
29853  0.8333333 -0.3333333  0.8333333 -1.0000000 -0.33333333 -1.00000000
31037 -0.1666667 -1.0000000 -1.0000000 -1.0000000  0.33333333 -1.00000000
31327 -0.8333333 -1.0000000 -0.3333333  0.6666667  0.93333333 -1.00000000
33463 -1.0000000  0.8333333 -0.1666667 -1.0000000 -0.60000000 -1.00000000
34842 -0.1666667  0.8333333  0.8333333  0.8333333  0.93333333 -0.26666667
36047 -1.0000000 -1.0000000 -0.1666667  0.8333333 -1.00000000 -1.00000000
43650 -0.5000000 -1.0000000  0.8333333 -0.5000000 -0.93333333 -1.00000000
43932 -0.6666667  0.6666667  0.0000000 -1.0000000 -0.73333333 -1.00000000
52613  0.8333333 -0.1666667 -1.0000000  0.5000000 -1.00000000  0.86666667
56674  0.8333333 -1.0000000 -1.0000000  0.8333333 -0.13333333  0.00000000
72519 -1.0000000  0.1666667  0.1666667 -1.0000000  0.13333333 -1.00000000
87988 -0.6666667 -0.3333333  0.8333333 -0.1666667 -0.46666667 -1.00000000
             U_Je      RT_Ie      RT_Je cost_mean
690    0.93333333 -1.0000000  0.6666667  4.581785
859   -1.00000000 -0.3333333  0.6666667  3.700060
2315  -1.00000000  0.6666667 -1.0000000  5.530147
4891   0.86666667 -0.3333333 -1.0000000  3.689775
8771  -1.00000000  0.6666667 -1.0000000  5.626856
10979 -1.00000000 -0.3333333  0.6666667  3.764384
13017 -1.00000000 -1.0000000 -1.0000000  4.676831
17497  0.26666667 -1.0000000  0.6666667  4.581581
18618 -0.40000000 -1.0000000  0.6666667  4.582738
29349  0.13333333 -0.3333333 -1.0000000  3.669082
29853 -0.93333333 -0.3333333 -1.0000000  3.890437
31037  0.93333333  0.6666667 -0.3333333  6.701098
31327 -0.93333333  0.6666667 -1.0000000  4.665346
33463 -1.00000000 -0.3333333  0.6666667  3.960184
34842 -1.00000000 -0.3333333 -0.3333333  3.290532
36047  0.00000000 -1.0000000  0.0000000  4.582399
43650  0.06666667  0.6666667 -1.0000000  4.584022
43932  0.93333333 -1.0000000 -1.0000000  4.581494
52613 -1.00000000  0.6666667 -0.3333333  6.694212
56674 -1.00000000 -1.0000000 -1.0000000  3.649894
72519  0.00000000  0.0000000  0.0000000  3.456551
87988 -1.00000000 -1.0000000  0.0000000  4.588649

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.000515241983641
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1     5    6    7    0   18  17   0    5    2  6.767923
2     0    9    7    0   11   0  16    2    5  3.950414
3    11    0   11    0   29   1   0    0    5  3.972976
4     0   11   11   11   14  29   0    5    0  5.530147
5     0    5    1    7   27  13   0    5    0  4.700097
6     1    5    0   11   10   0  16    0    0  4.582487
7     6    0    0    1   14   0   1    5    2  6.997938
8     1    5   11    6    3   0   0    3    3  4.675925
9     5    5   11    0   29  29   0    2    0  3.637983
10   11    0   11    7   14  11   0    1    0  3.790178
11    4    0    0    6   28   0  14    2    2  3.338265
12   10    1    0   10    0   0  29    3    0  4.766183
13    1    0    4    5    0  29   0    0    3  4.670070
14    2   11    0    0    1   2   0    0    1  3.706767
15    6    0   10   11    0  17   0    2    5  3.957111
16   11    7   11    7    1   0  20    5    2  6.623958
17   11   11   11   11   28  17   0    0    2  3.191015
18    0   11   11    0   24   0  29    2    3  3.453112
19   11    9    0   10   11  29   0    3    4  3.796961
20    0    1    3   11   27   0  29    0    3  8.986293
21    6    4    0    6   12   0  29    0    5  5.005954
22    6   10    6   11   28   0   0    3    0  3.634532
23   11    5   11   11   29   0  29    0    5  4.581785
24    6    0    8    4   18  29   0    2    5  3.700060
25    0   11   11   11   14  29   0    5    0  5.530147
26    0    5    0    5   22   0  28    2    0  3.689775
27    6    6    6    6   10  16   0    5    0  5.626856
28    0    3   11    0    0  11   0    2    5  3.764384
29    2    6    9    0   29  29   0    0    0  4.676831
30   11   11    0    0   28   0  19    0    5  4.581581
31    4    7    0   11   16   0   9    0    5  4.582738
32    5    6    0   11    0   0  17    2    0  3.669082
33   11    4   11    0   10   0   1    2    0  3.890437
34    5    0    0    0   20   0  29    5    2  6.701098
35    1    0    4   10   29   0   1    5    0  4.665346
36    0   11    5    0    6   0   0    2    5  3.960184
37    5   11   11   11   29  11   0    2    2  3.290532
38    0    0    5   11    0   0  15    0    3  4.582399
39    3    0   11    3    1   0  16    5    0  4.584022
40    2   10    6    0    4   0  29    0    0  4.581494
41   11    5    0    9    0  28   0    5    2  6.694212
42   11    0    0   11   13  15   0    0    0  3.649894
43    0    7    7    0   17   0  15    3    3  3.456551
44    2    4   11    5    8   0   0    0    3  4.588649

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.0000137 0.0000137   0.559  0.46173    
I(T1_J^2)    1 0.0002293 0.0002293   9.357  0.00524 ** 
I(T2_I^2)    1 0.0000785 0.0000785   3.203  0.08564 .  
I(T2_J^2)    1 0.0000009 0.0000009   0.037  0.84968    
I(U1_I^2)    1 0.0001375 0.0001375   5.614  0.02586 *  
I(U_I^2)     1 0.0000451 0.0000451   1.841  0.18693    
I(U_J^2)     1 0.0001859 0.0001859   7.587  0.01080 *  
I(RT_I^2)    1 0.0009035 0.0009035  36.872 2.41e-06 ***
I(RT_J^2)    1 0.0000690 0.0000690   2.817  0.10571    
T1_I         1 0.0000114 0.0000114   0.464  0.50211    
T1_J         1 0.0000346 0.0000346   1.414  0.24560    
T2_I         1 0.0000292 0.0000292   1.190  0.28565    
T2_J         1 0.0000231 0.0000231   0.943  0.34074    
U1_I         1 0.0000000 0.0000000   0.000  0.99655    
U_I          1 0.0000494 0.0000494   2.017  0.16787    
U_J          1 0.0000919 0.0000919   3.750  0.06420 .  
RT_I         1 0.0008169 0.0008169  33.339 5.11e-06 ***
RT_J         1 0.0000033 0.0000033   0.137  0.71469    
Residuals   25 0.0006126 0.0000245                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
690    4.581785
859    3.700060
2315   5.530147
4891   3.689775
8771   5.626856
10979  3.764384
13017  4.676831
17497  4.581581
18618  4.582738
29349  3.669082
29853  3.890437
31037  6.701098
31327  4.665346
33463  3.960184
34842  3.290532
36047  4.582399
43650  4.584022
43932  4.581494
52613  6.694212
56674  3.649894
72519  3.456551
87988  4.588649

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.10571471010282887, 'T1_J': 0.24560478083342072, 'T2_J': 0.34073883079384026, 'U_J': 0.06420013463707078, 'U_I': 0.16787368079305046, 'I(T2_I^2)': 0.08563644843395186, 'T2_I': 0.285650395284341, 'U1_I': 0.9965547627095509, 'I(U_I^2)': 0.18693279906414298, 'I(RT_I^2)': 2.405616359523793e-06, 'I(T2_J^2)': 0.8496770307423067, 'I(U1_I^2)': 0.025855603871135564, 'RT_I': 5.111215401206181e-06, 'I(T1_I^2)': 0.4617319362642175, 'I(T1_J^2)': 0.00523889487328286, 'I(U_J^2)': 0.010800563540037752, 'RT_J': 0.7146857673041147, 'T1_I': 0.5021070198390873}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'I(U_J^2)', 'I(U1_I^2)', 'U_J', 'I(T2_I^2)', 'I(RT_J^2)', 'U_I', 'I(U_I^2)', 'T1_J', 'T2_I', 'T2_J', 'I(T1_I^2)', 'T1_I', 'RT_J', 'I(T2_J^2)', 'U1_I']
Variables within threshold: ['I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'T1_J']
Predicting Best Values for: ['I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'T1_J']
Using Model: cost_mean ~ I(RT_I^2) + RT_I + I(RT_I^2) + RT_I + I(T1_J^2) + T1_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_I^2) + RT_I + I(RT_I^2) + RT_I + 
    I(T1_J^2) + T1_J, tau = 0.15, data = structure(list(T1_I = c(5, 
0, 11, 0, 0, 1, 6, 1, 5, 11, 4, 10, 1, 2, 6, 11, 11, 0, 11, 0, 
6, 6, 11, 6, 0, 0, 6, 0, 2, 11, 4, 5, 11, 5, 1, 0, 5, 0, 3, 2, 
11, 11, 0, 2), T1_J = c(6, 9, 0, 11, 5, 5, 0, 5, 5, 0, 0, 1, 
0, 11, 0, 7, 11, 11, 9, 1, 4, 10, 5, 0, 11, 5, 6, 3, 6, 11, 7, 
6, 4, 0, 0, 11, 11, 0, 0, 10, 5, 0, 7, 4), T2_I = c(7, 7, 11, 
11, 1, 0, 0, 11, 11, 11, 0, 0, 4, 0, 10, 11, 11, 11, 0, 3, 0, 
6, 11, 8, 11, 0, 6, 11, 9, 0, 0, 0, 11, 0, 4, 5, 11, 5, 11, 6, 
0, 0, 7, 11), T2_J = c(0, 0, 0, 11, 7, 11, 1, 6, 0, 7, 6, 10, 
5, 0, 11, 7, 11, 0, 10, 11, 6, 11, 11, 4, 11, 5, 6, 0, 0, 0, 
11, 11, 0, 0, 10, 0, 11, 11, 3, 0, 9, 11, 0, 5), U1_I = c(18, 
11, 29, 14, 27, 10, 14, 3, 29, 14, 28, 0, 0, 1, 0, 1, 28, 24, 
11, 27, 12, 28, 29, 18, 14, 22, 10, 0, 29, 28, 16, 0, 10, 20, 
29, 6, 29, 0, 1, 4, 0, 13, 17, 8), U_I = c(17, 0, 1, 29, 13, 
0, 0, 0, 29, 11, 0, 0, 29, 2, 17, 0, 17, 0, 29, 0, 0, 0, 0, 29, 
29, 0, 16, 11, 29, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 28, 15, 
0, 0), U_J = c(0, 16, 0, 0, 0, 16, 1, 0, 0, 0, 14, 29, 0, 0, 
0, 20, 0, 29, 0, 29, 29, 0, 29, 0, 0, 28, 0, 0, 0, 19, 9, 17, 
1, 29, 1, 0, 0, 15, 16, 29, 0, 0, 15, 0), RT_I = c(5, 2, 0, 5, 
5, 0, 5, 3, 2, 1, 2, 3, 0, 0, 2, 5, 0, 2, 3, 0, 0, 3, 0, 2, 5, 
2, 5, 2, 0, 0, 0, 2, 2, 5, 5, 2, 2, 0, 5, 0, 5, 0, 3, 0), RT_J = c(2, 
5, 5, 0, 0, 0, 2, 3, 0, 0, 2, 0, 3, 1, 5, 2, 2, 3, 4, 3, 5, 0, 
5, 5, 0, 0, 0, 5, 0, 5, 5, 0, 0, 2, 0, 5, 2, 3, 0, 0, 2, 0, 3, 
3), cost_mean = c(6.767923, 3.950414, 3.972976, 5.530147, 4.700097, 
4.582487, 6.997938, 4.675925, 3.637983, 3.790178, 3.338265, 4.766183, 
4.67007, 3.706767, 3.957111, 6.623958, 3.191015, 3.453112, 3.796961, 
8.986293, 5.005954, 3.634532, 4.581785, 3.70006, 5.530147, 3.689775, 
5.626856, 3.764384, 4.676831, 4.581581, 4.582738, 3.669082, 3.890437, 
6.701098, 4.665346, 3.960184, 3.290532, 4.582399, 4.584022, 4.581494, 
6.694212, 3.649894, 3.456551, 4.588649)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = c(NA, -44L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients lower bd upper bd
(Intercept)  3.75450      3.13911  4.30987
I(RT_I^2)    0.12467      0.07130  0.24045
RT_I        -0.45747     -0.95846 -0.10571
I(T1_J^2)   -0.01190     -0.03802 -0.00282
T1_J         0.12651      0.04127  0.33751

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 253888
Valid coordinates: 10560/52800
Tested coordinates: 503193
Valid coordinates: 15840/52800
Tested coordinates: 752502
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1002443
Valid coordinates: 26400/52800
Tested coordinates: 1258942
Valid coordinates: 31680/52800
Tested coordinates: 1515021
Valid coordinates: 36960/52800
Tested coordinates: 1770885
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2015144
Valid coordinates: 47520/52800
Tested coordinates: 2266241
Valid coordinates: 52800/52800
Tested coordinates: 2519745
Valid/Tested configurations: 52800/2519745
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.10571471010282887, 'T1_J': 0.24560478083342072, 'T2_J': 0.34073883079384026, 'U_J': 0.06420013463707078, 'U_I': 0.16787368079305046, 'I(T2_I^2)': 0.08563644843395186, 'T2_I': 0.285650395284341, 'U1_I': 0.9965547627095509, 'I(U_I^2)': 0.18693279906414298, 'I(RT_I^2)': 2.405616359523793e-06, 'I(T2_J^2)': 0.8496770307423067, 'I(U1_I^2)': 0.025855603871135564, 'RT_I': 5.111215401206181e-06, 'I(T1_I^2)': 0.4617319362642175, 'I(T1_J^2)': 0.00523889487328286, 'I(U_J^2)': 0.010800563540037752, 'RT_J': 0.7146857673041147, 'T1_I': 0.5021070198390873}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'I(U_J^2)', 'I(U1_I^2)', 'U_J', 'I(T2_I^2)', 'I(RT_J^2)', 'U_I', 'I(U_I^2)', 'T1_J', 'T2_I', 'T2_J', 'I(T1_I^2)', 'T1_I', 'RT_J', 'I(T2_J^2)', 'U1_I']
Variables within threshold: ['RT_I', 'T1_J']
Unique Variables: ['RT_I', 'T1_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.10571471010282887, 'T1_J': 0.24560478083342072, 'T2_J': 0.34073883079384026, 'U_J': 0.06420013463707078, 'U_I': 0.16787368079305046, 'I(T2_I^2)': 0.08563644843395186, 'T2_I': 0.285650395284341, 'U1_I': 0.9965547627095509, 'I(U_I^2)': 0.18693279906414298, 'I(RT_I^2)': 2.405616359523793e-06, 'I(T2_J^2)': 0.8496770307423067, 'I(U1_I^2)': 0.025855603871135564, 'RT_I': 5.111215401206181e-06, 'I(T1_I^2)': 0.4617319362642175, 'I(T1_J^2)': 0.00523889487328286, 'I(U_J^2)': 0.010800563540037752, 'RT_J': 0.7146857673041147, 'T1_I': 0.5021070198390873}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'I(T1_J^2)', 'I(U_J^2)', 'I(U1_I^2)', 'U_J', 'I(T2_I^2)', 'I(RT_J^2)', 'U_I', 'I(U_I^2)', 'T1_J', 'T2_I', 'T2_J', 'I(T1_I^2)', 'T1_I', 'RT_J', 'I(T2_J^2)', 'U1_I']
Variables within threshold: ['RT_I', 'T1_J']
Best Predicted:     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
455    2   11    6    0    0   7   0    2    1

Best From Design: [5, 11, 11, 11, 29, 11, 0, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.957519
Design Best Point:
[5, 11, 11, 11, 29, 11, 0, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.663745716355
Predicted Best Point:
[2, 11, 6, 0, 0, 7, 0, 2, 1]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 11, 6, 0, 0, 7, 0, 2, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		432
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			901
        Writes: 		119
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.429864
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.663745716355
Slowdown (Predicted Best): 0.691850903648
Budget: 44/1000
Best point from design was better than predicted point
Current Best Point: 
[11, 11, 11, 11, 28, 17, 0, 0, 2]
Step 2
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 193869
Valid coordinates: 2720/13600
Tested coordinates: 394127
Valid coordinates: 4080/13600
Tested coordinates: 598384
Valid coordinates: 5440/13600
Tested coordinates: 804995
Tested coordinates: 1000000
Valid coordinates: 6800/13600
Tested coordinates: 1010560
Valid coordinates: 8160/13600
Tested coordinates: 1207742
Valid coordinates: 9520/13600
Tested coordinates: 1414426
Valid coordinates: 10880/13600
Tested coordinates: 1607604
Valid coordinates: 12240/13600
Tested coordinates: 1813784
Tested coordinates: 2000000
Valid coordinates: 13600/13600
Tested coordinates: 2013041
Valid/Tested configurations: 13600/2013041
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 154400      9

Pruned data dimensions: [1] 14230     9

Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['T1_J', 'RT_I']
Two-Level Factors: ['T1_J', 'T2_J', 'RT_I']
Three-Level Factors: ['T1_J', 'T2_J', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)', 'I(T2_J^2)', 'T2_J']
Three-Level Terms: ['(Intercept)', 'I(T2_J^2)', 'T2_J']
Model Quadratic: ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['T1_J', 'T2_J', 'RT_I', '(Intercept)', 'T2_J', 'T2_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_J', 'T2_J', 'RT_I', '(Intercept)', 'T2_J', 'T2_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T2_Ie ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 14230     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
537      0   11    0   11   13  29   0    2    3
1130    11   11    0   11   27   0  26    2    5
2089     6   11    6   11   20  15   0    2    2
2241    11   11   11   11   14  29   0    2    0
2966     7   11    7   11   29   0   0    2    0
3275    11   11   11    0    2  12   0    2    3
3412     5   11   11    0   28   0  10    2    5
5999     0   11    5    0   13   0   0    2    5
6315     7   11    7    0    0  29   0    2    5
7137     0   11    3   11    0   0  16    2    0
9126     5   11    0   11   12  15   0    2    5
9509     5   11    0   11    0   0   0    2    1
9886     0   11    0    0   29  20   0    2    0
10366    6   11    0    0   14   0  29    2    0
10584   11   11    0    0   20   0  14    2    2
13053    0   11   11   11    2   0  29    2    2
13056    3   11    6    0   29   0  29    2    3

D-Efficiency Approximation: [1] 0.2780186

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		4010
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6482
        Writes: 		705
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.338479
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3612
        Multiplications: 	1200
        Divisions: 		0
        Logical: 		0
        Reads: 			6153
        Writes: 		657
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.957932
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1276
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2279
        Writes: 		280
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.295001
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		387
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			874
        Writes: 		142
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.601313
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		90
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			221
        Writes: 		61
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.597526
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2023
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3377
        Writes: 		373
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.338357
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2656
        Multiplications: 	880
        Divisions: 		0
        Logical: 		0
        Reads: 			4562
        Writes: 		500
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.961851
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1977
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3403
        Writes: 		369
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.96127
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		15405
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23258
        Writes: 		2371
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.068812
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1077
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1876
        Writes: 		203
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.646688
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		9080
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14023
        Writes: 		1448
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.067492
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		159
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			368
        Writes: 		53
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.179384
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		299
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			695
        Writes: 		128
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.597085
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1876
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3213
        Writes: 		350
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.65479
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1205
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2139
        Writes: 		250
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.296265
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2087
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3603
        Writes: 		382
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.416871
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2357
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4064
        Writes: 		451
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.451134
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
537      0   11    0   11   13  29   0    2    3  3.338479
1130    11   11    0   11   27   0  26    2    5  3.957932
2089     6   11    6   11   20  15   0    2    2  3.295001
2241    11   11   11   11   14  29   0    2    0  3.601313
2966     7   11    7   11   29   0   0    2    0  3.597526
3275    11   11   11    0    2  12   0    2    3  3.338357
3412     5   11   11    0   28   0  10    2    5  3.961851
5999     0   11    5    0   13   0   0    2    5  3.961270
6315     7   11    7    0    0  29   0    2    5  4.068812
7137     0   11    3   11    0   0  16    2    0  3.646688
9126     5   11    0   11   12  15   0    2    5  4.067492
9509     5   11    0   11    0   0   0    2    1  3.179384
9886     0   11    0    0   29  20   0    2    0  3.597085
10366    6   11    0    0   14   0  29    2    0  3.654790
10584   11   11    0    0   20   0  14    2    2  3.296265
13053    0   11   11   11    2   0  29    2    2  3.416871
13056    3   11    6    0   29   0  29    2    3  3.451134

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
537      0   11    0   11   13  29   0    2    3  3.338479
1130    11   11    0   11   27   0  26    2    5  3.957932
2089     6   11    6   11   20  15   0    2    2  3.295001
2241    11   11   11   11   14  29   0    2    0  3.601313
2966     7   11    7   11   29   0   0    2    0  3.597526
3275    11   11   11    0    2  12   0    2    3  3.338357
3412     5   11   11    0   28   0  10    2    5  3.961851
5999     0   11    5    0   13   0   0    2    5  3.961270
6315     7   11    7    0    0  29   0    2    5  4.068812
7137     0   11    3   11    0   0  16    2    0  3.646688
9126     5   11    0   11   12  15   0    2    5  4.067492
9509     5   11    0   11    0   0   0    2    1  3.179384
9886     0   11    0    0   29  20   0    2    0  3.597085
10366    6   11    0    0   14   0  29    2    0  3.654790
10584   11   11    0    0   20   0  14    2    2  3.296265
13053    0   11   11   11    2   0  29    2    2  3.416871
13056    3   11    6    0   29   0  29    2    3  3.451134

Clean encoded design, with measurements:
           T1_Ie     T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
537   -1.0000000 0.8333333 -1.0000000  0.8333333 -0.13333333  0.9333333
1130   0.8333333 0.8333333 -1.0000000  0.8333333  0.80000000 -1.0000000
2089   0.0000000 0.8333333  0.0000000  0.8333333  0.33333333  0.0000000
2241   0.8333333 0.8333333  0.8333333  0.8333333 -0.06666667  0.9333333
2966   0.1666667 0.8333333  0.1666667  0.8333333  0.93333333 -1.0000000
3275   0.8333333 0.8333333  0.8333333 -1.0000000 -0.86666667 -0.2000000
3412  -0.1666667 0.8333333  0.8333333 -1.0000000  0.86666667 -1.0000000
5999  -1.0000000 0.8333333 -0.1666667 -1.0000000 -0.13333333 -1.0000000
6315   0.1666667 0.8333333  0.1666667 -1.0000000 -1.00000000  0.9333333
7137  -1.0000000 0.8333333 -0.5000000  0.8333333 -1.00000000 -1.0000000
9126  -0.1666667 0.8333333 -1.0000000  0.8333333 -0.20000000  0.0000000
9509  -0.1666667 0.8333333 -1.0000000  0.8333333 -1.00000000 -1.0000000
9886  -1.0000000 0.8333333 -1.0000000 -1.0000000  0.93333333  0.3333333
10366  0.0000000 0.8333333 -1.0000000 -1.0000000 -0.06666667 -1.0000000
10584  0.8333333 0.8333333 -1.0000000 -1.0000000  0.33333333 -1.0000000
13053 -1.0000000 0.8333333  0.8333333  0.8333333 -0.86666667 -1.0000000
13056 -0.5000000 0.8333333  0.0000000 -1.0000000  0.93333333 -1.0000000
             U_Je      RT_Ie      RT_Je cost_mean
537   -1.00000000 -0.3333333  0.0000000  3.338479
1130   0.73333333 -0.3333333  0.6666667  3.957932
2089  -1.00000000 -0.3333333 -0.3333333  3.295001
2241  -1.00000000 -0.3333333 -1.0000000  3.601313
2966  -1.00000000 -0.3333333 -1.0000000  3.597526
3275  -1.00000000 -0.3333333  0.0000000  3.338357
3412  -0.33333333 -0.3333333  0.6666667  3.961851
5999  -1.00000000 -0.3333333  0.6666667  3.961270
6315  -1.00000000 -0.3333333  0.6666667  4.068812
7137   0.06666667 -0.3333333 -1.0000000  3.646688
9126  -1.00000000 -0.3333333  0.6666667  4.067492
9509  -1.00000000 -0.3333333 -0.6666667  3.179384
9886  -1.00000000 -0.3333333 -1.0000000  3.597085
10366  0.93333333 -0.3333333 -1.0000000  3.654790
10584 -0.06666667 -0.3333333 -0.3333333  3.296265
13053  0.93333333 -0.3333333 -0.3333333  3.416871
13056  0.93333333 -0.3333333  0.0000000  3.451134

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T2_I^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + 
    I(RT_J^2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 20 10

Heteroscedasticity Test p-value: 0.693025147308
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.0058  0.0058   1.551   0.2594    
I(T2_I^2)    1 0.0394  0.0394  10.604   0.0173 *  
I(U1_I^2)    1 0.0029  0.0029   0.783   0.4101    
I(U_I^2)     1 0.0079  0.0079   2.132   0.1945    
I(U_J^2)     1 0.0029  0.0029   0.790   0.4083    
I(RT_J^2)    1 0.9912  0.9912 266.790 3.35e-06 ***
T1_I         1 0.0012  0.0012   0.333   0.5850    
T2_I         1 0.0163  0.0163   4.386   0.0811 .  
T2_J         1 0.0002  0.0002   0.042   0.8450    
U1_I         1 0.0010  0.0010   0.275   0.6191    
U_I          1 0.0110  0.0110   2.964   0.1359    
U_J          1 0.0094  0.0094   2.534   0.1625    
RT_J         1 0.5225  0.5225 140.649 2.17e-05 ***
Residuals    6 0.0223  0.0037                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
537    3.338479
1130   3.957932
2089   3.295001
2241   3.601313
2966   3.597526
3275   3.338357
3412   3.961851
5999   3.961270
6315   4.068812
7137   3.646688
9126   4.067492
9509   3.179384
9886   3.597085
10366  3.654790
10584  3.296265
13053  3.416871
13056  3.451134

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.5849546873073773, 'T2_J': 0.8450267371672449, 'U_J': 0.16253199136375504, 'U_I': 0.13594379198290743, 'I(T2_I^2)': 0.017326398053789344, 'U1_I': 0.619066426485807, 'I(U_I^2)': 0.19454127825634024, 'T2_I': 0.08112502083276439, 'I(RT_J^2)': 3.3530069779925474e-06, 'I(U1_I^2)': 0.4101486989073857, 'I(T1_I^2)': 0.2594412497600465, 'I(U_J^2)': 0.40825715009713637, 'RT_J': 2.1739400228222298e-05}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'T2_I', 'U_I', 'U_J', 'I(U_I^2)', 'I(T1_I^2)', 'I(U_J^2)', 'I(U1_I^2)', 'T1_I', 'U1_I', 'T2_J']
Variables within threshold: ['I(RT_J^2)', 'RT_J', 'I(RT_J^2)', 'RT_J']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J', 'I(RT_J^2)', 'RT_J']
Using Model: cost_mean ~ I(RT_J^2) + RT_J + I(RT_J^2) + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 20 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J + I(RT_J^2) + RT_J, 
    tau = 0.15, data = structure(list(T1_I = c(0, 0, 5, 0, 11, 
    6, 11, 7, 11, 5, 0, 7, 0, 5, 5, 0, 6, 11, 0, 3), T1_J = c(11, 
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 
    11, 11, 11, 11), T2_I = c(11, 5, 11, 0, 0, 6, 11, 7, 11, 
    11, 5, 7, 3, 0, 0, 0, 0, 0, 11, 6), T2_J = c(0, 0, 11, 11, 
    11, 11, 11, 11, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 11, 0), 
        U1_I = c(24, 6, 29, 13, 27, 20, 14, 29, 2, 28, 13, 0, 
        0, 12, 0, 29, 14, 20, 2, 29), U_I = c(0, 0, 11, 29, 0, 
        15, 29, 0, 12, 0, 0, 29, 0, 15, 0, 20, 0, 0, 0, 0), U_J = c(29, 
        0, 0, 0, 26, 0, 0, 0, 0, 10, 0, 0, 16, 0, 0, 0, 29, 14, 
        29, 29), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(3, 5, 2, 3, 5, 2, 0, 
        0, 3, 5, 5, 5, 0, 5, 1, 0, 0, 2, 2, 3), cost_mean = c(3.453112, 
        3.960184, 3.290532, 3.338479, 3.957932, 3.295001, 3.601313, 
        3.597526, 3.338357, 3.961851, 3.96127, 4.068812, 3.646688, 
        4.067492, 3.179384, 3.597085, 3.65479, 3.296265, 3.416871, 
        3.451134)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", 
    "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(18L, 
    36L, 37L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 
    55L, 56L, 57L, 58L, 59L, 60L, 61L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.597080e+00 -1.797693e+308   3.597460e+00
I(RT_J^2)     7.921000e-02   4.680000e-02  1.797693e+308
RT_J         -3.238600e-01  -5.407700e-01  -7.016000e-02

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 599538
Tested coordinates: 1000000
Valid coordinates: 8160/40800
Tested coordinates: 1201461
Valid coordinates: 12240/40800
Tested coordinates: 1793377
Tested coordinates: 2000000
Valid coordinates: 16320/40800
Tested coordinates: 2406124
Tested coordinates: 3000000
Valid coordinates: 20400/40800
Tested coordinates: 3023402
Valid coordinates: 24480/40800
Tested coordinates: 3613258
Tested coordinates: 4000000
Valid coordinates: 28560/40800
Tested coordinates: 4222718
Valid coordinates: 32640/40800
Tested coordinates: 4827929
Tested coordinates: 5000000
Valid coordinates: 36720/40800
Tested coordinates: 5433972
Tested coordinates: 6000000
Valid coordinates: 40800/40800
Tested coordinates: 6047528
Valid/Tested configurations: 40800/6047528
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 195200      9

Pruned data dimensions: [1] 55030     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.5849546873073773, 'T2_J': 0.8450267371672449, 'U_J': 0.16253199136375504, 'U_I': 0.13594379198290743, 'I(T2_I^2)': 0.017326398053789344, 'U1_I': 0.619066426485807, 'I(U_I^2)': 0.19454127825634024, 'T2_I': 0.08112502083276439, 'I(RT_J^2)': 3.3530069779925474e-06, 'I(U1_I^2)': 0.4101486989073857, 'I(T1_I^2)': 0.2594412497600465, 'I(U_J^2)': 0.40825715009713637, 'RT_J': 2.1739400228222298e-05}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'T2_I', 'U_I', 'U_J', 'I(U_I^2)', 'I(T1_I^2)', 'I(U_J^2)', 'I(U1_I^2)', 'T1_I', 'U1_I', 'T2_J']
Variables within threshold: ['RT_J']
Unique Variables: ['RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.5849546873073773, 'T2_J': 0.8450267371672449, 'U_J': 0.16253199136375504, 'U_I': 0.13594379198290743, 'I(T2_I^2)': 0.017326398053789344, 'U1_I': 0.619066426485807, 'I(U_I^2)': 0.19454127825634024, 'T2_I': 0.08112502083276439, 'I(RT_J^2)': 3.3530069779925474e-06, 'I(U1_I^2)': 0.4101486989073857, 'I(T1_I^2)': 0.2594412497600465, 'I(U_J^2)': 0.40825715009713637, 'RT_J': 2.1739400228222298e-05}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'T2_I', 'U_I', 'U_J', 'I(U_I^2)', 'I(T1_I^2)', 'I(U_J^2)', 'I(U1_I^2)', 'T1_I', 'U1_I', 'T2_J']
Variables within threshold: ['RT_J']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
16    0    1    3   10   10  16   0    2    4

Best From Design: [5, 11, 0, 11, 0, 0, 0, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.957519
Design Best Point:
[5, 11, 0, 11, 0, 0, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.641325630825
Predicted Best Point:
[0, 1, 3, 10, 10, 16, 0, 2, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 1, 3, 10, 10, 16, 0, 2, 4]
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		4852
        Multiplications: 	1496
        Divisions: 		0
        Logical: 		0
        Reads: 			7662
        Writes: 		815
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.132981
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.641325630825
Slowdown (Predicted Best): 0.833679306121
Budget: 61/1000
Best point from design was better than predicted point
Updating Global Best: 3.179384
Current Best Point: 
[5, 11, 0, 11, 0, 0, 0, 2, 1]
Step 3
Generating valid search space of size 11200 (does not spend evaluations)
Valid coordinates: 1120/11200
Tested coordinates: 163217
Valid coordinates: 2240/11200
Tested coordinates: 320642
Valid coordinates: 3360/11200
Tested coordinates: 487710
Valid coordinates: 4480/11200
Tested coordinates: 657241
Valid coordinates: 5600/11200
Tested coordinates: 819917
Valid coordinates: 6720/11200
Tested coordinates: 983964
Tested coordinates: 1000000
Valid coordinates: 7840/11200
Tested coordinates: 1147040
Valid coordinates: 8960/11200
Tested coordinates: 1312285
Valid coordinates: 10080/11200
Tested coordinates: 1470072
Valid coordinates: 11200/11200
Tested coordinates: 1641508
Valid/Tested configurations: 11200/1641508
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 206400      9

Pruned data dimensions: [1] 20547     9

Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J
Clean Info:
One-Level Factors: ['T1_J', 'RT_I', 'RT_J']
Two-Level Factors: ['T1_J', 'T2_J', 'RT_I', 'RT_J']
Three-Level Factors: ['T1_J', 'T2_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)', 'T2_J']
Three-Level Terms: ['(Intercept)', 'T2_J']
Model Quadratic: ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['T1_J', 'T2_J', 'RT_I', 'RT_J', '(Intercept)', 'T2_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_J', 'T2_J', 'RT_I', 'RT_J', '(Intercept)', 'T2_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 14 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T2_Ie ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 20547     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1910    11   11   11    0   15  16   0    2    4
5226    11   11    0    0    1   0  28    2    4
5469     5   11    6    0   12  29   0    2    4
9452     4   11    0    0   29  15   0    2    4
10606    4   11   11   11   14   0  29    2    4
13441    0   11    0    0   15   0  13    2    4
13648   11   11   11    0    0   0  15    2    4
13777    4   11    0   11    1  29   0    2    4
13867    0   11   11   11   29  27   0    2    4
14721   11   11    0   11   26   0   0    2    4
17722    4   11   11    0    0   0   0    2    4
17768    6   11    7   11   29   0  17    2    4
17960    0   11    3    0   29   0  29    2    4
18553    0   11    5   11    0  10   0    2    4

D-Efficiency Approximation: [1] 0.3050516

Measuring design of size 14
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		4848
        Multiplications: 	1496
        Divisions: 		0
        Logical: 		0
        Reads: 			7651
        Writes: 		814
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.667227
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2746
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			4701
        Writes: 		491
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.657832
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		7825
        Multiplications: 	2380
        Divisions: 		0
        Logical: 		0
        Reads: 			12098
        Writes: 		1268
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.677264
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		4633
        Multiplications: 	1428
        Divisions: 		0
        Logical: 		0
        Reads: 			7337
        Writes: 		793
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.669232
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2822
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4834
        Writes: 		516
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.658022
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		1855
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3221
        Writes: 		353
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.664662
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1960
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3390
        Writes: 		357
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.66238
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		7811
        Multiplications: 	2380
        Divisions: 		0
        Logical: 		0
        Reads: 			12069
        Writes: 		1255
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.782982
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		7381
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11441
        Writes: 		1213
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.669552
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1030
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1829
        Writes: 		222
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.770414
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		1002
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1775
        Writes: 		195
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.662819
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2117
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3664
        Writes: 		411
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.657983
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2834
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4857
        Writes: 		529
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.664263
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		3454
        Multiplications: 	1088
        Divisions: 		0
        Logical: 		0
        Reads: 			5560
        Writes: 		586
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest78.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.763508
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1910    11   11   11    0   15  16   0    2    4  3.667227
5226    11   11    0    0    1   0  28    2    4  3.657832
5469     5   11    6    0   12  29   0    2    4  3.677264
9452     4   11    0    0   29  15   0    2    4  3.669232
10606    4   11   11   11   14   0  29    2    4  3.658022
13441    0   11    0    0   15   0  13    2    4  3.664662
13648   11   11   11    0    0   0  15    2    4  3.662380
13777    4   11    0   11    1  29   0    2    4  3.782982
13867    0   11   11   11   29  27   0    2    4  3.669552
14721   11   11    0   11   26   0   0    2    4  3.770414
17722    4   11   11    0    0   0   0    2    4  3.662819
17768    6   11    7   11   29   0  17    2    4  3.657983
17960    0   11    3    0   29   0  29    2    4  3.664263
18553    0   11    5   11    0  10   0    2    4  3.763508

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1910    11   11   11    0   15  16   0    2    4  3.667227
5226    11   11    0    0    1   0  28    2    4  3.657832
5469     5   11    6    0   12  29   0    2    4  3.677264
9452     4   11    0    0   29  15   0    2    4  3.669232
10606    4   11   11   11   14   0  29    2    4  3.658022
13441    0   11    0    0   15   0  13    2    4  3.664662
13648   11   11   11    0    0   0  15    2    4  3.662380
13777    4   11    0   11    1  29   0    2    4  3.782982
13867    0   11   11   11   29  27   0    2    4  3.669552
14721   11   11    0   11   26   0   0    2    4  3.770414
17722    4   11   11    0    0   0   0    2    4  3.662819
17768    6   11    7   11   29   0  17    2    4  3.657983
17960    0   11    3    0   29   0  29    2    4  3.664263
18553    0   11    5   11    0  10   0    2    4  3.763508

Clean encoded design, with measurements:
           T1_Ie     T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
1910   0.8333333 0.8333333  0.8333333 -1.0000000  0.00000000  0.06666667
5226   0.8333333 0.8333333 -1.0000000 -1.0000000 -0.93333333 -1.00000000
5469  -0.1666667 0.8333333  0.0000000 -1.0000000 -0.20000000  0.93333333
9452  -0.3333333 0.8333333 -1.0000000 -1.0000000  0.93333333  0.00000000
10606 -0.3333333 0.8333333  0.8333333  0.8333333 -0.06666667 -1.00000000
13441 -1.0000000 0.8333333 -1.0000000 -1.0000000  0.00000000 -1.00000000
13648  0.8333333 0.8333333  0.8333333 -1.0000000 -1.00000000 -1.00000000
13777 -0.3333333 0.8333333 -1.0000000  0.8333333 -0.93333333  0.93333333
13867 -1.0000000 0.8333333  0.8333333  0.8333333  0.93333333  0.80000000
14721  0.8333333 0.8333333 -1.0000000  0.8333333  0.73333333 -1.00000000
17722 -0.3333333 0.8333333  0.8333333 -1.0000000 -1.00000000 -1.00000000
17768  0.0000000 0.8333333  0.1666667  0.8333333  0.93333333 -1.00000000
17960 -1.0000000 0.8333333 -0.5000000 -1.0000000  0.93333333 -1.00000000
18553 -1.0000000 0.8333333 -0.1666667  0.8333333 -1.00000000 -0.33333333
            U_Je      RT_Ie     RT_Je cost_mean
1910  -1.0000000 -0.3333333 0.3333333  3.667227
5226   0.8666667 -0.3333333 0.3333333  3.657832
5469  -1.0000000 -0.3333333 0.3333333  3.677264
9452  -1.0000000 -0.3333333 0.3333333  3.669232
10606  0.9333333 -0.3333333 0.3333333  3.658022
13441 -0.1333333 -0.3333333 0.3333333  3.664662
13648  0.0000000 -0.3333333 0.3333333  3.662380
13777 -1.0000000 -0.3333333 0.3333333  3.782982
13867 -1.0000000 -0.3333333 0.3333333  3.669552
14721 -1.0000000 -0.3333333 0.3333333  3.770414
17722 -1.0000000 -0.3333333 0.3333333  3.662819
17768  0.1333333 -0.3333333 0.3333333  3.657983
17960  0.9333333 -0.3333333 0.3333333  3.664263
18553 -1.0000000 -0.3333333 0.3333333  3.763508

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T2_I^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + 
    T1_I + T2_I + T2_J + U1_I + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 75 10

Pruned data dimensions: [1] 14 10

Heteroscedasticity Test p-value: 0.801732335317
Heteroscedasticity transform NOT required.
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.000001 0.000001   0.000  0.986
I(T2_I^2)    1 0.005295 0.005295   3.729  0.193
I(U1_I^2)    1 0.001523 0.001523   1.073  0.409
I(U_I^2)     1 0.002192 0.002192   1.544  0.340
I(U_J^2)     1 0.003395 0.003395   2.391  0.262
T1_I         1 0.000325 0.000325   0.229  0.680
T2_I         1 0.000008 0.000008   0.006  0.946
T2_J         1 0.010248 0.010248   7.218  0.115
U1_I         1 0.000200 0.000200   0.141  0.744
U_I          1 0.000044 0.000044   0.031  0.876
U_J          1 0.001791 0.001791   1.262  0.378
Residuals    2 0.002840 0.001420               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1910   3.667227
5226   3.657832
5469   3.677264
9452   3.669232
10606  3.658022
13441  3.664662
13648  3.662380
13777  3.782982
13867  3.669552
14721  3.770414
17722  3.662819
17768  3.657983
17960  3.664263
18553  3.763508

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.6797540359392997, 'T2_J': 0.1151109190376901, 'U_J': 0.3780674482320254, 'U_I': 0.8759359648153505, 'I(T2_I^2)': 0.19319949108726475, 'U1_I': 0.7436848394773948, 'I(U_I^2)': 0.3399739630299735, 'T2_I': 0.9463003428379491, 'I(U1_I^2)': 0.4091266647066887, 'I(T1_I^2)': 0.986362120506509, 'I(U_J^2)': 0.2620950426256157}
Ordered Keys: 
['T2_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'U_J', 'I(U1_I^2)', 'T1_I', 'U1_I', 'U_I', 'T2_I', 'I(T1_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T2_I ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 75 10

Pruned data dimensions: [1] 14 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T2_I^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + T1_I + T2_I + T2_J + U1_I + U_I + U_J, 
    tau = 0.15, data = structure(list(T1_I = c(11, 11, 5, 4, 
    4, 0, 11, 4, 0, 11, 4, 6, 0, 0), T1_J = c(11, 11, 11, 11, 
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11), T2_I = c(11, 0, 
    6, 0, 11, 0, 11, 0, 11, 0, 11, 7, 3, 5), T2_J = c(0, 0, 0, 
    0, 11, 0, 0, 11, 11, 11, 0, 11, 0, 11), U1_I = c(15, 1, 12, 
    29, 14, 15, 0, 1, 29, 26, 0, 29, 29, 0), U_I = c(16, 0, 29, 
    15, 0, 0, 0, 29, 27, 0, 0, 0, 0, 10), U_J = c(0, 28, 0, 0, 
    29, 13, 15, 0, 0, 0, 0, 17, 29, 0), RT_I = c(2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(4, 4, 4, 4, 4, 4, 
    4, 4, 4, 4, 4, 4, 4, 4), cost_mean = c(3.667227, 3.657832, 
    3.677264, 3.669232, 3.658022, 3.664662, 3.66238, 3.782982, 
    3.669552, 3.770414, 3.662819, 3.657983, 3.664263, 3.763508
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
    "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 62:75, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.714040e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.000000e-05 -1.797693e+308  1.797693e+308
I(T2_I^2)    -2.000000e-05 -1.797693e+308  1.797693e+308
I(U1_I^2)    -1.000000e-04 -1.797693e+308  1.797693e+308
I(U_I^2)     -3.000000e-05 -1.797693e+308  1.797693e+308
I(U_J^2)      5.000000e-05 -1.797693e+308  1.797693e+308
T1_I          1.730000e-03 -1.797693e+308  1.797693e+308
T2_I         -5.050000e-03 -1.797693e+308  1.797693e+308
T2_J          6.820000e-03 -1.797693e+308  1.797693e+308
U1_I          1.180000e-03 -1.797693e+308  1.797693e+308
U_I           2.800000e-04 -1.797693e+308  1.797693e+308
U_J          -4.070000e-03 -1.797693e+308  1.797693e+308

Generating valid search space of size 33600 (does not spend evaluations)
Valid coordinates: 3360/33600
Tested coordinates: 496631
Valid coordinates: 6720/33600
Tested coordinates: 990611
Tested coordinates: 1000000
Valid coordinates: 10080/33600
Tested coordinates: 1487220
Valid coordinates: 13440/33600
Tested coordinates: 1988237
Tested coordinates: 2000000
Valid coordinates: 16800/33600
Tested coordinates: 2468044
Valid coordinates: 20160/33600
Tested coordinates: 2969245
Tested coordinates: 3000000
Valid coordinates: 23520/33600
Tested coordinates: 3462937
Valid coordinates: 26880/33600
Tested coordinates: 3967456
Tested coordinates: 4000000
Valid coordinates: 30240/33600
Tested coordinates: 4459393
Valid coordinates: 33600/33600
Tested coordinates: 4950590
Valid/Tested configurations: 33600/4950590
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 240000      9

Pruned data dimensions: [1] 54147     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.6797540359392997, 'T2_J': 0.1151109190376901, 'U_J': 0.3780674482320254, 'U_I': 0.8759359648153505, 'I(T2_I^2)': 0.19319949108726475, 'U1_I': 0.7436848394773948, 'I(U_I^2)': 0.3399739630299735, 'T2_I': 0.9463003428379491, 'I(U1_I^2)': 0.4091266647066887, 'I(T1_I^2)': 0.986362120506509, 'I(U_J^2)': 0.2620950426256157}
Ordered Keys: 
['T2_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'U_J', 'I(U1_I^2)', 'T1_I', 'U1_I', 'U_I', 'T2_I', 'I(T1_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.6797540359392997, 'T2_J': 0.1151109190376901, 'U_J': 0.3780674482320254, 'U_I': 0.8759359648153505, 'I(T2_I^2)': 0.19319949108726475, 'U1_I': 0.7436848394773948, 'I(U_I^2)': 0.3399739630299735, 'T2_I': 0.9463003428379491, 'I(U1_I^2)': 0.4091266647066887, 'I(T1_I^2)': 0.986362120506509, 'I(U_J^2)': 0.2620950426256157}
Ordered Keys: 
['T2_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'U_J', 'I(U1_I^2)', 'T1_I', 'U1_I', 'U_I', 'T2_I', 'I(T1_I^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
42787    2    5   10    6   20   0   2    3    3

Best From Design: [11, 11, 0, 0, 1, 0, 28, 2, 4]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.957519
Design Best Point:
[11, 11, 0, 0, 1, 0, 28, 2, 4]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.737835195387
Predicted Best Point:
[2, 5, 10, 6, 20, 0, 2, 3, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 5, 10, 6, 20, 0, 2, 3, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		1346
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2320
        Writes: 		272
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest79.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.685625
Current Model: {'inverse': [], 'linear': ['T1_I', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T1_J': 11, 'RT_I': 2, 'RT_J': 4}, 'quadratic': ['T1_I', 'T2_I', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.737835195387
Slowdown (Predicted Best): 0.945155227847
Budget: 75/1000
Best point from design was better than predicted point
Current Best Point: 
[5, 11, 0, 11, 0, 0, 0, 2, 1]
Final Best Point: 
[5, 11, 0, 11, 0, 0, 0, 2, 1]
Ending DLMT
Best Point: [5, 11, 0, 11, 0, 0, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.55927028632
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.55927028632
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [5, 11, 0, 11, 0, 0, 0, 2, 1]={'T1_I': 32, 'T1_J': 2048, 'U_J': 1, 'U_I': 1, 'T2_I': 1, 'T2_J': 2048, 'U1_I': 1, 'RT_I': 4, 'RT_J': 2}, cost=3.179384e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-9189.77, runs=79
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 32
 T1_J = 2048
 T2_I = 1
 T2_J = 2048
 U1_I = 1
 U_I = 1
 U_J = 1
 cost_mean = 3.179384
 points = 79
 speedup = 1.55927028632
 step = 4
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		159
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			368
        Writes: 		53
        Comparisons:		10
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
