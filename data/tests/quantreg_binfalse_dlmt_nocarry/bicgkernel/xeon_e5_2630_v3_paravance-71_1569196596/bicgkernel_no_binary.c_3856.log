
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 83481
Valid coordinates: 3520/17600
Tested coordinates: 168840
Valid coordinates: 5280/17600
Tested coordinates: 253114
Valid coordinates: 7040/17600
Tested coordinates: 338088
Valid coordinates: 8800/17600
Tested coordinates: 424516
Valid coordinates: 10560/17600
Tested coordinates: 512785
Valid coordinates: 12320/17600
Tested coordinates: 598433
Valid coordinates: 14080/17600
Tested coordinates: 684610
Valid coordinates: 15840/17600
Tested coordinates: 770863
Valid coordinates: 17600/17600
Tested coordinates: 856549
Valid/Tested configurations: 17600/856549
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
2030    11   11    0    0    8   0   8    5    0
3116     1    0    0    6    0  20   0    0    2
3269     7   11   11   11   27   0  28    0    3
4678     3   11    4    0    2  29   0    2    2
4890     8    4    0   11   28  28   0    0    0
5289    11    0    0   11   29  11   0    3    2
6086     5    3    0    0    1   0  28    5    1
6719    11    6    0    6   16   3   0    0    0
8232     4    5    0    6   23   0  14    3    2
9659     0    8    5   11   14  15   0    5    2
9849     1    5   11    0   27   0   0    2    3
10799   11    4   11    8    0   0   0    5    2
10932    2    5    5   11    0   0  14    0    5
12339    0    4    5    4   27   0  29    1    5
13026    0    0   11    5   18  27   0    5    0
13627    5    0    6   10    9   1   0    0    1
14206   11    0   11   11    6   0  22    2    0
14315    0   11    2   11   29   0  12    0    0
15277    5   11    0   11    7   0   2    1    5
15354    5    0    7    5   29   2   0    5    0
16738    5    6   11    6    0  12   0    3    0
16831    8    0    8    0   21  13   0    0    5

D-Efficiency Approximation: [1] 0.2183362

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		4250
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6701
        Writes: 		694
        Comparisons:		11
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.266619
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1328
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2312
        Writes: 		263
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.668782
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		391
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			881
        Writes: 		124
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58366
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2115
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3678
        Writes: 		418
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.415145
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		357
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			793
        Writes: 		142
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.598438
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1281
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2289
        Writes: 		285
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.330625
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		14030
        Multiplications: 	4224
        Divisions: 		0
        Logical: 		0
        Reads: 			21221
        Writes: 		2143
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.062623
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		89
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			205
        Writes: 		51
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.619979
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2274
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3759
        Writes: 		417
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.401605
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2959
        Multiplications: 	980
        Divisions: 		0
        Logical: 		0
        Reads: 			5088
        Writes: 		560
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.783864
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		554
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1038
        Writes: 		145
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583474
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1965
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3382
        Writes: 		357
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.783246
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		452
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1025
        Writes: 		116
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684002
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 16 must be greater than the stride value 16; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2058
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3933
        Writes: 		435
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.054252
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		623
        Multiplications: 	244
        Divisions: 		0
        Logical: 		0
        Reads: 			1398
        Writes: 		196
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.551895
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		122
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			288
        Writes: 		56
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.653348
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1448
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2497
        Writes: 		272
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.63927
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		175
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			391
        Writes: 		74
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582151
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1174
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2273
        Writes: 		253
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.955795
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		387
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			877
        Writes: 		134
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.639805
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		237
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			550
        Writes: 		84
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.518857
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		6388
        Multiplications: 	1920
        Divisions: 		0
        Logical: 		0
        Reads: 			9721
        Writes: 		1012
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.039358
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2030    11   11    0    0    8   0   8    5    0  6.266619
3116     1    0    0    6    0  20   0    0    2  4.668782
3269     7   11   11   11   27   0  28    0    3  4.583660
4678     3   11    4    0    2  29   0    2    2  3.415145
4890     8    4    0   11   28  28   0    0    0  4.598438
5289    11    0    0   11   29  11   0    3    2  3.330625
6086     5    3    0    0    1   0  28    5    1  6.062623
6719    11    6    0    6   16   3   0    0    0  3.619979
8232     4    5    0    6   23   0  14    3    2  3.401605
9659     0    8    5   11   14  15   0    5    2  6.783864
9849     1    5   11    0   27   0   0    2    3  4.583474
10799   11    4   11    8    0   0   0    5    2  6.783246
10932    2    5    5   11    0   0  14    0    5  4.684002
12339    0    4    5    4   27   0  29    1    5  4.054252
13026    0    0   11    5   18  27   0    5    0  5.551895
13627    5    0    6   10    9   1   0    0    1  3.653348
14206   11    0   11   11    6   0  22    2    0  3.639270
14315    0   11    2   11   29   0  12    0    0  4.582151
15277    5   11    0   11    7   0   2    1    5  3.955795
15354    5    0    7    5   29   2   0    5    0  5.639805
16738    5    6   11    6    0  12   0    3    0  3.518857
16831    8    0    8    0   21  13   0    0    5  4.039358

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2030    11   11    0    0    8   0   8    5    0  6.266619
3116     1    0    0    6    0  20   0    0    2  4.668782
3269     7   11   11   11   27   0  28    0    3  4.583660
4678     3   11    4    0    2  29   0    2    2  3.415145
4890     8    4    0   11   28  28   0    0    0  4.598438
5289    11    0    0   11   29  11   0    3    2  3.330625
6086     5    3    0    0    1   0  28    5    1  6.062623
6719    11    6    0    6   16   3   0    0    0  3.619979
8232     4    5    0    6   23   0  14    3    2  3.401605
9659     0    8    5   11   14  15   0    5    2  6.783864
9849     1    5   11    0   27   0   0    2    3  4.583474
10799   11    4   11    8    0   0   0    5    2  6.783246
10932    2    5    5   11    0   0  14    0    5  4.684002
12339    0    4    5    4   27   0  29    1    5  4.054252
13026    0    0   11    5   18  27   0    5    0  5.551895
13627    5    0    6   10    9   1   0    0    1  3.653348
14206   11    0   11   11    6   0  22    2    0  3.639270
14315    0   11    2   11   29   0  12    0    0  4.582151
15277    5   11    0   11    7   0   2    1    5  3.955795
15354    5    0    7    5   29   2   0    5    0  5.639805
16738    5    6   11    6    0  12   0    3    0  3.518857
16831    8    0    8    0   21  13   0    0    5  4.039358

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
2030   0.8333333  0.8333333 -1.0000000 -1.0000000 -0.46666667 -1.0000000
3116  -0.8333333 -1.0000000 -1.0000000  0.0000000 -1.00000000  0.3333333
3269   0.1666667  0.8333333  0.8333333  0.8333333  0.80000000 -1.0000000
4678  -0.5000000  0.8333333 -0.3333333 -1.0000000 -0.86666667  0.9333333
4890   0.3333333 -0.3333333 -1.0000000  0.8333333  0.86666667  0.8666667
5289   0.8333333 -1.0000000 -1.0000000  0.8333333  0.93333333 -0.2666667
6086  -0.1666667 -0.5000000 -1.0000000 -1.0000000 -0.93333333 -1.0000000
6719   0.8333333  0.0000000 -1.0000000  0.0000000  0.06666667 -0.8000000
8232  -0.3333333 -0.1666667 -1.0000000  0.0000000  0.53333333 -1.0000000
9659  -1.0000000  0.3333333 -0.1666667  0.8333333 -0.06666667  0.0000000
9849  -0.8333333 -0.1666667  0.8333333 -1.0000000  0.80000000 -1.0000000
10799  0.8333333 -0.3333333  0.8333333  0.3333333 -1.00000000 -1.0000000
10932 -0.6666667 -0.1666667 -0.1666667  0.8333333 -1.00000000 -1.0000000
12339 -1.0000000 -0.3333333 -0.1666667 -0.3333333  0.80000000 -1.0000000
13026 -1.0000000 -1.0000000  0.8333333 -0.1666667  0.20000000  0.8000000
13627 -0.1666667 -1.0000000  0.0000000  0.6666667 -0.40000000 -0.9333333
14206  0.8333333 -1.0000000  0.8333333  0.8333333 -0.60000000 -1.0000000
14315 -1.0000000  0.8333333 -0.6666667  0.8333333  0.93333333 -1.0000000
15277 -0.1666667  0.8333333 -1.0000000  0.8333333 -0.53333333 -1.0000000
15354 -0.1666667 -1.0000000  0.1666667 -0.1666667  0.93333333 -0.8666667
16738 -0.1666667  0.0000000  0.8333333  0.0000000 -1.00000000 -0.2000000
16831  0.3333333 -1.0000000  0.3333333 -1.0000000  0.40000000 -0.1333333
             U_Je      RT_Ie      RT_Je cost_mean
2030  -0.46666667  0.6666667 -1.0000000  6.266619
3116  -1.00000000 -1.0000000 -0.3333333  4.668782
3269   0.86666667 -1.0000000  0.0000000  4.583660
4678  -1.00000000 -0.3333333 -0.3333333  3.415145
4890  -1.00000000 -1.0000000 -1.0000000  4.598438
5289  -1.00000000  0.0000000 -0.3333333  3.330625
6086   0.86666667  0.6666667 -0.6666667  6.062623
6719  -1.00000000 -1.0000000 -1.0000000  3.619979
8232  -0.06666667  0.0000000 -0.3333333  3.401605
9659  -1.00000000  0.6666667 -0.3333333  6.783864
9849  -1.00000000 -0.3333333  0.0000000  4.583474
10799 -1.00000000  0.6666667 -0.3333333  6.783246
10932 -0.06666667 -1.0000000  0.6666667  4.684002
12339  0.93333333 -0.6666667  0.6666667  4.054252
13026 -1.00000000  0.6666667 -1.0000000  5.551895
13627 -1.00000000 -1.0000000 -0.6666667  3.653348
14206  0.46666667 -0.3333333 -1.0000000  3.639270
14315 -0.20000000 -1.0000000 -1.0000000  4.582151
15277 -0.86666667 -0.6666667  0.6666667  3.955795
15354 -1.00000000  0.6666667 -1.0000000  5.639805
16738 -1.00000000  0.0000000 -1.0000000  3.518857
16831 -1.00000000 -1.0000000  0.6666667  4.039358

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.870529805
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value  Pr(>F)   
I(T1_I^2)    1  0.000   0.000   0.000 0.98794   
I(T1_J^2)    1  0.041   0.041   0.098 0.77529   
I(T2_I^2)    1  0.331   0.331   0.793 0.43870   
I(T2_J^2)    1  0.281   0.281   0.674 0.47188   
I(U1_I^2)    1  0.401   0.401   0.961 0.39919   
I(U_I^2)     1  0.057   0.057   0.138 0.73520   
I(U_J^2)     1  0.000   0.000   0.001 0.97497   
I(RT_I^2)    1 15.729  15.729  37.683 0.00869 **
I(RT_J^2)    1  0.436   0.436   1.044 0.38216   
T1_I         1  0.579   0.579   1.387 0.32388   
T1_J         1  0.164   0.164   0.394 0.57496   
T2_I         1  0.013   0.013   0.031 0.87077   
T2_J         1  0.364   0.364   0.873 0.41914   
U1_I         1  0.209   0.209   0.502 0.52980   
U_I          1  0.086   0.086   0.207 0.67992   
U_J          1  0.412   0.412   0.986 0.39383   
RT_I         1  5.430   5.430  13.009 0.03659 * 
RT_J         1  0.091   0.091   0.218 0.67243   
Residuals    3  1.252   0.417                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
2030   6.266619
3116   4.668782
3269   4.583660
4678   3.415145
4890   4.598438
5289   3.330625
6086   6.062623
6719   3.619979
8232   3.401605
9659   6.783864
9849   4.583474
10799  6.783246
10932  4.684002
12339  4.054252
13026  5.551895
13627  3.653348
14206  3.639270
14315  4.582151
15277  3.955795
15354  5.639805
16738  3.518857
16831  4.039358

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.38216017463836266, 'T1_J': 0.57495780934087, 'T2_J': 0.4191396398556327, 'U_J': 0.3938336717214618, 'U_I': 0.6799223855984029, 'I(T2_I^2)': 0.4386984450856744, 'T2_I': 0.8707726239019923, 'U1_I': 0.5297950793037872, 'I(U_I^2)': 0.7351972107319438, 'I(RT_I^2)': 0.008694371864810592, 'I(T2_J^2)': 0.4718767180469785, 'I(U1_I^2)': 0.3991923292765422, 'RT_I': 0.03658793209091979, 'I(T1_I^2)': 0.9879364359216574, 'I(T1_J^2)': 0.77529241266309, 'I(U_J^2)': 0.9749717674563981, 'RT_J': 0.6724273058239871, 'T1_I': 0.3238827703699531}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'T1_I', 'I(RT_J^2)', 'U_J', 'I(U1_I^2)', 'T2_J', 'I(T2_I^2)', 'I(T2_J^2)', 'U1_I', 'T1_J', 'RT_J', 'U_I', 'I(U_I^2)', 'I(T1_J^2)', 'T2_I', 'I(U_J^2)', 'I(T1_I^2)']
Variables within threshold: ['I(RT_I^2)']
Predicting Best Values for: ['I(RT_I^2)']
Using Model: cost_mean ~ I(RT_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_I^2), tau = 0.15, data = structure(list(
    T1_I = c(11, 1, 7, 3, 8, 11, 5, 11, 4, 0, 1, 11, 2, 0, 0, 
    5, 11, 0, 5, 5, 5, 8), T1_J = c(11, 0, 11, 11, 4, 0, 3, 6, 
    5, 8, 5, 4, 5, 4, 0, 0, 0, 11, 11, 0, 6, 0), T2_I = c(0, 
    0, 11, 4, 0, 0, 0, 0, 0, 5, 11, 11, 5, 5, 11, 6, 11, 2, 0, 
    7, 11, 8), T2_J = c(0, 6, 11, 0, 11, 11, 0, 6, 6, 11, 0, 
    8, 11, 4, 5, 10, 11, 11, 11, 5, 6, 0), U1_I = c(8, 0, 27, 
    2, 28, 29, 1, 16, 23, 14, 27, 0, 0, 27, 18, 9, 6, 29, 7, 
    29, 0, 21), U_I = c(0, 20, 0, 29, 28, 11, 0, 3, 0, 15, 0, 
    0, 0, 0, 27, 1, 0, 0, 0, 2, 12, 13), U_J = c(8, 0, 28, 0, 
    0, 0, 28, 0, 14, 0, 0, 0, 14, 29, 0, 0, 22, 12, 2, 0, 0, 
    0), RT_I = c(5, 0, 0, 2, 0, 3, 5, 0, 3, 5, 2, 5, 0, 1, 5, 
    0, 2, 0, 1, 5, 3, 0), RT_J = c(0, 2, 3, 2, 0, 2, 1, 0, 2, 
    2, 3, 2, 5, 5, 0, 1, 0, 0, 5, 0, 0, 5), cost_mean = c(6.266619, 
    4.668782, 4.58366, 3.415145, 4.598438, 3.330625, 6.062623, 
    3.619979, 3.401605, 6.783864, 4.583474, 6.783246, 4.684002, 
    4.054252, 5.551895, 3.653348, 3.63927, 4.582151, 3.955795, 
    5.639805, 3.518857, 4.039358)), .Names = c("T1_I", "T1_J", 
"T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
), row.names = c("2030", "3116", "3269", "4678", "4890", "5289", 
"6086", "6719", "8232", "9659", "9849", "10799", "10932", "12339", 
"13026", "13627", "14206", "14315", "15277", "15354", "16738", 
"16831"), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.008150e+00 -1.797693e+308   3.645990e+00
I(RT_I^2)     1.017500e-01 -1.797693e+308   1.379400e-01

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 252160
Valid coordinates: 10560/52800
Tested coordinates: 505620
Valid coordinates: 15840/52800
Tested coordinates: 755128
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1014286
Valid coordinates: 26400/52800
Tested coordinates: 1262051
Valid coordinates: 31680/52800
Tested coordinates: 1509977
Valid coordinates: 36960/52800
Tested coordinates: 1764588
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2020774
Valid coordinates: 47520/52800
Tested coordinates: 2271502
Valid coordinates: 52800/52800
Tested coordinates: 2530519
Valid/Tested configurations: 52800/2530519
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.38216017463836266, 'T1_J': 0.57495780934087, 'T2_J': 0.4191396398556327, 'U_J': 0.3938336717214618, 'U_I': 0.6799223855984029, 'I(T2_I^2)': 0.4386984450856744, 'T2_I': 0.8707726239019923, 'U1_I': 0.5297950793037872, 'I(U_I^2)': 0.7351972107319438, 'I(RT_I^2)': 0.008694371864810592, 'I(T2_J^2)': 0.4718767180469785, 'I(U1_I^2)': 0.3991923292765422, 'RT_I': 0.03658793209091979, 'I(T1_I^2)': 0.9879364359216574, 'I(T1_J^2)': 0.77529241266309, 'I(U_J^2)': 0.9749717674563981, 'RT_J': 0.6724273058239871, 'T1_I': 0.3238827703699531}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'T1_I', 'I(RT_J^2)', 'U_J', 'I(U1_I^2)', 'T2_J', 'I(T2_I^2)', 'I(T2_J^2)', 'U1_I', 'T1_J', 'RT_J', 'U_I', 'I(U_I^2)', 'I(T1_J^2)', 'T2_I', 'I(U_J^2)', 'I(T1_I^2)']
Variables within threshold: ['RT_I']
Unique Variables: ['RT_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.38216017463836266, 'T1_J': 0.57495780934087, 'T2_J': 0.4191396398556327, 'U_J': 0.3938336717214618, 'U_I': 0.6799223855984029, 'I(T2_I^2)': 0.4386984450856744, 'T2_I': 0.8707726239019923, 'U1_I': 0.5297950793037872, 'I(U_I^2)': 0.7351972107319438, 'I(RT_I^2)': 0.008694371864810592, 'I(T2_J^2)': 0.4718767180469785, 'I(U1_I^2)': 0.3991923292765422, 'RT_I': 0.03658793209091979, 'I(T1_I^2)': 0.9879364359216574, 'I(T1_J^2)': 0.77529241266309, 'I(U_J^2)': 0.9749717674563981, 'RT_J': 0.6724273058239871, 'T1_I': 0.3238827703699531}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'T1_I', 'I(RT_J^2)', 'U_J', 'I(U1_I^2)', 'T2_J', 'I(T2_I^2)', 'I(T2_J^2)', 'U1_I', 'T1_J', 'RT_J', 'U_I', 'I(U_I^2)', 'I(T1_J^2)', 'T2_I', 'I(U_J^2)', 'I(T1_I^2)']
Variables within threshold: ['RT_I']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
7    3   10    8    0    4   0   7    0    2

Best From Design: [11, 0, 0, 11, 29, 11, 0, 3, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.853567
Baseline Point:
4.853567
Design Best Point:
[11, 0, 0, 11, 29, 11, 0, 3, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.686222112521
Predicted Best Point:
[3, 10, 8, 0, 4, 0, 7, 0, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[3, 10, 8, 0, 4, 0, 7, 0, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		143
        Multiplications: 	52
        Divisions: 		0
        Logical: 		0
        Reads: 			335
        Writes: 		51
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684821
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.686222112521
Slowdown (Predicted Best): 0.965232580492
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.330625
Current Best Point: 
[11, 0, 0, 11, 29, 11, 0, 3, 2]
Step 1
Generating valid search space of size 15200 (does not spend evaluations)
Valid coordinates: 1520/15200
Tested coordinates: 62157
Valid coordinates: 3040/15200
Tested coordinates: 125272
Valid coordinates: 4560/15200
Tested coordinates: 189348
Valid coordinates: 6080/15200
Tested coordinates: 252326
Valid coordinates: 7600/15200
Tested coordinates: 311211
Valid coordinates: 9120/15200
Tested coordinates: 371607
Valid coordinates: 10640/15200
Tested coordinates: 432764
Valid coordinates: 12160/15200
Tested coordinates: 491513
Valid coordinates: 13680/15200
Tested coordinates: 552394
Valid coordinates: 15200/15200
Tested coordinates: 615545
Valid/Tested configurations: 15200/615545
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 85600     9

Pruned data dimensions: [1] 29253     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['RT_I']
Two-Level Factors: ['RT_I']
Three-Level Factors: ['RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 19 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 29253     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1442     0    5    6   11   18   0  29    0    3
1658    11    2    0    6    0  19   0    0    4
2593     0    5    5    7    0   7   0    0    0
3189     0    0    0    0   23  23   0    0    0
4721     1    3   11    5    3  29   0    0    3
4834     7    5   11    6   18   0  14    0    0
7227     2    7    0    0    7   0   0    0    5
8716    11   10    0   11   14   0  12    0    2
10351    5    0    0    7    1   0  28    0    0
11639    0   11   11   11    0   0   0    0    3
13178    5    0    6    3   11   0   0    0    3
14615    5   11   10    0   29  14   0    0    1
18548    4    2    0   11   29   0   0    0    2
22219    9    4   10    0   28   0  29    0    5
23282   11    0   11   11    0   1   0    0    0
25833    5   11    5   11   17  29   0    0    5
26317    5    1    6    0    0   0  17    0    3
26395    5    1   11   11   12  17   0    0    5
26467    0    0    8    6   28   0  16    0    5

D-Efficiency Approximation: [1] 0.2332265

Measuring design of size 19
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		391
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			883
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.605406
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		4681
        Multiplications: 	1428
        Divisions: 		0
        Logical: 		0
        Reads: 			7264
        Writes: 		760
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.193232
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		114
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			266
        Writes: 		48
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.520286
Length of requested configs: 1
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	2
        Additions: 		279
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			634
        Writes: 		112
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.002683
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		3590
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5746
        Writes: 		622
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.734165
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		188
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			423
        Writes: 		71
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.585849
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		315
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			723
        Writes: 		90
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684819
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		198
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			455
        Writes: 		71
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584338
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		291
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			655
        Writes: 		78
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.665954
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	4
        Additions: 		87
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			220
        Writes: 		32
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583734
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		106
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			258
        Writes: 		48
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.586001
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		571
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1134
        Writes: 		167
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.368991
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		88
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			214
        Writes: 		58
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.5854
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		617
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1383
        Writes: 		175
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.819125
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		48
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			120
        Writes: 		26
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.561296
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		13771
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20633
        Writes: 		2118
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.204217
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		260
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			598
        Writes: 		72
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 8.394379
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		8339
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12700
        Writes: 		1315
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.750875
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		497
        Multiplications: 	200
        Divisions: 		0
        Logical: 		0
        Reads: 			1116
        Writes: 		147
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58369
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1442     0    5    6   11   18   0  29    0    3  4.605406
1658    11    2    0    6    0  19   0    0    4  4.193232
2593     0    5    5    7    0   7   0    0    0  3.520286
3189     0    0    0    0   23  23   0    0    0  4.002683
4721     1    3   11    5    3  29   0    0    3  4.734165
4834     7    5   11    6   18   0  14    0    0  4.585849
7227     2    7    0    0    7   0   0    0    5  4.684819
8716    11   10    0   11   14   0  12    0    2  4.584338
10351    5    0    0    7    1   0  28    0    0  4.665954
11639    0   11   11   11    0   0   0    0    3  4.583734
13178    5    0    6    3   11   0   0    0    3  4.586001
14615    5   11   10    0   29  14   0    0    1  3.368991
18548    4    2    0   11   29   0   0    0    2  4.585400
22219    9    4   10    0   28   0  29    0    5  4.819125
23282   11    0   11   11    0   1   0    0    0  3.561296
25833    5   11    5   11   17  29   0    0    5  9.204217
26317    5    1    6    0    0   0  17    0    3  8.394379
26395    5    1   11   11   12  17   0    0    5  4.750875
26467    0    0    8    6   28   0  16    0    5  4.583690

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1442     0    5    6   11   18   0  29    0    3  4.605406
1658    11    2    0    6    0  19   0    0    4  4.193232
2593     0    5    5    7    0   7   0    0    0  3.520286
3189     0    0    0    0   23  23   0    0    0  4.002683
4721     1    3   11    5    3  29   0    0    3  4.734165
4834     7    5   11    6   18   0  14    0    0  4.585849
7227     2    7    0    0    7   0   0    0    5  4.684819
8716    11   10    0   11   14   0  12    0    2  4.584338
10351    5    0    0    7    1   0  28    0    0  4.665954
11639    0   11   11   11    0   0   0    0    3  4.583734
13178    5    0    6    3   11   0   0    0    3  4.586001
14615    5   11   10    0   29  14   0    0    1  3.368991
18548    4    2    0   11   29   0   0    0    2  4.585400
22219    9    4   10    0   28   0  29    0    5  4.819125
23282   11    0   11   11    0   1   0    0    0  3.561296
25833    5   11    5   11   17  29   0    0    5  9.204217
26317    5    1    6    0    0   0  17    0    3  8.394379
26395    5    1   11   11   12  17   0    0    5  4.750875
26467    0    0    8    6   28   0  16    0    5  4.583690

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
1442  -1.0000000 -0.1666667  0.0000000  0.8333333  0.20000000 -1.00000000
1658   0.8333333 -0.6666667 -1.0000000  0.0000000 -1.00000000  0.26666667
2593  -1.0000000 -0.1666667 -0.1666667  0.1666667 -1.00000000 -0.53333333
3189  -1.0000000 -1.0000000 -1.0000000 -1.0000000  0.53333333  0.53333333
4721  -0.8333333 -0.5000000  0.8333333 -0.1666667 -0.80000000  0.93333333
4834   0.1666667 -0.1666667  0.8333333  0.0000000  0.20000000 -1.00000000
7227  -0.6666667  0.1666667 -1.0000000 -1.0000000 -0.53333333 -1.00000000
8716   0.8333333  0.6666667 -1.0000000  0.8333333 -0.06666667 -1.00000000
10351 -0.1666667 -1.0000000 -1.0000000  0.1666667 -0.93333333 -1.00000000
11639 -1.0000000  0.8333333  0.8333333  0.8333333 -1.00000000 -1.00000000
13178 -0.1666667 -1.0000000  0.0000000 -0.5000000 -0.26666667 -1.00000000
14615 -0.1666667  0.8333333  0.6666667 -1.0000000  0.93333333 -0.06666667
18548 -0.3333333 -0.6666667 -1.0000000  0.8333333  0.93333333 -1.00000000
22219  0.5000000 -0.3333333  0.6666667 -1.0000000  0.86666667 -1.00000000
23282  0.8333333 -1.0000000  0.8333333  0.8333333 -1.00000000 -0.93333333
25833 -0.1666667  0.8333333 -0.1666667  0.8333333  0.13333333  0.93333333
26317 -0.1666667 -0.8333333  0.0000000 -1.0000000 -1.00000000 -1.00000000
26395 -0.1666667 -0.8333333  0.8333333  0.8333333 -0.20000000  0.13333333
26467 -1.0000000 -1.0000000  0.3333333  0.0000000  0.86666667 -1.00000000
             U_Je RT_Ie      RT_Je cost_mean
1442   0.93333333    -1  0.0000000  4.605406
1658  -1.00000000    -1  0.3333333  4.193232
2593  -1.00000000    -1 -1.0000000  3.520286
3189  -1.00000000    -1 -1.0000000  4.002683
4721  -1.00000000    -1  0.0000000  4.734165
4834  -0.06666667    -1 -1.0000000  4.585849
7227  -1.00000000    -1  0.6666667  4.684819
8716  -0.20000000    -1 -0.3333333  4.584338
10351  0.86666667    -1 -1.0000000  4.665954
11639 -1.00000000    -1  0.0000000  4.583734
13178 -1.00000000    -1  0.0000000  4.586001
14615 -1.00000000    -1 -0.6666667  3.368991
18548 -1.00000000    -1 -0.3333333  4.585400
22219  0.93333333    -1  0.6666667  4.819125
23282 -1.00000000    -1 -1.0000000  3.561296
25833 -1.00000000    -1  0.6666667  9.204217
26317  0.13333333    -1  0.0000000  8.394379
26395 -1.00000000    -1  0.6666667  4.750875
26467  0.06666667    -1  0.6666667  4.583690

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U1_I + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 41 10

Pruned data dimensions: [1] 27 10

Heteroscedasticity Test p-value: 0.000747014802609
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2     1    0    0    6    0  20   0    0    2  4.668782
3     7   11   11   11   27   0  28    0    3  4.583660
5     8    4    0   11   28  28   0    0    0  4.598438
8    11    6    0    6   16   3   0    0    0  3.619979
13    2    5    5   11    0   0  14    0    5  4.684002
16    5    0    6   10    9   1   0    0    1  3.653348
18    0   11    2   11   29   0  12    0    0  4.582151
22    8    0    8    0   21  13   0    0    5  4.039358
23    0    5    6   11   18   0  29    0    3  4.605406
24   11    2    0    6    0  19   0    0    4  4.193232
25    0    5    5    7    0   7   0    0    0  3.520286
26    0    0    0    0   23  23   0    0    0  4.002683
27    1    3   11    5    3  29   0    0    3  4.734165
28    7    5   11    6   18   0  14    0    0  4.585849
29    2    7    0    0    7   0   0    0    5  4.684819
30   11   10    0   11   14   0  12    0    2  4.584338
31    5    0    0    7    1   0  28    0    0  4.665954
32    0   11   11   11    0   0   0    0    3  4.583734
33    5    0    6    3   11   0   0    0    3  4.586001
34    5   11   10    0   29  14   0    0    1  3.368991
35    4    2    0   11   29   0   0    0    2  4.585400
36    9    4   10    0   28   0  29    0    5  4.819125
37   11    0   11   11    0   1   0    0    0  3.561296
38    5   11    5   11   17  29   0    0    5  9.204217
39    5    1    6    0    0   0  17    0    3  8.394379
40    5    1   11   11   12  17   0    0    5  4.750875
41    0    0    8    6   28   0  16    0    5  4.583690

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value Pr(>F)  
I(T1_I^2)    1 1.727e-05 1.727e-05   3.214 0.1033  
I(T1_J^2)    1 6.700e-07 6.700e-07   0.125 0.7306  
I(T2_I^2)    1 2.350e-06 2.350e-06   0.437 0.5235  
I(T2_J^2)    1 4.830e-06 4.830e-06   0.899 0.3653  
I(U1_I^2)    1 1.010e-06 1.010e-06   0.188 0.6739  
I(U_I^2)     1 1.091e-05 1.091e-05   2.030 0.1846  
I(U_J^2)     1 4.648e-05 4.648e-05   8.649 0.0148 *
I(RT_J^2)    1 4.709e-05 4.709e-05   8.763 0.0143 *
T1_I         1 1.102e-05 1.102e-05   2.050 0.1827  
T1_J         1 1.300e-07 1.300e-07   0.023 0.8817  
T2_I         1 4.060e-06 4.060e-06   0.755 0.4052  
T2_J         1 5.000e-08 5.000e-08   0.009 0.9249  
U1_I         1 3.000e-08 3.000e-08   0.005 0.9436  
U_I          1 4.544e-05 4.544e-05   8.455 0.0156 *
U_J          1 2.478e-05 2.478e-05   4.610 0.0573 .
RT_J         1 1.133e-05 1.133e-05   2.108 0.1772  
Residuals   10 5.374e-05 5.370e-06                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1442   4.605406
1658   4.193232
2593   3.520286
3189   4.002683
4721   4.734165
4834   4.585849
7227   4.684819
8716   4.584338
10351  4.665954
11639  4.583734
13178  4.586001
14615  3.368991
18548  4.585400
22219  4.819125
23282  3.561296
25833  9.204217
26317  8.394379
26395  4.750875
26467  4.583690

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.01428334408585517, 'T1_J': 0.8816554541580339, 'T2_J': 0.9248973502025675, 'U_J': 0.05733524094597194, 'U_I': 0.015623086143587915, 'I(T2_I^2)': 0.523544189980548, 'U1_I': 0.9436093267000601, 'I(U_I^2)': 0.1846398556287657, 'T2_I': 0.4052233701377659, 'I(T2_J^2)': 0.3653054266775112, 'I(U1_I^2)': 0.6739133236147499, 'I(T1_I^2)': 0.10327997995075665, 'I(T1_J^2)': 0.7306015724262547, 'I(U_J^2)': 0.014762516398856985, 'RT_J': 0.17716753181745, 'T1_I': 0.1826971950914405}
Ordered Keys: 
['I(RT_J^2)', 'I(U_J^2)', 'U_I', 'U_J', 'I(T1_I^2)', 'RT_J', 'T1_I', 'I(U_I^2)', 'I(T2_J^2)', 'T2_I', 'I(T2_I^2)', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_J', 'T2_J', 'U1_I']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 41 10

Pruned data dimensions: [1] 27 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_J^2) + 
    T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J, tau = 0.15, 
    data = structure(list(T1_I = c(1, 7, 8, 11, 2, 5, 0, 8, 0, 
    11, 0, 0, 1, 7, 2, 11, 5, 0, 5, 5, 4, 9, 11, 5, 5, 5, 0), 
        T1_J = c(0, 11, 4, 6, 5, 0, 11, 0, 5, 2, 5, 0, 3, 5, 
        7, 10, 0, 11, 0, 11, 2, 4, 0, 11, 1, 1, 0), T2_I = c(0, 
        11, 0, 0, 5, 6, 2, 8, 6, 0, 5, 0, 11, 11, 0, 0, 0, 11, 
        6, 10, 0, 10, 11, 5, 6, 11, 8), T2_J = c(6, 11, 11, 6, 
        11, 10, 11, 0, 11, 6, 7, 0, 5, 6, 0, 11, 7, 11, 3, 0, 
        11, 0, 11, 11, 0, 11, 6), U1_I = c(0, 27, 28, 16, 0, 
        9, 29, 21, 18, 0, 0, 23, 3, 18, 7, 14, 1, 0, 11, 29, 
        29, 28, 0, 17, 0, 12, 28), U_I = c(20, 0, 28, 3, 0, 1, 
        0, 13, 0, 19, 7, 23, 29, 0, 0, 0, 0, 0, 0, 14, 0, 0, 
        1, 29, 0, 17, 0), U_J = c(0, 28, 0, 0, 14, 0, 12, 0, 
        29, 0, 0, 0, 0, 14, 0, 12, 28, 0, 0, 0, 0, 29, 0, 0, 
        17, 0, 16), RT_I = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_J = c(2, 
        3, 0, 0, 5, 1, 0, 5, 3, 4, 0, 0, 3, 0, 5, 2, 0, 3, 3, 
        1, 2, 5, 0, 5, 3, 5, 5), cost_mean = c(4.668782, 4.58366, 
        4.598438, 3.619979, 4.684002, 3.653348, 4.582151, 4.039358, 
        4.605406, 4.193232, 3.520286, 4.002683, 4.734165, 4.585849, 
        4.684819, 4.584338, 4.665954, 4.583734, 4.586001, 3.368991, 
        4.5854, 4.819125, 3.561296, 9.204217, 8.394379, 4.750875, 
        4.58369)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", 
    "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(2L, 
    3L, 5L, 8L, 13L, 16L, 18L, 22L, 23L, 24L, 25L, 26L, 27L, 
    28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 
    40L, 41L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.939300e+00 -1.797693e+308   5.528010e+00
I(T1_I^2)    -1.133000e-02  -1.221500e-01   2.466000e-02
I(T1_J^2)    -4.390000e-03  -9.556000e-02   9.745000e-02
I(T2_I^2)     1.889000e-02  -1.544200e-01   3.678400e-01
I(T2_J^2)     2.290000e-03  -1.222000e-01   1.320900e-01
I(U1_I^2)    -1.000000e-04  -1.266000e-02   4.010000e-02
I(U_I^2)      2.880000e-03  -8.630000e-03  1.797693e+308
I(U_J^2)     -2.180000e-03  -2.961000e-02  1.797693e+308
I(RT_J^2)    -1.482000e-02  -3.207300e-01   3.583500e-01
T1_I          1.221500e-01  -1.243000e-01  1.797693e+308
T1_J          1.525000e-02  -1.725560e+00   1.922100e-01
T2_I         -2.294300e-01  -5.803900e-01   4.448860e+00
T2_J         -2.971000e-02  -1.465820e+00   1.561780e+00
U1_I          4.070000e-03 -1.797693e+308   2.283900e-01
U_I          -6.525000e-02 -1.797693e+308   5.370000e-02
U_J           7.865000e-02 -1.797693e+308   5.258200e-01
RT_J          2.003200e-01  -1.640000e+00   1.450530e+00

Generating valid search space of size 45600 (does not spend evaluations)
Valid coordinates: 4560/45600
Tested coordinates: 185882
Valid coordinates: 9120/45600
Tested coordinates: 368011
Valid coordinates: 13680/45600
Tested coordinates: 550360
Valid coordinates: 18240/45600
Tested coordinates: 731980
Valid coordinates: 22800/45600
Tested coordinates: 915325
Tested coordinates: 1000000
Valid coordinates: 27360/45600
Tested coordinates: 1096725
Valid coordinates: 31920/45600
Tested coordinates: 1276366
Valid coordinates: 36480/45600
Tested coordinates: 1455677
Valid coordinates: 41040/45600
Tested coordinates: 1636236
Valid coordinates: 45600/45600
Tested coordinates: 1821700
Valid/Tested configurations: 45600/1821700
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 131200      9

Pruned data dimensions: [1] 74853     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.01428334408585517, 'T1_J': 0.8816554541580339, 'T2_J': 0.9248973502025675, 'U_J': 0.05733524094597194, 'U_I': 0.015623086143587915, 'I(T2_I^2)': 0.523544189980548, 'U1_I': 0.9436093267000601, 'I(U_I^2)': 0.1846398556287657, 'T2_I': 0.4052233701377659, 'I(T2_J^2)': 0.3653054266775112, 'I(U1_I^2)': 0.6739133236147499, 'I(T1_I^2)': 0.10327997995075665, 'I(T1_J^2)': 0.7306015724262547, 'I(U_J^2)': 0.014762516398856985, 'RT_J': 0.17716753181745, 'T1_I': 0.1826971950914405}
Ordered Keys: 
['I(RT_J^2)', 'I(U_J^2)', 'U_I', 'U_J', 'I(T1_I^2)', 'RT_J', 'T1_I', 'I(U_I^2)', 'I(T2_J^2)', 'T2_I', 'I(T2_I^2)', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_J', 'T2_J', 'U1_I']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.01428334408585517, 'T1_J': 0.8816554541580339, 'T2_J': 0.9248973502025675, 'U_J': 0.05733524094597194, 'U_I': 0.015623086143587915, 'I(T2_I^2)': 0.523544189980548, 'U1_I': 0.9436093267000601, 'I(U_I^2)': 0.1846398556287657, 'T2_I': 0.4052233701377659, 'I(T2_J^2)': 0.3653054266775112, 'I(U1_I^2)': 0.6739133236147499, 'I(T1_I^2)': 0.10327997995075665, 'I(T1_J^2)': 0.7306015724262547, 'I(U_J^2)': 0.014762516398856985, 'RT_J': 0.17716753181745, 'T1_I': 0.1826971950914405}
Ordered Keys: 
['I(RT_J^2)', 'I(U_J^2)', 'U_I', 'U_J', 'I(T1_I^2)', 'RT_J', 'T1_I', 'I(U_I^2)', 'I(T2_J^2)', 'T2_I', 'I(T2_I^2)', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_J', 'T2_J', 'U1_I']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
52346    1    4   11   11    9   0  28    0    0

Best From Design: [5, 11, 10, 0, 29, 14, 0, 0, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.853567
Design Best Point:
[5, 11, 10, 0, 29, 14, 0, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.694126814361
Predicted Best Point:
[1, 4, 11, 11, 9, 0, 28, 0, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 4, 11, 11, 9, 0, 28, 0, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		305
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			685
        Writes: 		90
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583368
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.694126814361
Slowdown (Predicted Best): 0.944329809396
Budget: 41/1000
Best point from design was better than predicted point
Current Best Point: 
[11, 0, 0, 11, 29, 11, 0, 3, 2]
Step 2
Generating valid search space of size 15200 (does not spend evaluations)
Valid coordinates: 1520/15200
Tested coordinates: 59284
Valid coordinates: 3040/15200
Tested coordinates: 122938
Valid coordinates: 4560/15200
Tested coordinates: 180639
Valid coordinates: 6080/15200
Tested coordinates: 240582
Valid coordinates: 7600/15200
Tested coordinates: 304180
Valid coordinates: 9120/15200
Tested coordinates: 363463
Valid coordinates: 10640/15200
Tested coordinates: 423809
Valid coordinates: 12160/15200
Tested coordinates: 489322
Valid coordinates: 13680/15200
Tested coordinates: 549583
Valid coordinates: 15200/15200
Tested coordinates: 611206
Valid/Tested configurations: 15200/611206
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 146400      9

Pruned data dimensions: [1] 90053     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['RT_I']
Two-Level Factors: ['RT_I']
Three-Level Factors: ['RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 19 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 90053     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
4435    11    6    0    7   23  17   0    0    0
5288    11    0   11    4    1   0  28    0    0
12344    3    0    0    6   29  12   0    0    5
31127   11   11    0    0    7   0   0    0    3
37116    4    0    5    6    0  29   0    0    3
43278    0    7    5   10    0   1   0    0    5
49232    0    6   11    6   10   0  12    0    2
52722   11    6   11   11   29  23   0    0    2
55779    0    0    7    0   10  14   0    0    1
57787    0    0    5   10   29   1   0    0    0
63439    0   11   11    0   28  29   0    0    5
64740    5    3    0    0    0   0  12    0    0
71705    5    6    5    0   14   0  29    0    5
74506    5   11   10   11   12  29   0    0    0
78472    5   11    5    0   28   0  14    0    3
81193    5   11   11   11    0   9   0    0    2
81849    0    2    0   11   21   0  29    0    2
82152    4    4   11    0   22   0   0    0    3
89244   11    0   11   11   16   0  11    0    5

D-Efficiency Approximation: [1] 0.2469543

Measuring design of size 19
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		242
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			541
        Writes: 		104
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.716089
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		291
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			655
        Writes: 		78
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.770745
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		6082
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			9403
        Writes: 		991
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583177
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		99
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			243
        Writes: 		42
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583474
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		3576
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5717
        Writes: 		612
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.666598
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1071
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2068
        Writes: 		226
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.009651
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		191
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			440
        Writes: 		65
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.671324
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1551
        Multiplications: 	500
        Divisions: 		0
        Logical: 		0
        Reads: 			2699
        Writes: 		332
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.326973
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		401
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			741
        Writes: 		106
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.320441
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		82
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			187
        Writes: 		58
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.556416
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		13782
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20655
        Writes: 		2129
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.539865
Length of requested configs: 1
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	4
        Additions: 		141
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			324
        Writes: 		42
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581722
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		600
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1348
        Writes: 		159
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.664558
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		348
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			776
        Writes: 		127
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.356138
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		263
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			596
        Writes: 		95
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582421
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		660
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1197
        Writes: 		144
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.385141
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		355
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			802
        Writes: 		110
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.241924
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		117
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			280
        Writes: 		59
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582575
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		440
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			992
        Writes: 		125
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581452
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
4435    11    6    0    7   23  17   0    0    0  3.716089
5288    11    0   11    4    1   0  28    0    0  4.770745
12344    3    0    0    6   29  12   0    0    5  4.583177
31127   11   11    0    0    7   0   0    0    3  4.583474
37116    4    0    5    6    0  29   0    0    3  4.666598
43278    0    7    5   10    0   1   0    0    5  4.009651
49232    0    6   11    6   10   0  12    0    2  4.671324
52722   11    6   11   11   29  23   0    0    2  3.326973
55779    0    0    7    0   10  14   0    0    1  3.320441
57787    0    0    5   10   29   1   0    0    0  3.556416
63439    0   11   11    0   28  29   0    0    5  9.539865
64740    5    3    0    0    0   0  12    0    0  4.581722
71705    5    6    5    0   14   0  29    0    5  4.664558
74506    5   11   10   11   12  29   0    0    0  4.356138
78472    5   11    5    0   28   0  14    0    3  4.582421
81193    5   11   11   11    0   9   0    0    2  3.385141
81849    0    2    0   11   21   0  29    0    2  5.241924
82152    4    4   11    0   22   0   0    0    3  4.582575
89244   11    0   11   11   16   0  11    0    5  4.581452

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
4435    11    6    0    7   23  17   0    0    0  3.716089
5288    11    0   11    4    1   0  28    0    0  4.770745
12344    3    0    0    6   29  12   0    0    5  4.583177
31127   11   11    0    0    7   0   0    0    3  4.583474
37116    4    0    5    6    0  29   0    0    3  4.666598
43278    0    7    5   10    0   1   0    0    5  4.009651
49232    0    6   11    6   10   0  12    0    2  4.671324
52722   11    6   11   11   29  23   0    0    2  3.326973
55779    0    0    7    0   10  14   0    0    1  3.320441
57787    0    0    5   10   29   1   0    0    0  3.556416
63439    0   11   11    0   28  29   0    0    5  9.539865
64740    5    3    0    0    0   0  12    0    0  4.581722
71705    5    6    5    0   14   0  29    0    5  4.664558
74506    5   11   10   11   12  29   0    0    0  4.356138
78472    5   11    5    0   28   0  14    0    3  4.582421
81193    5   11   11   11    0   9   0    0    2  3.385141
81849    0    2    0   11   21   0  29    0    2  5.241924
82152    4    4   11    0   22   0   0    0    3  4.582575
89244   11    0   11   11   16   0  11    0    5  4.581452

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
4435   0.8333333  0.0000000 -1.0000000  0.1666667  0.53333333  0.13333333
5288   0.8333333 -1.0000000  0.8333333 -0.3333333 -0.93333333 -1.00000000
12344 -0.5000000 -1.0000000 -1.0000000  0.0000000  0.93333333 -0.20000000
31127  0.8333333  0.8333333 -1.0000000 -1.0000000 -0.53333333 -1.00000000
37116 -0.3333333 -1.0000000 -0.1666667  0.0000000 -1.00000000  0.93333333
43278 -1.0000000  0.1666667 -0.1666667  0.6666667 -1.00000000 -0.93333333
49232 -1.0000000  0.0000000  0.8333333  0.0000000 -0.33333333 -1.00000000
52722  0.8333333  0.0000000  0.8333333  0.8333333  0.93333333  0.53333333
55779 -1.0000000 -1.0000000  0.1666667 -1.0000000 -0.33333333 -0.06666667
57787 -1.0000000 -1.0000000 -0.1666667  0.6666667  0.93333333 -0.93333333
63439 -1.0000000  0.8333333  0.8333333 -1.0000000  0.86666667  0.93333333
64740 -0.1666667 -0.5000000 -1.0000000 -1.0000000 -1.00000000 -1.00000000
71705 -0.1666667  0.0000000 -0.1666667 -1.0000000 -0.06666667 -1.00000000
74506 -0.1666667  0.8333333  0.6666667  0.8333333 -0.20000000  0.93333333
78472 -0.1666667  0.8333333 -0.1666667 -1.0000000  0.86666667 -1.00000000
81193 -0.1666667  0.8333333  0.8333333  0.8333333 -1.00000000 -0.40000000
81849 -1.0000000 -0.6666667 -1.0000000  0.8333333  0.40000000 -1.00000000
82152 -0.3333333 -0.3333333  0.8333333 -1.0000000  0.46666667 -1.00000000
89244  0.8333333 -1.0000000  0.8333333  0.8333333  0.06666667 -1.00000000
             U_Je RT_Ie      RT_Je cost_mean
4435  -1.00000000    -1 -1.0000000  3.716089
5288   0.86666667    -1 -1.0000000  4.770745
12344 -1.00000000    -1  0.6666667  4.583177
31127 -1.00000000    -1  0.0000000  4.583474
37116 -1.00000000    -1  0.0000000  4.666598
43278 -1.00000000    -1  0.6666667  4.009651
49232 -0.20000000    -1 -0.3333333  4.671324
52722 -1.00000000    -1 -0.3333333  3.326973
55779 -1.00000000    -1 -0.6666667  3.320441
57787 -1.00000000    -1 -1.0000000  3.556416
63439 -1.00000000    -1  0.6666667  9.539865
64740 -0.20000000    -1 -1.0000000  4.581722
71705  0.93333333    -1  0.6666667  4.664558
74506 -1.00000000    -1 -1.0000000  4.356138
78472 -0.06666667    -1  0.0000000  4.582421
81193 -1.00000000    -1 -0.3333333  3.385141
81849  0.93333333    -1 -0.3333333  5.241924
82152 -1.00000000    -1  0.0000000  4.582575
89244 -0.26666667    -1  0.6666667  4.581452

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U1_I + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 60 10

Pruned data dimensions: [1] 46 10

Heteroscedasticity Test p-value: 7.50094372464e-09
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2     1    0    0    6    0  20   0    0    2  4.668782
3     7   11   11   11   27   0  28    0    3  4.583660
5     8    4    0   11   28  28   0    0    0  4.598438
8    11    6    0    6   16   3   0    0    0  3.619979
13    2    5    5   11    0   0  14    0    5  4.684002
16    5    0    6   10    9   1   0    0    1  3.653348
18    0   11    2   11   29   0  12    0    0  4.582151
22    8    0    8    0   21  13   0    0    5  4.039358
23    0    5    6   11   18   0  29    0    3  4.605406
24   11    2    0    6    0  19   0    0    4  4.193232
25    0    5    5    7    0   7   0    0    0  3.520286
26    0    0    0    0   23  23   0    0    0  4.002683
27    1    3   11    5    3  29   0    0    3  4.734165
28    7    5   11    6   18   0  14    0    0  4.585849
29    2    7    0    0    7   0   0    0    5  4.684819
30   11   10    0   11   14   0  12    0    2  4.584338
31    5    0    0    7    1   0  28    0    0  4.665954
32    0   11   11   11    0   0   0    0    3  4.583734
33    5    0    6    3   11   0   0    0    3  4.586001
34    5   11   10    0   29  14   0    0    1  3.368991
35    4    2    0   11   29   0   0    0    2  4.585400
36    9    4   10    0   28   0  29    0    5  4.819125
37   11    0   11   11    0   1   0    0    0  3.561296
38    5   11    5   11   17  29   0    0    5  9.204217
39    5    1    6    0    0   0  17    0    3  8.394379
40    5    1   11   11   12  17   0    0    5  4.750875
41    0    0    8    6   28   0  16    0    5  4.583690
42   11    6    0    7   23  17   0    0    0  3.716089
43   11    0   11    4    1   0  28    0    0  4.770745
44    3    0    0    6   29  12   0    0    5  4.583177
45   11   11    0    0    7   0   0    0    3  4.583474
46    4    0    5    6    0  29   0    0    3  4.666598
47    0    7    5   10    0   1   0    0    5  4.009651
48    0    6   11    6   10   0  12    0    2  4.671324
49   11    6   11   11   29  23   0    0    2  3.326973
50    0    0    7    0   10  14   0    0    1  3.320441
51    0    0    5   10   29   1   0    0    0  3.556416
52    0   11   11    0   28  29   0    0    5  9.539865
53    5    3    0    0    0   0  12    0    0  4.581722
54    5    6    5    0   14   0  29    0    5  4.664558
55    5   11   10   11   12  29   0    0    0  4.356138
56    5   11    5    0   28   0  14    0    3  4.582421
57    5   11   11   11    0   9   0    0    2  3.385141
58    0    2    0   11   21   0  29    0    2  5.241924
59    4    4   11    0   22   0   0    0    3  4.582575
60   11    0   11   11   16   0  11    0    5  4.581452

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 2.261e-05 2.261e-05   5.290  0.02884 *  
I(T1_J^2)    1 2.480e-06 2.480e-06   0.580  0.45243    
I(T2_I^2)    1 2.600e-06 2.600e-06   0.608  0.44200    
I(T2_J^2)    1 4.440e-06 4.440e-06   1.040  0.31635    
I(U1_I^2)    1 1.540e-06 1.540e-06   0.361  0.55285    
I(U_I^2)     1 1.058e-05 1.058e-05   2.476  0.12642    
I(U_J^2)     1 9.604e-05 9.604e-05  22.473 5.22e-05 ***
I(RT_J^2)    1 8.957e-05 8.957e-05  20.960 8.18e-05 ***
T1_I         1 5.170e-06 5.170e-06   1.211  0.28023    
T1_J         1 1.040e-06 1.040e-06   0.243  0.62579    
T2_I         1 3.566e-05 3.566e-05   8.344  0.00725 ** 
T2_J         1 7.600e-07 7.600e-07   0.177  0.67719    
U1_I         1 2.850e-06 2.850e-06   0.666  0.42104    
U_I          1 1.429e-04 1.429e-04  33.439 2.90e-06 ***
U_J          1 2.606e-05 2.606e-05   6.098  0.01967 *  
RT_J         1 5.500e-06 5.500e-06   1.288  0.26574    
Residuals   29 1.239e-04 4.270e-06                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
4435   3.716089
5288   4.770745
12344  4.583177
31127  4.583474
37116  4.666598
43278  4.009651
49232  4.671324
52722  3.326973
55779  3.320441
57787  3.556416
63439  9.539865
64740  4.581722
71705  4.664558
74506  4.356138
78472  4.582421
81193  3.385141
81849  5.241924
82152  4.582575
89244  4.581452

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 8.179014442429292e-05, 'T1_J': 0.6257938428250833, 'T2_J': 0.677191868185592, 'U_J': 0.019666112874860718, 'U_I': 2.8959425316658453e-06, 'I(T2_I^2)': 0.44200335121566825, 'U1_I': 0.42104025908191933, 'I(U_I^2)': 0.12641536206810128, 'T2_I': 0.0072455706161901785, 'I(T2_J^2)': 0.31635028211376615, 'I(U1_I^2)': 0.5528485417297597, 'I(T1_I^2)': 0.028843674958574525, 'I(T1_J^2)': 0.4524290381361823, 'I(U_J^2)': 5.215256715664118e-05, 'RT_J': 0.26574401366445555, 'T1_I': 0.28022693299124324}
Ordered Keys: 
['U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_I', 'U_J', 'I(T1_I^2)', 'I(U_I^2)', 'RT_J', 'T1_I', 'I(T2_J^2)', 'U1_I', 'I(T2_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'T1_J', 'T2_J']
Variables within threshold: ['U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_I']
Predicting Best Values for: ['U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_I']
Using Model: cost_mean ~ U_I + I(U_J^2) + I(RT_J^2) + T2_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 60 10

Pruned data dimensions: [1] 46 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ U_I + I(U_J^2) + I(RT_J^2) + T2_I, tau = 0.15, 
    data = structure(list(T1_I = c(1, 7, 8, 11, 2, 5, 0, 8, 0, 
    11, 0, 0, 1, 7, 2, 11, 5, 0, 5, 5, 4, 9, 11, 5, 5, 5, 0, 
    11, 11, 3, 11, 4, 0, 0, 11, 0, 0, 0, 5, 5, 5, 5, 5, 0, 4, 
    11), T1_J = c(0, 11, 4, 6, 5, 0, 11, 0, 5, 2, 5, 0, 3, 5, 
    7, 10, 0, 11, 0, 11, 2, 4, 0, 11, 1, 1, 0, 6, 0, 0, 11, 0, 
    7, 6, 6, 0, 0, 11, 3, 6, 11, 11, 11, 2, 4, 0), T2_I = c(0, 
    11, 0, 0, 5, 6, 2, 8, 6, 0, 5, 0, 11, 11, 0, 0, 0, 11, 6, 
    10, 0, 10, 11, 5, 6, 11, 8, 0, 11, 0, 0, 5, 5, 11, 11, 7, 
    5, 11, 0, 5, 10, 5, 11, 0, 11, 11), T2_J = c(6, 11, 11, 6, 
    11, 10, 11, 0, 11, 6, 7, 0, 5, 6, 0, 11, 7, 11, 3, 0, 11, 
    0, 11, 11, 0, 11, 6, 7, 4, 6, 0, 6, 10, 6, 11, 0, 10, 0, 
    0, 0, 11, 0, 11, 11, 0, 11), U1_I = c(0, 27, 28, 16, 0, 9, 
    29, 21, 18, 0, 0, 23, 3, 18, 7, 14, 1, 0, 11, 29, 29, 28, 
    0, 17, 0, 12, 28, 23, 1, 29, 7, 0, 0, 10, 29, 10, 29, 28, 
    0, 14, 12, 28, 0, 21, 22, 16), U_I = c(20, 0, 28, 3, 0, 1, 
    0, 13, 0, 19, 7, 23, 29, 0, 0, 0, 0, 0, 0, 14, 0, 0, 1, 29, 
    0, 17, 0, 17, 0, 12, 0, 29, 1, 0, 23, 14, 1, 29, 0, 0, 29, 
    0, 9, 0, 0, 0), U_J = c(0, 28, 0, 0, 14, 0, 12, 0, 29, 0, 
    0, 0, 0, 14, 0, 12, 28, 0, 0, 0, 0, 29, 0, 0, 17, 0, 16, 
    0, 28, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 29, 0, 14, 0, 29, 
    0, 11), RT_I = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_J = c(2, 3, 0, 
    0, 5, 1, 0, 5, 3, 4, 0, 0, 3, 0, 5, 2, 0, 3, 3, 1, 2, 5, 
    0, 5, 3, 5, 5, 0, 0, 5, 3, 3, 5, 2, 2, 1, 0, 5, 0, 5, 0, 
    3, 2, 2, 3, 5), cost_mean = c(4.668782, 4.58366, 4.598438, 
    3.619979, 4.684002, 3.653348, 4.582151, 4.039358, 4.605406, 
    4.193232, 3.520286, 4.002683, 4.734165, 4.585849, 4.684819, 
    4.584338, 4.665954, 4.583734, 4.586001, 3.368991, 4.5854, 
    4.819125, 3.561296, 9.204217, 8.394379, 4.750875, 4.58369, 
    3.716089, 4.770745, 4.583177, 4.583474, 4.666598, 4.009651, 
    4.671324, 3.326973, 3.320441, 3.556416, 9.539865, 4.581722, 
    4.664558, 4.356138, 4.582421, 3.385141, 5.241924, 4.582575, 
    4.581452)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
    "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(2L, 
    3L, 5L, 8L, 13L, 16L, 18L, 22L, 23L, 24L, 25L, 26L, 27L, 
    28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 
    40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 
    52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients lower bd upper bd
(Intercept)  3.76783      3.53709  3.92416
U_I         -0.00304     -0.03576  0.01971
I(U_J^2)     0.00098      0.00029  0.00116
I(RT_J^2)    0.02578      0.00475  0.04000
T2_I        -0.04167     -0.05713 -0.00499

Generating valid search space of size 45600 (does not spend evaluations)
Valid coordinates: 4560/45600
Tested coordinates: 180843
Valid coordinates: 9120/45600
Tested coordinates: 367600
Valid coordinates: 13680/45600
Tested coordinates: 552689
Valid coordinates: 18240/45600
Tested coordinates: 734261
Valid coordinates: 22800/45600
Tested coordinates: 914635
Tested coordinates: 1000000
Valid coordinates: 27360/45600
Tested coordinates: 1097079
Valid coordinates: 31920/45600
Tested coordinates: 1280420
Valid coordinates: 36480/45600
Tested coordinates: 1467425
Valid coordinates: 41040/45600
Tested coordinates: 1646918
Valid coordinates: 45600/45600
Tested coordinates: 1831901
Valid/Tested configurations: 45600/1831901
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 192000      9

Pruned data dimensions: [1] 135653      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 8.179014442429292e-05, 'T1_J': 0.6257938428250833, 'T2_J': 0.677191868185592, 'U_J': 0.019666112874860718, 'U_I': 2.8959425316658453e-06, 'I(T2_I^2)': 0.44200335121566825, 'U1_I': 0.42104025908191933, 'I(U_I^2)': 0.12641536206810128, 'T2_I': 0.0072455706161901785, 'I(T2_J^2)': 0.31635028211376615, 'I(U1_I^2)': 0.5528485417297597, 'I(T1_I^2)': 0.028843674958574525, 'I(T1_J^2)': 0.4524290381361823, 'I(U_J^2)': 5.215256715664118e-05, 'RT_J': 0.26574401366445555, 'T1_I': 0.28022693299124324}
Ordered Keys: 
['U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_I', 'U_J', 'I(T1_I^2)', 'I(U_I^2)', 'RT_J', 'T1_I', 'I(T2_J^2)', 'U1_I', 'I(T2_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'T1_J', 'T2_J']
Variables within threshold: ['U_I', 'U_J', 'RT_J', 'T2_I']
Unique Variables: ['U_I', 'U_J', 'RT_J', 'T2_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 8.179014442429292e-05, 'T1_J': 0.6257938428250833, 'T2_J': 0.677191868185592, 'U_J': 0.019666112874860718, 'U_I': 2.8959425316658453e-06, 'I(T2_I^2)': 0.44200335121566825, 'U1_I': 0.42104025908191933, 'I(U_I^2)': 0.12641536206810128, 'T2_I': 0.0072455706161901785, 'I(T2_J^2)': 0.31635028211376615, 'I(U1_I^2)': 0.5528485417297597, 'I(T1_I^2)': 0.028843674958574525, 'I(T1_J^2)': 0.4524290381361823, 'I(U_J^2)': 5.215256715664118e-05, 'RT_J': 0.26574401366445555, 'T1_I': 0.28022693299124324}
Ordered Keys: 
['U_I', 'I(U_J^2)', 'I(RT_J^2)', 'T2_I', 'U_J', 'I(T1_I^2)', 'I(U_I^2)', 'RT_J', 'T1_I', 'I(T2_J^2)', 'U1_I', 'I(T2_I^2)', 'I(T1_J^2)', 'I(U1_I^2)', 'T1_J', 'T2_J']
Variables within threshold: ['U_I', 'U_J', 'RT_J', 'T2_I']
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
2822    1    0   11    8   10   1   0    5    0

Best From Design: [0, 0, 7, 0, 10, 14, 0, 0, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.853567
Design Best Point:
[0, 0, 7, 0, 10, 14, 0, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.684123861894
Predicted Best Point:
[1, 0, 11, 8, 10, 1, 0, 5, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 0, 11, 8, 10, 1, 0, 5, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		358
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			817
        Writes: 		112
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.558684
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.684123861894
Slowdown (Predicted Best): 0.73321002883
Budget: 60/1000
Best point from design was better than predicted point
Updating Global Best: 3.320441
Current Best Point: 
[0, 0, 7, 0, 10, 14, 0, 0, 1]
Step 3
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 1307
Valid coordinates: 1600/8000
Tested coordinates: 2608
Valid coordinates: 2400/8000
Tested coordinates: 3895
Valid coordinates: 3200/8000
Tested coordinates: 5168
Valid coordinates: 4000/8000
Tested coordinates: 6435
Valid coordinates: 4800/8000
Tested coordinates: 7710
Valid coordinates: 5600/8000
Tested coordinates: 9001
Valid coordinates: 6400/8000
Tested coordinates: 10271
Valid coordinates: 7200/8000
Tested coordinates: 11523
Valid coordinates: 8000/8000
Tested coordinates: 12831
Valid/Tested configurations: 8000/12831
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 200000      9

Pruned data dimensions: [1] 8064    9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_J + U1_I
Clean Info:
One-Level Factors: ['T2_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['T2_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['T2_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_J', 'U1_I']
Clean 2 Level Factors/Terms: ['T2_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T2_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_J + U1_I
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_J + U1_I
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + T1_Ie + T1_Je + T2_Je + U1_Ie
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 8064    9

Coded data: NULL
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
148    11    0   11    5    0   1   0    0    0
1536    0    6   11    6   14   1   0    0    0
1886    7   11   11    0    0   1   0    0    0
2429    0    6   11   11    0   1   0    0    0
3352   11    5   11    0   14   1   0    0    0
5586    6    5   11    6   29   1   0    0    0
6247   11   11   11   11   29   1   0    0    0
6823    0   11   11    0   13   1   0    0    0
6843    5    0   11   11   14   1   0    0    0
7618    0    0   11    0   29   1   0    0    0

D-Efficiency Approximation: [1] 0.3277588

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		48
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			120
        Writes: 		26
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.55725
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		67
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			157
        Writes: 		43
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.557743
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		51
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			127
        Writes: 		28
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.555159
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		54
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			134
        Writes: 		30
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.56041
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		67
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			157
        Writes: 		43
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.556454
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		91
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			208
        Writes: 		64
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.559482
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		82
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			187
        Writes: 		58
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.556928
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		66
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			155
        Writes: 		42
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.670466
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		70
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			164
        Writes: 		45
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.555217
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		76
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			173
        Writes: 		54
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.555375
Complete design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
148    11    0   11    5    0   1   0    0    0  3.557250
1536    0    6   11    6   14   1   0    0    0  3.557743
1886    7   11   11    0    0   1   0    0    0  3.555159
2429    0    6   11   11    0   1   0    0    0  3.560410
3352   11    5   11    0   14   1   0    0    0  3.556454
5586    6    5   11    6   29   1   0    0    0  3.559482
6247   11   11   11   11   29   1   0    0    0  3.556928
6823    0   11   11    0   13   1   0    0    0  3.670466
6843    5    0   11   11   14   1   0    0    0  3.555217
7618    0    0   11    0   29   1   0    0    0  3.555375

Clean design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
148    11    0   11    5    0   1   0    0    0  3.557250
1536    0    6   11    6   14   1   0    0    0  3.557743
1886    7   11   11    0    0   1   0    0    0  3.555159
2429    0    6   11   11    0   1   0    0    0  3.560410
3352   11    5   11    0   14   1   0    0    0  3.556454
5586    6    5   11    6   29   1   0    0    0  3.559482
6247   11   11   11   11   29   1   0    0    0  3.556928
6823    0   11   11    0   13   1   0    0    0  3.670466
6843    5    0   11   11   14   1   0    0    0  3.555217
7618    0    0   11    0   29   1   0    0    0  3.555375

Clean encoded design, with measurements:
          T1_Ie      T1_Je     T2_Ie      T2_Je       U1_Ie       U_Ie U_Je
148   0.8333333 -1.0000000 0.8333333 -0.1666667 -1.00000000 -0.9333333   -1
1536 -1.0000000  0.0000000 0.8333333  0.0000000 -0.06666667 -0.9333333   -1
1886  0.1666667  0.8333333 0.8333333 -1.0000000 -1.00000000 -0.9333333   -1
2429 -1.0000000  0.0000000 0.8333333  0.8333333 -1.00000000 -0.9333333   -1
3352  0.8333333 -0.1666667 0.8333333 -1.0000000 -0.06666667 -0.9333333   -1
5586  0.0000000 -0.1666667 0.8333333  0.0000000  0.93333333 -0.9333333   -1
6247  0.8333333  0.8333333 0.8333333  0.8333333  0.93333333 -0.9333333   -1
6823 -1.0000000  0.8333333 0.8333333 -1.0000000 -0.13333333 -0.9333333   -1
6843 -0.1666667 -1.0000000 0.8333333  0.8333333 -0.06666667 -0.9333333   -1
7618 -1.0000000 -1.0000000 0.8333333 -1.0000000  0.93333333 -0.9333333   -1
     RT_Ie RT_Je cost_mean
148     -1    -1  3.557250
1536    -1    -1  3.557743
1886    -1    -1  3.555159
2429    -1    -1  3.560410
3352    -1    -1  3.556454
5586    -1    -1  3.559482
6247    -1    -1  3.556928
6823    -1    -1  3.670466
6843    -1    -1  3.555217
7618    -1    -1  3.555375

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_J + U1_I
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_J^2) + I(U1_I^2) + T1_I + 
    T1_J + T2_J + U1_I

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70 10

Pruned data dimensions: [1] 11 10

Heteroscedasticity Test p-value: 0.0809618854817
Heteroscedasticity transform NOT required.
Regression Step:            Df   Sum Sq   Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.001162 0.0011623   0.482  0.559
I(T1_J^2)    1 0.002514 0.0025140   1.042  0.415
I(T2_J^2)    1 0.000335 0.0003346   0.139  0.745
I(U1_I^2)    1 0.000406 0.0004056   0.168  0.722
T1_I         1 0.000842 0.0008418   0.349  0.615
T1_J         1 0.000542 0.0005419   0.225  0.682
T2_J         1 0.000005 0.0000051   0.002  0.967
U1_I         1 0.001006 0.0010055   0.417  0.585
Residuals    2 0.004827 0.0024137               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:      cost_mean
148   3.557250
1536  3.557743
1886  3.555159
2429  3.560410
3352  3.556454
5586  3.559482
6247  3.556928
6823  3.670466
6843  3.555217
7618  3.555375

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.6146583935257466, 'T1_J': 0.6823113692014958, 'T2_J': 0.9673940464804769, 'U1_I': 0.5848018992812851, 'I(T2_J^2)': 0.745404919877773, 'I(U1_I^2)': 0.7216098047068954, 'I(T1_I^2)': 0.5594838933717198, 'I(T1_J^2)': 0.41481064347154795}
Ordered Keys: 
['I(T1_J^2)', 'I(T1_I^2)', 'U1_I', 'T1_I', 'T1_J', 'I(U1_I^2)', 'I(T2_J^2)', 'T2_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_J + U1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70 10

Pruned data dimensions: [1] 11 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_J^2) + 
    I(U1_I^2) + T1_I + T1_J + T2_J + U1_I, tau = 0.15, data = structure(list(
    T1_I = c(11, 11, 0, 7, 0, 11, 6, 11, 0, 5, 0), T1_J = c(0, 
    0, 6, 11, 6, 5, 5, 11, 11, 0, 0), T2_I = c(11, 11, 11, 11, 
    11, 11, 11, 11, 11, 11, 11), T2_J = c(11, 5, 6, 0, 11, 0, 
    6, 11, 0, 11, 0), U1_I = c(0, 0, 14, 0, 0, 14, 29, 29, 13, 
    14, 29), U_I = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), U_J = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_I = c(0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0), RT_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), 
    cost_mean = c(3.561296, 3.55725, 3.557743, 3.555159, 3.56041, 
    3.556454, 3.559482, 3.556928, 3.670466, 3.555217, 3.555375
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(37L, 61L, 
62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.555780e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     1.000000e-05 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.000000e-04 -1.797693e+308  1.797693e+308
I(T2_J^2)    -2.000000e-05 -1.797693e+308  1.797693e+308
I(U1_I^2)     1.000000e-05 -1.797693e+308  1.797693e+308
T1_I         -8.000000e-05 -1.797693e+308  1.797693e+308
T1_J          1.060000e-03 -1.797693e+308  1.797693e+308
T2_J          3.400000e-04 -1.797693e+308  1.797693e+308
U1_I         -3.000000e-04 -1.797693e+308  1.797693e+308

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 3888
Valid coordinates: 4800/24000
Tested coordinates: 7755
Valid coordinates: 7200/24000
Tested coordinates: 11571
Valid coordinates: 9600/24000
Tested coordinates: 15452
Valid coordinates: 12000/24000
Tested coordinates: 19358
Valid coordinates: 14400/24000
Tested coordinates: 23229
Valid coordinates: 16800/24000
Tested coordinates: 27213
Valid coordinates: 19200/24000
Tested coordinates: 31095
Valid coordinates: 21600/24000
Tested coordinates: 34977
Valid coordinates: 24000/24000
Tested coordinates: 38893
Valid/Tested configurations: 24000/38893
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 224000      9

Pruned data dimensions: [1] 32064     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.6146583935257466, 'T1_J': 0.6823113692014958, 'T2_J': 0.9673940464804769, 'U1_I': 0.5848018992812851, 'I(T2_J^2)': 0.745404919877773, 'I(U1_I^2)': 0.7216098047068954, 'I(T1_I^2)': 0.5594838933717198, 'I(T1_J^2)': 0.41481064347154795}
Ordered Keys: 
['I(T1_J^2)', 'I(T1_I^2)', 'U1_I', 'T1_I', 'T1_J', 'I(U1_I^2)', 'I(T2_J^2)', 'T2_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.6146583935257466, 'T1_J': 0.6823113692014958, 'T2_J': 0.9673940464804769, 'U1_I': 0.5848018992812851, 'I(T2_J^2)': 0.745404919877773, 'I(U1_I^2)': 0.7216098047068954, 'I(T1_I^2)': 0.5594838933717198, 'I(T1_J^2)': 0.41481064347154795}
Ordered Keys: 
['I(T1_J^2)', 'I(T1_I^2)', 'U1_I', 'T1_I', 'T1_J', 'I(U1_I^2)', 'I(T2_J^2)', 'T2_J']
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
6652    2    0    6    5   16  28   0    4    2

Best From Design: [7, 11, 11, 0, 0, 1, 0, 0, 0]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.853567
Design Best Point:
[7, 11, 11, 0, 0, 1, 0, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.732483758852
Predicted Best Point:
[2, 0, 6, 5, 16, 28, 0, 4, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 0, 6, 5, 16, 28, 0, 4, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2788
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			4804
        Writes: 		541
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581147
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 1, 'T2_I': 11, 'RT_J': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.732483758852
Slowdown (Predicted Best): 0.943872207801
Budget: 70/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 0, 7, 0, 10, 14, 0, 0, 1]
Final Best Point: 
[0, 0, 7, 0, 10, 14, 0, 0, 1]
Ending DLMT
Best Point: [0, 0, 7, 0, 10, 14, 0, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.4617236084
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.4617236084
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [0, 0, 7, 0, 10, 14, 0, 0, 1]={'T1_I': 1, 'T1_J': 1, 'U_J': 1, 'U_I': 15, 'T2_I': 128, 'T2_J': 1, 'U1_I': 11, 'RT_I': 1, 'RT_J': 2}, cost=3.320441e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-8613.36, runs=75
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 1
 RT_J = 2
 T1_I = 1
 T1_J = 1
 T2_I = 128
 T2_J = 1
 U1_I = 11
 U_I = 15
 U_J = 1
 cost_mean = 3.320441
 points = 75
 speedup = 1.4617236084
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		401
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			741
        Writes: 		106
        Comparisons:		7
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
