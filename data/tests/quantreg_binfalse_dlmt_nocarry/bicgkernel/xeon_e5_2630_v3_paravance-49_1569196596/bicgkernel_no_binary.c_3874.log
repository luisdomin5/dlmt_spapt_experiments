
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 83799
Valid coordinates: 3520/17600
Tested coordinates: 166488
Valid coordinates: 5280/17600
Tested coordinates: 252939
Valid coordinates: 7040/17600
Tested coordinates: 336993
Valid coordinates: 8800/17600
Tested coordinates: 423431
Valid coordinates: 10560/17600
Tested coordinates: 510128
Valid coordinates: 12320/17600
Tested coordinates: 592195
Valid coordinates: 14080/17600
Tested coordinates: 676452
Valid coordinates: 15840/17600
Tested coordinates: 764582
Valid coordinates: 17600/17600
Tested coordinates: 848786
Valid/Tested configurations: 17600/848786
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
279      8   11    0    0    2  15   0    5    1
1917    11    6    0   11    8   0   8    2    1
2660     3   11    6    0   16   0  13    2    5
3285     2    8   11    0   29   0  27    1    0
4481     0    2    5    0    1   0  15    5    1
6006     3    7    0   11   16   0  29    5    2
6716     2    1   11    5   29   0  15    5    2
7572     0    0   11    1   11  12   0    1    5
8021     5    0   11   11    0   3   0    5    0
8023     5    6    5    0   15   0   0    0    2
8588     5    0    0    0    5  29   0    0    0
8992    11    4   11    4    0   0  23    0    5
9707     2    0    0    6   16   0  16    0    0
10007    4    5    0    6    1   0   4    2    5
10577    7    4    8    6   14  18   0    3    0
10664    3    0    4    5    1   0  29    2    1
11990    4   10   11   11   15  29   0    0    2
12404   11   11   11    0   19   0   0    5    0
12816    0    2    5    5   29  29   0    5    0
13696   11    0    0    0   29  26   0    3    3
14573    7    0    7   11   29   0  25    1    5
15629    0   11    4   11   29  10   0    0    1

D-Efficiency Approximation: [1] 0.2182967

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1596
        Multiplications: 	588
        Divisions: 		0
        Logical: 		0
        Reads: 			3083
        Writes: 		346
        Comparisons:		15
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.474421
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		719
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1329
        Writes: 		162
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.355813
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2824
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4838
        Writes: 		518
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.965759
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		982
        Multiplications: 	348
        Divisions: 		0
        Logical: 		0
        Reads: 			1890
        Writes: 		231
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.554842
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		8154
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12641
        Writes: 		1285
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.980195
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		15407
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23245
        Writes: 		2360
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.78601
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		9095
        Multiplications: 	2772
        Divisions: 		0
        Logical: 		0
        Reads: 			14038
        Writes: 		1451
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 8.049356
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		6816
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10715
        Writes: 		1114
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.941201
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		363
        Multiplications: 	148
        Divisions: 		0
        Logical: 		0
        Reads: 			832
        Writes: 		105
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.530405
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		71
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			179
        Writes: 		42
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580971
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		332
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			741
        Writes: 		114
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.979324
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 16 must be greater than the stride value 16; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		527
        Multiplications: 	228
        Divisions: 		0
        Logical: 		0
        Reads: 			1191
        Writes: 		130
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.6674
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		198
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			445
        Writes: 		69
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.574101
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2272
        Multiplications: 	760
        Divisions: 		0
        Logical: 		0
        Reads: 			3915
        Writes: 		415
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.108728
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		325
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			740
        Writes: 		125
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.530423
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1969
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3408
        Writes: 		363
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.363415
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1906
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3290
        Writes: 		386
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.6834
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		332
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			761
        Writes: 		107
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.452418
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		663
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1485
        Writes: 		219
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.645833
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		3892
        Multiplications: 	1184
        Divisions: 		0
        Logical: 		0
        Reads: 			6105
        Writes: 		673
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.331572
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1932
        Multiplications: 	708
        Divisions: 		0
        Logical: 		0
        Reads: 			3697
        Writes: 		413
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.962302
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		436
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			879
        Writes: 		137
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.657816
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
279      8   11    0    0    2  15   0    5    1  5.474421
1917    11    6    0   11    8   0   8    2    1  3.355813
2660     3   11    6    0   16   0  13    2    5  3.965759
3285     2    8   11    0   29   0  27    1    0  3.554842
4481     0    2    5    0    1   0  15    5    1  5.980195
6006     3    7    0   11   16   0  29    5    2  4.786010
6716     2    1   11    5   29   0  15    5    2  8.049356
7572     0    0   11    1   11  12   0    1    5  3.941201
8021     5    0   11   11    0   3   0    5    0  5.530405
8023     5    6    5    0   15   0   0    0    2  4.580971
8588     5    0    0    0    5  29   0    0    0  4.979324
8992    11    4   11    4    0   0  23    0    5  4.667400
9707     2    0    0    6   16   0  16    0    0  4.574101
10007    4    5    0    6    1   0   4    2    5  4.108728
10577    7    4    8    6   14  18   0    3    0  3.530423
10664    3    0    4    5    1   0  29    2    1  3.363415
11990    4   10   11   11   15  29   0    0    2  4.683400
12404   11   11   11    0   19   0   0    5    0  5.452418
12816    0    2    5    5   29  29   0    5    0  5.645833
13696   11    0    0    0   29  26   0    3    3  3.331572
14573    7    0    7   11   29   0  25    1    5  3.962302
15629    0   11    4   11   29  10   0    0    1  3.657816

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
279      8   11    0    0    2  15   0    5    1  5.474421
1917    11    6    0   11    8   0   8    2    1  3.355813
2660     3   11    6    0   16   0  13    2    5  3.965759
3285     2    8   11    0   29   0  27    1    0  3.554842
4481     0    2    5    0    1   0  15    5    1  5.980195
6006     3    7    0   11   16   0  29    5    2  4.786010
6716     2    1   11    5   29   0  15    5    2  8.049356
7572     0    0   11    1   11  12   0    1    5  3.941201
8021     5    0   11   11    0   3   0    5    0  5.530405
8023     5    6    5    0   15   0   0    0    2  4.580971
8588     5    0    0    0    5  29   0    0    0  4.979324
8992    11    4   11    4    0   0  23    0    5  4.667400
9707     2    0    0    6   16   0  16    0    0  4.574101
10007    4    5    0    6    1   0   4    2    5  4.108728
10577    7    4    8    6   14  18   0    3    0  3.530423
10664    3    0    4    5    1   0  29    2    1  3.363415
11990    4   10   11   11   15  29   0    0    2  4.683400
12404   11   11   11    0   19   0   0    5    0  5.452418
12816    0    2    5    5   29  29   0    5    0  5.645833
13696   11    0    0    0   29  26   0    3    3  3.331572
14573    7    0    7   11   29   0  25    1    5  3.962302
15629    0   11    4   11   29  10   0    0    1  3.657816

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
279    0.3333333  0.8333333 -1.0000000 -1.0000000 -0.86666667  0.0000000
1917   0.8333333  0.0000000 -1.0000000  0.8333333 -0.46666667 -1.0000000
2660  -0.5000000  0.8333333  0.0000000 -1.0000000  0.06666667 -1.0000000
3285  -0.6666667  0.3333333  0.8333333 -1.0000000  0.93333333 -1.0000000
4481  -1.0000000 -0.6666667 -0.1666667 -1.0000000 -0.93333333 -1.0000000
6006  -0.5000000  0.1666667 -1.0000000  0.8333333  0.06666667 -1.0000000
6716  -0.6666667 -0.8333333  0.8333333 -0.1666667  0.93333333 -1.0000000
7572  -1.0000000 -1.0000000  0.8333333 -0.8333333 -0.26666667 -0.2000000
8021  -0.1666667 -1.0000000  0.8333333  0.8333333 -1.00000000 -0.8000000
8023  -0.1666667  0.0000000 -0.1666667 -1.0000000  0.00000000 -1.0000000
8588  -0.1666667 -1.0000000 -1.0000000 -1.0000000 -0.66666667  0.9333333
8992   0.8333333 -0.3333333  0.8333333 -0.3333333 -1.00000000 -1.0000000
9707  -0.6666667 -1.0000000 -1.0000000  0.0000000  0.06666667 -1.0000000
10007 -0.3333333 -0.1666667 -1.0000000  0.0000000 -0.93333333 -1.0000000
10577  0.1666667 -0.3333333  0.3333333  0.0000000 -0.06666667  0.2000000
10664 -0.5000000 -1.0000000 -0.3333333 -0.1666667 -0.93333333 -1.0000000
11990 -0.3333333  0.6666667  0.8333333  0.8333333  0.00000000  0.9333333
12404  0.8333333  0.8333333  0.8333333 -1.0000000  0.26666667 -1.0000000
12816 -1.0000000 -0.6666667 -0.1666667 -0.1666667  0.93333333  0.9333333
13696  0.8333333 -1.0000000 -1.0000000 -1.0000000  0.93333333  0.7333333
14573  0.1666667 -1.0000000  0.1666667  0.8333333  0.93333333 -1.0000000
15629 -1.0000000  0.8333333 -0.3333333  0.8333333  0.93333333 -0.3333333
             U_Je      RT_Ie      RT_Je cost_mean
279   -1.00000000  0.6666667 -0.6666667  5.474421
1917  -0.46666667 -0.3333333 -0.6666667  3.355813
2660  -0.13333333 -0.3333333  0.6666667  3.965759
3285   0.80000000 -0.6666667 -1.0000000  3.554842
4481   0.00000000  0.6666667 -0.6666667  5.980195
6006   0.93333333  0.6666667 -0.3333333  4.786010
6716   0.00000000  0.6666667 -0.3333333  8.049356
7572  -1.00000000 -0.6666667  0.6666667  3.941201
8021  -1.00000000  0.6666667 -1.0000000  5.530405
8023  -1.00000000 -1.0000000 -0.3333333  4.580971
8588  -1.00000000 -1.0000000 -1.0000000  4.979324
8992   0.53333333 -1.0000000  0.6666667  4.667400
9707   0.06666667 -1.0000000 -1.0000000  4.574101
10007 -0.73333333 -0.3333333  0.6666667  4.108728
10577 -1.00000000  0.0000000 -1.0000000  3.530423
10664  0.93333333 -0.3333333 -0.6666667  3.363415
11990 -1.00000000 -1.0000000 -0.3333333  4.683400
12404 -1.00000000  0.6666667 -1.0000000  5.452418
12816 -1.00000000  0.6666667 -1.0000000  5.645833
13696 -1.00000000  0.0000000  0.0000000  3.331572
14573  0.66666667 -0.6666667  0.6666667  3.962302
15629 -1.00000000 -1.0000000 -0.6666667  3.657816

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.410819679682
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  0.956   0.956   2.376 0.2209  
I(T1_J^2)    1  0.109   0.109   0.271 0.6387  
I(T2_I^2)    1  2.319   2.319   5.765 0.0958 .
I(T2_J^2)    1  0.517   0.517   1.285 0.3393  
I(U1_I^2)    1  0.004   0.004   0.010 0.9271  
I(U_I^2)     1  0.025   0.025   0.062 0.8194  
I(U_J^2)     1  1.114   1.114   2.770 0.1946  
I(RT_I^2)    1 11.538  11.538  28.690 0.0127 *
I(RT_J^2)    1  0.000   0.000   0.000 0.9940  
T1_I         1  0.212   0.212   0.527 0.5205  
T1_J         1  0.002   0.002   0.005 0.9479  
T2_I         1  0.366   0.366   0.911 0.4104  
T2_J         1  0.135   0.135   0.335 0.6032  
U1_I         1  0.081   0.081   0.202 0.6838  
U_I          1  2.462   2.462   6.121 0.0897 .
U_J          1  1.030   1.030   2.561 0.2079  
RT_I         1  4.032   4.032  10.025 0.0506 .
RT_J         1  0.632   0.632   1.571 0.2988  
Residuals    3  1.207   0.402                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
279    5.474421
1917   3.355813
2660   3.965759
3285   3.554842
4481   5.980195
6006   4.786010
6716   8.049356
7572   3.941201
8021   5.530405
8023   4.580971
8588   4.979324
8992   4.667400
9707   4.574101
10007  4.108728
10577  3.530423
10664  3.363415
11990  4.683400
12404  5.452418
12816  5.645833
13696  3.331572
14573  3.962302
15629  3.657816

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.9940471302038518, 'T1_J': 0.9478860759845766, 'T2_J': 0.6031799887509776, 'U_J': 0.20785074281344276, 'U_I': 0.08974254698392876, 'I(T2_I^2)': 0.0957843511455735, 'T2_I': 0.4103653664227459, 'U1_I': 0.683818351596839, 'I(U_I^2)': 0.8194073664765772, 'I(RT_I^2)': 0.012732130944506368, 'I(T2_J^2)': 0.3393409327635956, 'I(U1_I^2)': 0.927141364774768, 'RT_I': 0.05062912789892694, 'I(T1_I^2)': 0.2208517977357784, 'I(T1_J^2)': 0.6387048414682586, 'I(U_J^2)': 0.19461961026571048, 'RT_J': 0.29880979074245984, 'T1_I': 0.5204823078961825}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'U_I', 'I(T2_I^2)', 'I(U_J^2)', 'U_J', 'I(T1_I^2)', 'RT_J', 'I(T2_J^2)', 'T2_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'U1_I', 'I(U_I^2)', 'I(U1_I^2)', 'T1_J', 'I(RT_J^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.15, data = structure(list(T1_I = c(8, 
11, 3, 2, 0, 3, 2, 0, 5, 5, 5, 11, 2, 4, 7, 3, 4, 11, 0, 11, 
7, 0), T1_J = c(11, 6, 11, 8, 2, 7, 1, 0, 0, 6, 0, 4, 0, 5, 4, 
0, 10, 11, 2, 0, 0, 11), T2_I = c(0, 0, 6, 11, 5, 0, 11, 11, 
11, 5, 0, 11, 0, 0, 8, 4, 11, 11, 5, 0, 7, 4), T2_J = c(0, 11, 
0, 0, 0, 11, 5, 1, 11, 0, 0, 4, 6, 6, 6, 5, 11, 0, 5, 0, 11, 
11), U1_I = c(2, 8, 16, 29, 1, 16, 29, 11, 0, 15, 5, 0, 16, 1, 
14, 1, 15, 19, 29, 29, 29, 29), U_I = c(15, 0, 0, 0, 0, 0, 0, 
12, 3, 0, 29, 0, 0, 0, 18, 0, 29, 0, 29, 26, 0, 10), U_J = c(0, 
8, 13, 27, 15, 29, 15, 0, 0, 0, 0, 23, 16, 4, 0, 29, 0, 0, 0, 
0, 25, 0), RT_I = c(5, 2, 2, 1, 5, 5, 5, 1, 5, 0, 0, 0, 0, 2, 
3, 2, 0, 5, 5, 3, 1, 0), RT_J = c(1, 1, 5, 0, 1, 2, 2, 5, 0, 
2, 0, 5, 0, 5, 0, 1, 2, 0, 0, 3, 5, 1), cost_mean = c(5.474421, 
3.355813, 3.965759, 3.554842, 5.980195, 4.78601, 8.049356, 3.941201, 
5.530405, 4.580971, 4.979324, 4.6674, 4.574101, 4.108728, 3.530423, 
3.363415, 4.6834, 5.452418, 5.645833, 3.331572, 3.962302, 3.657816
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("279", "1917", 
"2660", "3285", "4481", "6006", "6716", "7572", "8021", "8023", 
"8588", "8992", "9707", "10007", "10577", "10664", "11990", "12404", 
"12816", "13696", "14573", "15629"), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.584850e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.687000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)     4.990000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     9.870000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -2.827000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)     9.400000e-04 -1.797693e+308  1.797693e+308
I(U_I^2)      8.500000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)     -3.530000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     2.465900e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)    -1.134100e-01 -1.797693e+308  1.797693e+308
T1_I          1.387100e-01 -1.797693e+308  1.797693e+308
T1_J         -4.241000e-02 -1.797693e+308  1.797693e+308
T2_I         -3.750000e-02 -1.797693e+308  1.797693e+308
T2_J          2.614800e-01 -1.797693e+308  1.797693e+308
U1_I         -2.121000e-02 -1.797693e+308  1.797693e+308
U_I          -3.281000e-02 -1.797693e+308  1.797693e+308
U_J           7.689000e-02 -1.797693e+308  1.797693e+308
RT_I         -9.276700e-01 -1.797693e+308  1.797693e+308
RT_J          6.496900e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 256486
Valid coordinates: 10560/52800
Tested coordinates: 509329
Valid coordinates: 15840/52800
Tested coordinates: 762714
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1021031
Valid coordinates: 26400/52800
Tested coordinates: 1272378
Valid coordinates: 31680/52800
Tested coordinates: 1524094
Valid coordinates: 36960/52800
Tested coordinates: 1776421
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2026757
Valid coordinates: 47520/52800
Tested coordinates: 2288085
Valid coordinates: 52800/52800
Tested coordinates: 2537458
Valid/Tested configurations: 52800/2537458
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9940471302038518, 'T1_J': 0.9478860759845766, 'T2_J': 0.6031799887509776, 'U_J': 0.20785074281344276, 'U_I': 0.08974254698392876, 'I(T2_I^2)': 0.0957843511455735, 'T2_I': 0.4103653664227459, 'U1_I': 0.683818351596839, 'I(U_I^2)': 0.8194073664765772, 'I(RT_I^2)': 0.012732130944506368, 'I(T2_J^2)': 0.3393409327635956, 'I(U1_I^2)': 0.927141364774768, 'RT_I': 0.05062912789892694, 'I(T1_I^2)': 0.2208517977357784, 'I(T1_J^2)': 0.6387048414682586, 'I(U_J^2)': 0.19461961026571048, 'RT_J': 0.29880979074245984, 'T1_I': 0.5204823078961825}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'U_I', 'I(T2_I^2)', 'I(U_J^2)', 'U_J', 'I(T1_I^2)', 'RT_J', 'I(T2_J^2)', 'T2_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'U1_I', 'I(U_I^2)', 'I(U1_I^2)', 'T1_J', 'I(RT_J^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9940471302038518, 'T1_J': 0.9478860759845766, 'T2_J': 0.6031799887509776, 'U_J': 0.20785074281344276, 'U_I': 0.08974254698392876, 'I(T2_I^2)': 0.0957843511455735, 'T2_I': 0.4103653664227459, 'U1_I': 0.683818351596839, 'I(U_I^2)': 0.8194073664765772, 'I(RT_I^2)': 0.012732130944506368, 'I(T2_J^2)': 0.3393409327635956, 'I(U1_I^2)': 0.927141364774768, 'RT_I': 0.05062912789892694, 'I(T1_I^2)': 0.2208517977357784, 'I(T1_J^2)': 0.6387048414682586, 'I(U_J^2)': 0.19461961026571048, 'RT_J': 0.29880979074245984, 'T1_I': 0.5204823078961825}
Ordered Keys: 
['I(RT_I^2)', 'RT_I', 'U_I', 'I(T2_I^2)', 'I(U_J^2)', 'U_J', 'I(T1_I^2)', 'RT_J', 'I(T2_J^2)', 'T2_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'U1_I', 'I(U_I^2)', 'I(U1_I^2)', 'T1_J', 'I(RT_J^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
20898   11    5    0   11   12   0  28    2    0

Best From Design: [11, 0, 0, 0, 29, 26, 0, 3, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.753711
Baseline Point:
4.753711
Design Best Point:
[11, 0, 0, 0, 29, 26, 0, 3, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.700836041568
Predicted Best Point:
[11, 5, 0, 11, 12, 0, 28, 2, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[11, 5, 0, 11, 12, 0, 28, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1820
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3123
        Writes: 		342
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.687803
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.700836041568
Slowdown (Predicted Best): 0.775773495696
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.331572
Current Best Point: 
[11, 0, 0, 0, 29, 26, 0, 3, 3]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84995
Valid coordinates: 3520/17600
Tested coordinates: 168689
Valid coordinates: 5280/17600
Tested coordinates: 252321
Valid coordinates: 7040/17600
Tested coordinates: 339754
Valid coordinates: 8800/17600
Tested coordinates: 424604
Valid coordinates: 10560/17600
Tested coordinates: 508089
Valid coordinates: 12320/17600
Tested coordinates: 586476
Valid coordinates: 14080/17600
Tested coordinates: 669681
Valid coordinates: 15840/17600
Tested coordinates: 754175
Valid coordinates: 17600/17600
Tested coordinates: 841100
Valid/Tested configurations: 17600/841100
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
8734     7   11   11    0   14   0  12    0    3
12749   11    1   11    5    0  28   0    0    5
24988    1    4    0    0    0   0  11    5    0
25615    4    8    5    0    0   0  28    0    2
26469    7    0    7    7   29   0  16    5    2
33142    1    5   11    5   23   0  29    2    5
33313   10    0    0    0   17  17   0    2    3
39403    6    3    0    5   29   0   0    0    2
44329    8    0   10    0   14   0   0    5    0
47760    0    0    0    6    8   0  17    0    2
49402    0    6    5    6   11   8   0    0    5
59367   11   11    0   11    9   0  28    4    0
59765    3    6    6    7    9  29   0    3    1
60023    1    0    4   11   17   0  29    0    0
61196   11    6   11   11   29   0  15    1    0
66253    0    0   11    0   27  29   0    2    5
66271    4    4    4   11    0   0  13    2    5
70127    0   11   11   11    0   0   0    2    2
77268    6   11    0   11   27  28   0    0    5
77529    2    5   11   11   17  18   0    5    2
85313    6    0   11    7    0  15   0    1    0
86687    0   11    4    0   28  16   0    4    0

D-Efficiency Approximation: [1] 0.2321643

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		234
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			535
        Writes: 		79
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582198
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		13302
        Multiplications: 	3960
        Divisions: 		0
        Logical: 		0
        Reads: 			19942
        Writes: 		2035
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.251077
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		5593
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			8656
        Writes: 		881
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.579328
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		323
        Multiplications: 	136
        Divisions: 		0
        Logical: 		0
        Reads: 			738
        Writes: 		86
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581174
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		9538
        Multiplications: 	2904
        Divisions: 		0
        Logical: 		0
        Reads: 			14677
        Writes: 		1511
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.423723
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		3791
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6452
        Writes: 		685
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.683973
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		2444
        Multiplications: 	752
        Divisions: 		0
        Logical: 		0
        Reads: 			3903
        Writes: 		436
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.562857
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		88
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			214
        Writes: 		58
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.78684
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		324
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			744
        Writes: 		100
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.515947
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		231
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			529
        Writes: 		71
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.773357
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		4252
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6719
        Writes: 		705
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.071392
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		6731
        Multiplications: 	2040
        Divisions: 		0
        Logical: 		0
        Reads: 			10303
        Writes: 		1055
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.677261
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1309
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2553
        Writes: 		315
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.189757
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		319
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			714
        Writes: 		98
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.682644
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		601
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1177
        Writes: 		161
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.597505
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		15150
        Multiplications: 	4496
        Divisions: 		0
        Logical: 		0
        Reads: 			22667
        Writes: 		2330
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.965342
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 16 must be greater than the stride value 16; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2806
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4804
        Writes: 		501
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.900688
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		279
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			568
        Writes: 		73
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.414297
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		13328
        Multiplications: 	3960
        Divisions: 		0
        Logical: 		0
        Reads: 			19991
        Writes: 		2061
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.159595
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		3148
        Multiplications: 	1040
        Divisions: 		0
        Logical: 		0
        Reads: 			5407
        Writes: 		598
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582021
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		213
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			496
        Writes: 		81
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.558231
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		379
        Multiplications: 	136
        Divisions: 		0
        Logical: 		0
        Reads: 			856
        Writes: 		141
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.42493
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
8734     7   11   11    0   14   0  12    0    3  4.582198
12749   11    1   11    5    0  28   0    0    5  5.251077
24988    1    4    0    0    0   0  11    5    0  4.579328
25615    4    8    5    0    0   0  28    0    2  4.581174
26469    7    0    7    7   29   0  16    5    2  6.423723
33142    1    5   11    5   23   0  29    2    5  4.683973
33313   10    0    0    0   17  17   0    2    3  3.562857
39403    6    3    0    5   29   0   0    0    2  4.786840
44329    8    0   10    0   14   0   0    5    0  5.515947
47760    0    0    0    6    8   0  17    0    2  4.773357
49402    0    6    5    6   11   8   0    0    5  4.071392
59367   11   11    0   11    9   0  28    4    0  3.677261
59765    3    6    6    7    9  29   0    3    1  3.189757
60023    1    0    4   11   17   0  29    0    0  4.682644
61196   11    6   11   11   29   0  15    1    0  3.597505
66253    0    0   11    0   27  29   0    2    5  3.965342
66271    4    4    4   11    0   0  13    2    5  3.900688
70127    0   11   11   11    0   0   0    2    2  3.414297
77268    6   11    0   11   27  28   0    0    5  9.159595
77529    2    5   11   11   17  18   0    5    2  4.582021
85313    6    0   11    7    0  15   0    1    0  3.558231
86687    0   11    4    0   28  16   0    4    0  3.424930

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
8734     7   11   11    0   14   0  12    0    3  4.582198
12749   11    1   11    5    0  28   0    0    5  5.251077
24988    1    4    0    0    0   0  11    5    0  4.579328
25615    4    8    5    0    0   0  28    0    2  4.581174
26469    7    0    7    7   29   0  16    5    2  6.423723
33142    1    5   11    5   23   0  29    2    5  4.683973
33313   10    0    0    0   17  17   0    2    3  3.562857
39403    6    3    0    5   29   0   0    0    2  4.786840
44329    8    0   10    0   14   0   0    5    0  5.515947
47760    0    0    0    6    8   0  17    0    2  4.773357
49402    0    6    5    6   11   8   0    0    5  4.071392
59367   11   11    0   11    9   0  28    4    0  3.677261
59765    3    6    6    7    9  29   0    3    1  3.189757
60023    1    0    4   11   17   0  29    0    0  4.682644
61196   11    6   11   11   29   0  15    1    0  3.597505
66253    0    0   11    0   27  29   0    2    5  3.965342
66271    4    4    4   11    0   0  13    2    5  3.900688
70127    0   11   11   11    0   0   0    2    2  3.414297
77268    6   11    0   11   27  28   0    0    5  9.159595
77529    2    5   11   11   17  18   0    5    2  4.582021
85313    6    0   11    7    0  15   0    1    0  3.558231
86687    0   11    4    0   28  16   0    4    0  3.424930

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
8734   0.1666667  0.8333333  0.8333333 -1.0000000 -0.06666667 -1.00000000
12749  0.8333333 -0.8333333  0.8333333 -0.1666667 -1.00000000  0.86666667
24988 -0.8333333 -0.3333333 -1.0000000 -1.0000000 -1.00000000 -1.00000000
25615 -0.3333333  0.3333333 -0.1666667 -1.0000000 -1.00000000 -1.00000000
26469  0.1666667 -1.0000000  0.1666667  0.1666667  0.93333333 -1.00000000
33142 -0.8333333 -0.1666667  0.8333333 -0.1666667  0.53333333 -1.00000000
33313  0.6666667 -1.0000000 -1.0000000 -1.0000000  0.13333333  0.13333333
39403  0.0000000 -0.5000000 -1.0000000 -0.1666667  0.93333333 -1.00000000
44329  0.3333333 -1.0000000  0.6666667 -1.0000000 -0.06666667 -1.00000000
47760 -1.0000000 -1.0000000 -1.0000000  0.0000000 -0.46666667 -1.00000000
49402 -1.0000000  0.0000000 -0.1666667  0.0000000 -0.26666667 -0.46666667
59367  0.8333333  0.8333333 -1.0000000  0.8333333 -0.40000000 -1.00000000
59765 -0.5000000  0.0000000  0.0000000  0.1666667 -0.40000000  0.93333333
60023 -0.8333333 -1.0000000 -0.3333333  0.8333333  0.13333333 -1.00000000
61196  0.8333333  0.0000000  0.8333333  0.8333333  0.93333333 -1.00000000
66253 -1.0000000 -1.0000000  0.8333333 -1.0000000  0.80000000  0.93333333
66271 -0.3333333 -0.3333333 -0.3333333  0.8333333 -1.00000000 -1.00000000
70127 -1.0000000  0.8333333  0.8333333  0.8333333 -1.00000000 -1.00000000
77268  0.0000000  0.8333333 -1.0000000  0.8333333  0.80000000  0.86666667
77529 -0.6666667 -0.1666667  0.8333333  0.8333333  0.13333333  0.20000000
85313  0.0000000 -1.0000000  0.8333333  0.1666667 -1.00000000  0.00000000
86687 -1.0000000  0.8333333 -0.3333333 -1.0000000  0.86666667  0.06666667
             U_Je      RT_Ie      RT_Je cost_mean
8734  -0.20000000 -1.0000000  0.0000000  4.582198
12749 -1.00000000 -1.0000000  0.6666667  5.251077
24988 -0.26666667  0.6666667 -1.0000000  4.579328
25615  0.86666667 -1.0000000 -0.3333333  4.581174
26469  0.06666667  0.6666667 -0.3333333  6.423723
33142  0.93333333 -0.3333333  0.6666667  4.683973
33313 -1.00000000 -0.3333333  0.0000000  3.562857
39403 -1.00000000 -1.0000000 -0.3333333  4.786840
44329 -1.00000000  0.6666667 -1.0000000  5.515947
47760  0.13333333 -1.0000000 -0.3333333  4.773357
49402 -1.00000000 -1.0000000  0.6666667  4.071392
59367  0.86666667  0.3333333 -1.0000000  3.677261
59765 -1.00000000  0.0000000 -0.6666667  3.189757
60023  0.93333333 -1.0000000 -1.0000000  4.682644
61196  0.00000000 -0.6666667 -1.0000000  3.597505
66253 -1.00000000 -0.3333333  0.6666667  3.965342
66271 -0.13333333 -0.3333333  0.6666667  3.900688
70127 -1.00000000 -0.3333333 -0.3333333  3.414297
77268 -1.00000000 -1.0000000  0.6666667  9.159595
77529 -1.00000000  0.6666667 -0.3333333  4.582021
85313 -1.00000000 -0.6666667 -1.0000000  3.558231
86687 -1.00000000  0.3333333 -1.0000000  3.424930

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 1.5657163182e-05
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1     8   11    0    0    2  15   0    5    1  5.474421
2    11    6    0   11    8   0   8    2    1  3.355813
3     3   11    6    0   16   0  13    2    5  3.965759
4     2    8   11    0   29   0  27    1    0  3.554842
5     0    2    5    0    1   0  15    5    1  5.980195
6     3    7    0   11   16   0  29    5    2  4.786010
7     2    1   11    5   29   0  15    5    2  8.049356
8     0    0   11    1   11  12   0    1    5  3.941201
9     5    0   11   11    0   3   0    5    0  5.530405
10    5    6    5    0   15   0   0    0    2  4.580971
11    5    0    0    0    5  29   0    0    0  4.979324
12   11    4   11    4    0   0  23    0    5  4.667400
13    2    0    0    6   16   0  16    0    0  4.574101
14    4    5    0    6    1   0   4    2    5  4.108728
15    7    4    8    6   14  18   0    3    0  3.530423
16    3    0    4    5    1   0  29    2    1  3.363415
17    4   10   11   11   15  29   0    0    2  4.683400
18   11   11   11    0   19   0   0    5    0  5.452418
19    0    2    5    5   29  29   0    5    0  5.645833
20   11    0    0    0   29  26   0    3    3  3.331572
21    7    0    7   11   29   0  25    1    5  3.962302
22    0   11    4   11   29  10   0    0    1  3.657816
23    7   11   11    0   14   0  12    0    3  4.582198
24   11    1   11    5    0  28   0    0    5  5.251077
25    1    4    0    0    0   0  11    5    0  4.579328
26    4    8    5    0    0   0  28    0    2  4.581174
27    7    0    7    7   29   0  16    5    2  6.423723
28    1    5   11    5   23   0  29    2    5  4.683973
29   10    0    0    0   17  17   0    2    3  3.562857
30    6    3    0    5   29   0   0    0    2  4.786840
31    8    0   10    0   14   0   0    5    0  5.515947
32    0    0    0    6    8   0  17    0    2  4.773357
33    0    6    5    6   11   8   0    0    5  4.071392
34   11   11    0   11    9   0  28    4    0  3.677261
35    3    6    6    7    9  29   0    3    1  3.189757
36    1    0    4   11   17   0  29    0    0  4.682644
37   11    6   11   11   29   0  15    1    0  3.597505
38    0    0   11    0   27  29   0    2    5  3.965342
39    4    4    4   11    0   0  13    2    5  3.900688
40    0   11   11   11    0   0   0    2    2  3.414297
41    6   11    0   11   27  28   0    0    5  9.159595
42    2    5   11   11   17  18   0    5    2  4.582021
43    6    0   11    7    0  15   0    1    0  3.558231
44    0   11    4    0   28  16   0    4    0  3.424930

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.0000220 0.0000220   2.471 0.128540    
I(T1_J^2)    1 0.0000124 0.0000124   1.400 0.247881    
I(T2_I^2)    1 0.0000161 0.0000161   1.810 0.190590    
I(T2_J^2)    1 0.0000139 0.0000139   1.558 0.223590    
I(U1_I^2)    1 0.0000019 0.0000019   0.215 0.646762    
I(U_I^2)     1 0.0000008 0.0000008   0.087 0.770456    
I(U_J^2)     1 0.0000006 0.0000006   0.069 0.794981    
I(RT_I^2)    1 0.0002368 0.0002368  26.629 2.46e-05 ***
I(RT_J^2)    1 0.0000887 0.0000887   9.979 0.004109 ** 
T1_I         1 0.0000979 0.0000979  11.005 0.002783 ** 
T1_J         1 0.0000234 0.0000234   2.631 0.117352    
T2_I         1 0.0000536 0.0000536   6.025 0.021411 *  
T2_J         1 0.0000078 0.0000078   0.873 0.359109    
U1_I         1 0.0000025 0.0000025   0.276 0.604032    
U_I          1 0.0001480 0.0001480  16.641 0.000404 ***
U_J          1 0.0000003 0.0000003   0.035 0.854077    
RT_I         1 0.0008765 0.0008765  98.565 3.71e-10 ***
RT_J         1 0.0000031 0.0000031   0.348 0.560819    
Residuals   25 0.0002223 0.0000089                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
8734   4.582198
12749  5.251077
24988  4.579328
25615  4.581174
26469  6.423723
33142  4.683973
33313  3.562857
39403  4.786840
44329  5.515947
47760  4.773357
49402  4.071392
59367  3.677261
59765  3.189757
60023  4.682644
61196  3.597505
66253  3.965342
66271  3.900688
70127  3.414297
77268  9.159595
77529  4.582021
85313  3.558231
86687  3.424930

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.0041085653257769165, 'T1_J': 0.11735207129459646, 'T2_J': 0.3591093808877007, 'U_J': 0.8540766387777183, 'U_I': 0.00040407323284360374, 'I(T2_I^2)': 0.19059049545076887, 'T2_I': 0.0214106977741228, 'U1_I': 0.6040317083794354, 'I(U_I^2)': 0.7704555668139634, 'I(RT_I^2)': 2.4628564659224796e-05, 'I(T2_J^2)': 0.22358975182110008, 'I(U1_I^2)': 0.6467616473087789, 'RT_I': 3.7093328622685984e-10, 'I(T1_I^2)': 0.12854030284704654, 'I(T1_J^2)': 0.2478807770314268, 'I(U_J^2)': 0.7949809502087064, 'RT_J': 0.5608185327567737, 'T1_I': 0.0027830078332520235}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'U_I', 'T1_I', 'I(RT_J^2)', 'T2_I', 'T1_J', 'I(T1_I^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'I(T1_J^2)', 'T2_J', 'RT_J', 'U1_I', 'I(U1_I^2)', 'I(U_I^2)', 'I(U_J^2)', 'U_J']
Variables within threshold: ['RT_I', 'I(RT_I^2)', 'U_I', 'T1_I', 'I(RT_J^2)']
Predicting Best Values for: ['RT_I', 'I(RT_I^2)', 'U_I', 'T1_I', 'I(RT_J^2)']
Using Model: cost_mean ~ RT_I + I(RT_I^2) + U_I + T1_I + I(RT_J^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_I^2) + U_I + T1_I + I(RT_J^2), 
    tau = 0.15, data = structure(list(T1_I = c(8, 11, 3, 2, 0, 
    3, 2, 0, 5, 5, 5, 11, 2, 4, 7, 3, 4, 11, 0, 11, 7, 0, 7, 
    11, 1, 4, 7, 1, 10, 6, 8, 0, 0, 11, 3, 1, 11, 0, 4, 0, 6, 
    2, 6, 0), T1_J = c(11, 6, 11, 8, 2, 7, 1, 0, 0, 6, 0, 4, 
    0, 5, 4, 0, 10, 11, 2, 0, 0, 11, 11, 1, 4, 8, 0, 5, 0, 3, 
    0, 0, 6, 11, 6, 0, 6, 0, 4, 11, 11, 5, 0, 11), T2_I = c(0, 
    0, 6, 11, 5, 0, 11, 11, 11, 5, 0, 11, 0, 0, 8, 4, 11, 11, 
    5, 0, 7, 4, 11, 11, 0, 5, 7, 11, 0, 0, 10, 0, 5, 0, 6, 4, 
    11, 11, 4, 11, 0, 11, 11, 4), T2_J = c(0, 11, 0, 0, 0, 11, 
    5, 1, 11, 0, 0, 4, 6, 6, 6, 5, 11, 0, 5, 0, 11, 11, 0, 5, 
    0, 0, 7, 5, 0, 5, 0, 6, 6, 11, 7, 11, 11, 0, 11, 11, 11, 
    11, 7, 0), U1_I = c(2, 8, 16, 29, 1, 16, 29, 11, 0, 15, 5, 
    0, 16, 1, 14, 1, 15, 19, 29, 29, 29, 29, 14, 0, 0, 0, 29, 
    23, 17, 29, 14, 8, 11, 9, 9, 17, 29, 27, 0, 0, 27, 17, 0, 
    28), U_I = c(15, 0, 0, 0, 0, 0, 0, 12, 3, 0, 29, 0, 0, 0, 
    18, 0, 29, 0, 29, 26, 0, 10, 0, 28, 0, 0, 0, 0, 17, 0, 0, 
    0, 8, 0, 29, 0, 0, 29, 0, 0, 28, 18, 15, 16), U_J = c(0, 
    8, 13, 27, 15, 29, 15, 0, 0, 0, 0, 23, 16, 4, 0, 29, 0, 0, 
    0, 0, 25, 0, 12, 0, 11, 28, 16, 29, 0, 0, 0, 17, 0, 28, 0, 
    29, 15, 0, 13, 0, 0, 0, 0, 0), RT_I = c(5, 2, 2, 1, 5, 5, 
    5, 1, 5, 0, 0, 0, 0, 2, 3, 2, 0, 5, 5, 3, 1, 0, 0, 0, 5, 
    0, 5, 2, 2, 0, 5, 0, 0, 4, 3, 0, 1, 2, 2, 2, 0, 5, 1, 4), 
        RT_J = c(1, 1, 5, 0, 1, 2, 2, 5, 0, 2, 0, 5, 0, 5, 0, 
        1, 2, 0, 0, 3, 5, 1, 3, 5, 0, 2, 2, 5, 3, 2, 0, 2, 5, 
        0, 1, 0, 0, 5, 5, 2, 5, 2, 0, 0), cost_mean = c(5.474421, 
        3.355813, 3.965759, 3.554842, 5.980195, 4.78601, 8.049356, 
        3.941201, 5.530405, 4.580971, 4.979324, 4.6674, 4.574101, 
        4.108728, 3.530423, 3.363415, 4.6834, 5.452418, 5.645833, 
        3.331572, 3.962302, 3.657816, 4.582198, 5.251077, 4.579328, 
        4.581174, 6.423723, 4.683973, 3.562857, 4.78684, 5.515947, 
        4.773357, 4.071392, 3.677261, 3.189757, 4.682644, 3.597505, 
        3.965342, 3.900688, 3.414297, 9.159595, 4.582021, 3.558231, 
        3.42493)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", 
    "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
    -44L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients lower bd upper bd
(Intercept)  4.23150      3.41259  4.49009
RT_I        -0.87483     -1.55739 -0.45965
I(RT_I^2)    0.18869      0.09343  0.35595
U_I         -0.00631     -0.07269  0.01387
T1_I         0.00474     -0.00380  0.05109
I(RT_J^2)    0.01535     -0.01874  0.03573

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 259585
Valid coordinates: 10560/52800
Tested coordinates: 516753
Valid coordinates: 15840/52800
Tested coordinates: 773648
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1023989
Valid coordinates: 26400/52800
Tested coordinates: 1282387
Valid coordinates: 31680/52800
Tested coordinates: 1533645
Valid coordinates: 36960/52800
Tested coordinates: 1780970
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2038522
Valid coordinates: 47520/52800
Tested coordinates: 2295622
Valid coordinates: 52800/52800
Tested coordinates: 2550779
Valid/Tested configurations: 52800/2550779
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0041085653257769165, 'T1_J': 0.11735207129459646, 'T2_J': 0.3591093808877007, 'U_J': 0.8540766387777183, 'U_I': 0.00040407323284360374, 'I(T2_I^2)': 0.19059049545076887, 'T2_I': 0.0214106977741228, 'U1_I': 0.6040317083794354, 'I(U_I^2)': 0.7704555668139634, 'I(RT_I^2)': 2.4628564659224796e-05, 'I(T2_J^2)': 0.22358975182110008, 'I(U1_I^2)': 0.6467616473087789, 'RT_I': 3.7093328622685984e-10, 'I(T1_I^2)': 0.12854030284704654, 'I(T1_J^2)': 0.2478807770314268, 'I(U_J^2)': 0.7949809502087064, 'RT_J': 0.5608185327567737, 'T1_I': 0.0027830078332520235}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'U_I', 'T1_I', 'I(RT_J^2)', 'T2_I', 'T1_J', 'I(T1_I^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'I(T1_J^2)', 'T2_J', 'RT_J', 'U1_I', 'I(U1_I^2)', 'I(U_I^2)', 'I(U_J^2)', 'U_J']
Variables within threshold: ['RT_I', 'U_I', 'T1_I', 'RT_J']
Unique Variables: ['RT_I', 'U_I', 'T1_I', 'RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0041085653257769165, 'T1_J': 0.11735207129459646, 'T2_J': 0.3591093808877007, 'U_J': 0.8540766387777183, 'U_I': 0.00040407323284360374, 'I(T2_I^2)': 0.19059049545076887, 'T2_I': 0.0214106977741228, 'U1_I': 0.6040317083794354, 'I(U_I^2)': 0.7704555668139634, 'I(RT_I^2)': 2.4628564659224796e-05, 'I(T2_J^2)': 0.22358975182110008, 'I(U1_I^2)': 0.6467616473087789, 'RT_I': 3.7093328622685984e-10, 'I(T1_I^2)': 0.12854030284704654, 'I(T1_J^2)': 0.2478807770314268, 'I(U_J^2)': 0.7949809502087064, 'RT_J': 0.5608185327567737, 'T1_I': 0.0027830078332520235}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'U_I', 'T1_I', 'I(RT_J^2)', 'T2_I', 'T1_J', 'I(T1_I^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'I(T1_J^2)', 'T2_J', 'RT_J', 'U1_I', 'I(U1_I^2)', 'I(U_I^2)', 'I(U_J^2)', 'U_J']
Variables within threshold: ['RT_I', 'U_I', 'T1_I', 'RT_J']
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
8709    0    7    8   11    9  29   0    2    0

Best From Design: [3, 6, 6, 7, 9, 29, 0, 3, 1]
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753711
Design Best Point:
[3, 6, 6, 7, 9, 29, 0, 3, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.671003559114
Predicted Best Point:
[0, 7, 8, 11, 9, 29, 0, 2, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 7, 8, 11, 9, 29, 0, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		391
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			885
        Writes: 		143
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.612265
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.671003559114
Slowdown (Predicted Best): 0.759883173378
Budget: 44/1000
Best point from design was better than predicted point
Updating Global Best: 3.189757
Current Best Point: 
[3, 6, 6, 7, 9, 29, 0, 3, 1]
Step 2
Generating valid search space of size 10400 (does not spend evaluations)
Valid coordinates: 1040/10400
Tested coordinates: 48269
Valid coordinates: 2080/10400
Tested coordinates: 96622
Valid coordinates: 3120/10400
Tested coordinates: 147622
Valid coordinates: 4160/10400
Tested coordinates: 197019
Valid coordinates: 5200/10400
Tested coordinates: 248677
Valid coordinates: 6240/10400
Tested coordinates: 299014
Valid coordinates: 7280/10400
Tested coordinates: 350440
Valid coordinates: 8320/10400
Tested coordinates: 400516
Valid coordinates: 9360/10400
Tested coordinates: 454223
Valid coordinates: 10400/10400
Tested coordinates: 505637
Valid/Tested configurations: 10400/505637
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 151200      9

Pruned data dimensions: [1] 10407     9

Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + T1_J + T2_I + T2_J + U1_I + U_J
Clean Info:
One-Level Factors: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Two-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Three-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Model Quadratic: ['T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J']
Clean 2 Level Factors/Terms: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)', 'U_J', 'U_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)', 'U_J', 'U_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 13 experiments
Design Formula: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Encoded model used in optFederov: ~ I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + T1_Je + T2_Ie + T2_Je + U1_Ie
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 10407     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
830      0   11   11    0   15  29   0    2    0
1052     0    6    5    6    0  29   0    2    0
2281     0    0    5    0   28  29   0    2    0
2468     0    0    5   11   16  29   0    2    0
2590     0    4   11   11   29  29   0    2    0
4354     0    0   11    5   16  29   0    2    0
4753     0   11    0   11   29  29   0    2    0
6271     0    6    7    0   29  29   0    2    0
6535     0    0   11   11    0  29   0    2    0
7140     0    1    0    0    0  29   0    2    0
10127    0   11    6   11    0  29   0    2    0
10340    0    5    0   11   14  29   0    2    0
10390    0    0    0    6   29  29   0    2    0

D-Efficiency Approximation: [1] 0.3251537

Measuring design of size 13
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		388
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			876
        Writes: 		143
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.600336
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		368
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			837
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.626134
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		392
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			881
        Writes: 		150
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.633162
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			878
        Writes: 		144
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.601021
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		411
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			925
        Writes: 		163
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.645914
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			878
        Writes: 		144
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.637961
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			893
        Writes: 		155
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.596485
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		402
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			904
        Writes: 		157
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.621032
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		368
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			837
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.60034
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		355
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			826
        Writes: 		123
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.694229
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		368
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			837
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.600572
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		383
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			884
        Writes: 		146
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.582985
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			893
        Writes: 		155
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.619173
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
830      0   11   11    0   15  29   0    2    0  3.600336
1052     0    6    5    6    0  29   0    2    0  3.626134
2281     0    0    5    0   28  29   0    2    0  3.633162
2468     0    0    5   11   16  29   0    2    0  3.601021
2590     0    4   11   11   29  29   0    2    0  3.645914
4354     0    0   11    5   16  29   0    2    0  3.637961
4753     0   11    0   11   29  29   0    2    0  3.596485
6271     0    6    7    0   29  29   0    2    0  3.621032
6535     0    0   11   11    0  29   0    2    0  3.600340
7140     0    1    0    0    0  29   0    2    0  3.694229
10127    0   11    6   11    0  29   0    2    0  3.600572
10340    0    5    0   11   14  29   0    2    0  3.582985
10390    0    0    0    6   29  29   0    2    0  3.619173

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
830      0   11   11    0   15  29   0    2    0  3.600336
1052     0    6    5    6    0  29   0    2    0  3.626134
2281     0    0    5    0   28  29   0    2    0  3.633162
2468     0    0    5   11   16  29   0    2    0  3.601021
2590     0    4   11   11   29  29   0    2    0  3.645914
4354     0    0   11    5   16  29   0    2    0  3.637961
4753     0   11    0   11   29  29   0    2    0  3.596485
6271     0    6    7    0   29  29   0    2    0  3.621032
6535     0    0   11   11    0  29   0    2    0  3.600340
7140     0    1    0    0    0  29   0    2    0  3.694229
10127    0   11    6   11    0  29   0    2    0  3.600572
10340    0    5    0   11   14  29   0    2    0  3.582985
10390    0    0    0    6   29  29   0    2    0  3.619173

Clean encoded design, with measurements:
      T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie      U_Ie U_Je
830      -1  0.8333333  0.8333333 -1.0000000  0.00000000 0.9333333   -1
1052     -1  0.0000000 -0.1666667  0.0000000 -1.00000000 0.9333333   -1
2281     -1 -1.0000000 -0.1666667 -1.0000000  0.86666667 0.9333333   -1
2468     -1 -1.0000000 -0.1666667  0.8333333  0.06666667 0.9333333   -1
2590     -1 -0.3333333  0.8333333  0.8333333  0.93333333 0.9333333   -1
4354     -1 -1.0000000  0.8333333 -0.1666667  0.06666667 0.9333333   -1
4753     -1  0.8333333 -1.0000000  0.8333333  0.93333333 0.9333333   -1
6271     -1  0.0000000  0.1666667 -1.0000000  0.93333333 0.9333333   -1
6535     -1 -1.0000000  0.8333333  0.8333333 -1.00000000 0.9333333   -1
7140     -1 -0.8333333 -1.0000000 -1.0000000 -1.00000000 0.9333333   -1
10127    -1  0.8333333  0.0000000  0.8333333 -1.00000000 0.9333333   -1
10340    -1 -0.1666667 -1.0000000  0.8333333 -0.06666667 0.9333333   -1
10390    -1 -1.0000000 -1.0000000  0.0000000  0.93333333 0.9333333   -1
           RT_Ie RT_Je cost_mean
830   -0.3333333    -1  3.600336
1052  -0.3333333    -1  3.626134
2281  -0.3333333    -1  3.633162
2468  -0.3333333    -1  3.601021
2590  -0.3333333    -1  3.645914
4354  -0.3333333    -1  3.637961
4753  -0.3333333    -1  3.596485
6271  -0.3333333    -1  3.621032
6535  -0.3333333    -1  3.600340
7140  -0.3333333    -1  3.694229
10127 -0.3333333    -1  3.600572
10340 -0.3333333    -1  3.582985
10390 -0.3333333    -1  3.619173

Anova Formula in Python: cost_mean ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Anova Formula in R: cost_mean ~ I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + T1_J + 
    T2_I + T2_J + U1_I

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 57 10

Pruned data dimensions: [1] 13 10

Heteroscedasticity Test p-value: 0.224155698002
Heteroscedasticity transform NOT required.
Regression Step:            Df   Sum Sq   Mean Sq F value Pr(>F)
I(T1_J^2)    1 0.001999 0.0019987   2.044  0.226
I(T2_I^2)    1 0.000000 0.0000001   0.000  0.991
I(T2_J^2)    1 0.002204 0.0022040   2.254  0.208
I(U1_I^2)    1 0.000035 0.0000353   0.036  0.859
T1_J         1 0.000042 0.0000420   0.043  0.846
T2_I         1 0.000262 0.0002622   0.268  0.632
T2_J         1 0.000158 0.0001578   0.161  0.708
U1_I         1 0.001540 0.0015398   1.575  0.278
Residuals    4 0.003911 0.0009776               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
830    3.600336
1052   3.626134
2281   3.633162
2468   3.601021
2590   3.645914
4354   3.637961
4753   3.596485
6271   3.621032
6535   3.600340
7140   3.694229
10127  3.600572
10340  3.582985
10390  3.619173

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_J': 0.845959781001288, 'I(T2_I^2)': 0.9911503781708558, 'U1_I': 0.27780589537069367, 'T2_J': 0.7083764616745275, 'T2_I': 0.6318630462480352, 'I(T2_J^2)': 0.20763960241231064, 'I(U1_I^2)': 0.8585957905846532, 'I(T1_J^2)': 0.22598686775018081}
Ordered Keys: 
['I(T2_J^2)', 'I(T1_J^2)', 'U1_I', 'T2_I', 'T2_J', 'T1_J', 'I(U1_I^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 57 10

Pruned data dimensions: [1] 13 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + 
    I(U1_I^2) + T1_J + T2_I + T2_J + U1_I, tau = 0.15, data = structure(list(
    T1_I = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), T1_J = c(11, 
    6, 0, 0, 4, 0, 11, 6, 0, 1, 11, 5, 0), T2_I = c(11, 5, 5, 
    5, 11, 11, 0, 7, 11, 0, 6, 0, 0), T2_J = c(0, 6, 0, 11, 11, 
    5, 11, 0, 11, 0, 11, 11, 6), U1_I = c(15, 0, 28, 16, 29, 
    16, 29, 29, 0, 0, 0, 14, 29), U_I = c(29, 29, 29, 29, 29, 
    29, 29, 29, 29, 29, 29, 29, 29), U_J = c(0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2), RT_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0), cost_mean = c(3.600336, 3.626134, 3.633162, 3.601021, 
    3.645914, 3.637961, 3.596485, 3.621032, 3.60034, 3.694229, 
    3.600572, 3.582985, 3.619173)), .Names = c("T1_I", "T1_J", 
"T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
), row.names = 45:57, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.634670e+00 -1.797693e+308   3.692270e+00
I(T1_J^2)     1.100000e-04 -1.797693e+308  1.797693e+308
I(T2_I^2)    -3.900000e-04 -1.797693e+308  1.797693e+308
I(T2_J^2)    -3.100000e-04 -1.797693e+308  1.797693e+308
I(U1_I^2)     4.000000e-05 -1.797693e+308  1.797693e+308
T1_J         -2.540000e-03 -1.797693e+308  1.797693e+308
T2_I          3.670000e-03 -1.797693e+308  1.797693e+308
T2_J          8.200000e-04 -1.797693e+308  1.797693e+308
U1_I         -1.590000e-03 -1.797693e+308  1.797693e+308

Generating valid search space of size 31200 (does not spend evaluations)
Valid coordinates: 3120/31200
Tested coordinates: 5022
Valid coordinates: 6240/31200
Tested coordinates: 10032
Valid coordinates: 9360/31200
Tested coordinates: 15178
Valid coordinates: 12480/31200
Tested coordinates: 20125
Valid coordinates: 15600/31200
Tested coordinates: 25178
Valid coordinates: 18720/31200
Tested coordinates: 30314
Valid coordinates: 21840/31200
Tested coordinates: 35440
Valid coordinates: 24960/31200
Tested coordinates: 40516
Valid coordinates: 28080/31200
Tested coordinates: 45448
Valid coordinates: 31200/31200
Tested coordinates: 50546
Valid/Tested configurations: 31200/50546
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 182400      9

Pruned data dimensions: [1] 41607     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_J': 0.845959781001288, 'I(T2_I^2)': 0.9911503781708558, 'U1_I': 0.27780589537069367, 'T2_J': 0.7083764616745275, 'T2_I': 0.6318630462480352, 'I(T2_J^2)': 0.20763960241231064, 'I(U1_I^2)': 0.8585957905846532, 'I(T1_J^2)': 0.22598686775018081}
Ordered Keys: 
['I(T2_J^2)', 'I(T1_J^2)', 'U1_I', 'T2_I', 'T2_J', 'T1_J', 'I(U1_I^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_J': 0.845959781001288, 'I(T2_I^2)': 0.9911503781708558, 'U1_I': 0.27780589537069367, 'T2_J': 0.7083764616745275, 'T2_I': 0.6318630462480352, 'I(T2_J^2)': 0.20763960241231064, 'I(U1_I^2)': 0.8585957905846532, 'I(T1_J^2)': 0.22598686775018081}
Ordered Keys: 
['I(T2_J^2)', 'I(T1_J^2)', 'U1_I', 'T2_I', 'T2_J', 'T1_J', 'I(U1_I^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
7672    2    2    2    6   15   6   0    0    5

Best From Design: [0, 5, 0, 11, 14, 29, 0, 2, 0]
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753711
Design Best Point:
[0, 5, 0, 11, 14, 29, 0, 2, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.753723774962
Predicted Best Point:
[2, 2, 2, 6, 15, 6, 0, 0, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 2, 2, 6, 15, 6, 0, 0, 5]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 4 must be greater than the stride value 4; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		3356
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			5417
        Writes: 		579
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584475
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.753723774962
Slowdown (Predicted Best): 0.964399182029
Budget: 57/1000
Best point from design was better than predicted point
Current Best Point: 
[3, 6, 6, 7, 9, 29, 0, 3, 1]
Step 3
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 1298
Valid coordinates: 1600/8000
Tested coordinates: 2646
Valid coordinates: 2400/8000
Tested coordinates: 3910
Valid coordinates: 3200/8000
Tested coordinates: 5189
Valid coordinates: 4000/8000
Tested coordinates: 6516
Valid coordinates: 4800/8000
Tested coordinates: 7781
Valid coordinates: 5600/8000
Tested coordinates: 9018
Valid coordinates: 6400/8000
Tested coordinates: 10338
Valid coordinates: 7200/8000
Tested coordinates: 11629
Valid coordinates: 8000/8000
Tested coordinates: 12942
Valid/Tested configurations: 8000/12942
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 190400      9

Pruned data dimensions: [1] 49607     9

Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Clean Info:
One-Level Factors: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_J', 'T2_I', 'T2_J', 'U1_I']
Clean 2 Level Factors/Terms: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Encoded model used in optFederov: ~ I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + T1_Je + T2_Ie + T2_Je + U1_Ie
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 49607     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
3850     0    0    5    5   16  29   0    2    0
8936     0    0   11   11   29  29   0    2    0
10340    0    5    0   11   14  29   0    2    0
11962    0   11    0    0   29  29   0    2    0
19485    0    5   11    5    0  29   0    2    0
19741    0   11   11    0   14  29   0    2    0
21818    0    5    6    0   29  29   0    2    0
40756    0    0    0    0    0  29   0    2    0
40795    0    7    0    7   29  29   0    2    0
49589    0   11    5   11    0  29   0    2    0

D-Efficiency Approximation: [1] 0.3316354

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			878
        Writes: 		144
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.638493
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		402
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			904
        Writes: 		157
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.600352
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			893
        Writes: 		155
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.59744
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		368
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			837
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.638704
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		387
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			874
        Writes: 		142
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.60054
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		402
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			904
        Writes: 		157
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.638099
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	2
        Additions: 		346
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			805
        Writes: 		117
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.633298
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		389
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			893
        Writes: 		155
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.607595
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		368
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			837
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.600982
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
3850     0    0    5    5   16  29   0    2    0  3.638493
8936     0    0   11   11   29  29   0    2    0  3.600352
10340    0    5    0   11   14  29   0    2    0  3.582985
11962    0   11    0    0   29  29   0    2    0  3.597440
19485    0    5   11    5    0  29   0    2    0  3.638704
19741    0   11   11    0   14  29   0    2    0  3.600540
21818    0    5    6    0   29  29   0    2    0  3.638099
40756    0    0    0    0    0  29   0    2    0  3.633298
40795    0    7    0    7   29  29   0    2    0  3.607595
49589    0   11    5   11    0  29   0    2    0  3.600982

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
3850     0    0    5    5   16  29   0    2    0  3.638493
8936     0    0   11   11   29  29   0    2    0  3.600352
10340    0    5    0   11   14  29   0    2    0  3.582985
11962    0   11    0    0   29  29   0    2    0  3.597440
19485    0    5   11    5    0  29   0    2    0  3.638704
19741    0   11   11    0   14  29   0    2    0  3.600540
21818    0    5    6    0   29  29   0    2    0  3.638099
40756    0    0    0    0    0  29   0    2    0  3.633298
40795    0    7    0    7   29  29   0    2    0  3.607595
49589    0   11    5   11    0  29   0    2    0  3.600982

Clean encoded design, with measurements:
      T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie      U_Ie U_Je
3850     -1 -1.0000000 -0.1666667 -0.1666667  0.06666667 0.9333333   -1
8936     -1 -1.0000000  0.8333333  0.8333333  0.93333333 0.9333333   -1
10340    -1 -0.1666667 -1.0000000  0.8333333 -0.06666667 0.9333333   -1
11962    -1  0.8333333 -1.0000000 -1.0000000  0.93333333 0.9333333   -1
19485    -1 -0.1666667  0.8333333 -0.1666667 -1.00000000 0.9333333   -1
19741    -1  0.8333333  0.8333333 -1.0000000 -0.06666667 0.9333333   -1
21818    -1 -0.1666667  0.0000000 -1.0000000  0.93333333 0.9333333   -1
40756    -1 -1.0000000 -1.0000000 -1.0000000 -1.00000000 0.9333333   -1
40795    -1  0.1666667 -1.0000000  0.1666667  0.93333333 0.9333333   -1
49589    -1  0.8333333 -0.1666667  0.8333333 -1.00000000 0.9333333   -1
           RT_Ie RT_Je cost_mean
3850  -0.3333333    -1  3.638493
8936  -0.3333333    -1  3.600352
10340 -0.3333333    -1  3.582985
11962 -0.3333333    -1  3.597440
19485 -0.3333333    -1  3.638704
19741 -0.3333333    -1  3.600540
21818 -0.3333333    -1  3.638099
40756 -0.3333333    -1  3.633298
40795 -0.3333333    -1  3.607595
49589 -0.3333333    -1  3.600982

Anova Formula in Python: cost_mean ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Anova Formula in R: cost_mean ~ I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + T1_J + 
    T2_I + T2_J + U1_I

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 67 10

Pruned data dimensions: [1] 23 10

Heteroscedasticity Test p-value: 0.0757202052587
Heteroscedasticity transform NOT required.
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)  
I(T1_J^2)    1 0.003132 0.003132   7.494 0.0160 *
I(T2_I^2)    1 0.000013 0.000013   0.032 0.8607  
I(T2_J^2)    1 0.003547 0.003547   8.487 0.0113 *
I(U1_I^2)    1 0.000175 0.000175   0.418 0.5286  
T1_J         1 0.000016 0.000016   0.038 0.8486  
T2_I         1 0.000063 0.000063   0.150 0.7047  
T2_J         1 0.000002 0.000002   0.005 0.9469  
U1_I         1 0.001541 0.001541   3.687 0.0755 .
Residuals   14 0.005851 0.000418                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
3850   3.638493
8936   3.600352
10340  3.582985
11962  3.597440
19485  3.638704
19741  3.600540
21818  3.638099
40756  3.633298
40795  3.607595
49589  3.600982

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_J': 0.8485686023184459, 'I(T2_I^2)': 0.8606573151067236, 'U1_I': 0.07546117578959188, 'T2_J': 0.9468964929643611, 'T2_I': 0.7046738219231579, 'I(T2_J^2)': 0.01134084320108625, 'I(U1_I^2)': 0.5286027660374719, 'I(T1_J^2)': 0.016034440216556912}
Ordered Keys: 
['I(T2_J^2)', 'I(T1_J^2)', 'U1_I', 'I(U1_I^2)', 'T2_I', 'T1_J', 'I(T2_I^2)', 'T2_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_J + T2_I + T2_J + U1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 67 10

Pruned data dimensions: [1] 23 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + 
    I(U1_I^2) + T1_J + T2_I + T2_J + U1_I, tau = 0.15, data = structure(list(
    T1_I = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0), T1_J = c(11, 6, 0, 0, 4, 0, 11, 6, 
    0, 1, 11, 5, 0, 0, 0, 5, 11, 5, 11, 5, 0, 7, 11), T2_I = c(11, 
    5, 5, 5, 11, 11, 0, 7, 11, 0, 6, 0, 0, 5, 11, 0, 0, 11, 11, 
    6, 0, 0, 5), T2_J = c(0, 6, 0, 11, 11, 5, 11, 0, 11, 0, 11, 
    11, 6, 5, 11, 11, 0, 5, 0, 0, 0, 7, 11), U1_I = c(15, 0, 
    28, 16, 29, 16, 29, 29, 0, 0, 0, 14, 29, 16, 29, 14, 29, 
    0, 14, 29, 0, 29, 0), U_I = c(29, 29, 29, 29, 29, 29, 29, 
    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
    29), U_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0), cost_mean = c(3.600336, 3.626134, 3.633162, 3.601021, 
    3.645914, 3.637961, 3.596485, 3.621032, 3.60034, 3.694229, 
    3.600572, 3.582985, 3.619173, 3.638493, 3.600352, 3.582985, 
    3.59744, 3.638704, 3.60054, 3.638099, 3.633298, 3.607595, 
    3.600982)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 45:67, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.615220e+00 -1.797693e+308   3.633270e+00
I(T1_J^2)    -8.000000e-05  -4.800000e-04  1.797693e+308
I(T2_I^2)    -3.200000e-04  -6.600000e-04  1.797693e+308
I(T2_J^2)    -5.600000e-04  -9.100000e-04  1.797693e+308
I(U1_I^2)     2.000000e-05   0.000000e+00  1.797693e+308
T1_J         -6.400000e-04 -1.797693e+308   6.390000e-03
T2_I          4.170000e-03 -1.797693e+308   9.910000e-03
T2_J          4.170000e-03 -1.797693e+308   9.770000e-03
U1_I         -6.700000e-04 -1.797693e+308   4.700000e-04

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 3948
Valid coordinates: 4800/24000
Tested coordinates: 7879
Valid coordinates: 7200/24000
Tested coordinates: 11784
Valid coordinates: 9600/24000
Tested coordinates: 15741
Valid coordinates: 12000/24000
Tested coordinates: 19620
Valid coordinates: 14400/24000
Tested coordinates: 23499
Valid coordinates: 16800/24000
Tested coordinates: 27361
Valid coordinates: 19200/24000
Tested coordinates: 31271
Valid coordinates: 21600/24000
Tested coordinates: 35230
Valid coordinates: 24000/24000
Tested coordinates: 39104
Valid/Tested configurations: 24000/39104
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 214400      9

Pruned data dimensions: [1] 73607     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_J': 0.8485686023184459, 'I(T2_I^2)': 0.8606573151067236, 'U1_I': 0.07546117578959188, 'T2_J': 0.9468964929643611, 'T2_I': 0.7046738219231579, 'I(T2_J^2)': 0.01134084320108625, 'I(U1_I^2)': 0.5286027660374719, 'I(T1_J^2)': 0.016034440216556912}
Ordered Keys: 
['I(T2_J^2)', 'I(T1_J^2)', 'U1_I', 'I(U1_I^2)', 'T2_I', 'T1_J', 'I(T2_I^2)', 'T2_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_J': 0.8485686023184459, 'I(T2_I^2)': 0.8606573151067236, 'U1_I': 0.07546117578959188, 'T2_J': 0.9468964929643611, 'T2_I': 0.7046738219231579, 'I(T2_J^2)': 0.01134084320108625, 'I(U1_I^2)': 0.5286027660374719, 'I(T1_J^2)': 0.016034440216556912}
Ordered Keys: 
['I(T2_J^2)', 'I(T1_J^2)', 'U1_I', 'I(U1_I^2)', 'T2_I', 'T1_J', 'I(T2_I^2)', 'T2_J']
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
6506    5    3   11    5   23   7   0    3    3

Best From Design: [0, 5, 0, 11, 14, 29, 0, 2, 0]
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753711
Design Best Point:
[0, 5, 0, 11, 14, 29, 0, 2, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.753723774962
Predicted Best Point:
[5, 3, 11, 5, 23, 7, 0, 3, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[5, 3, 11, 5, 23, 7, 0, 3, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1935
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			3257
        Writes: 		379
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.514845
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 29, 'T1_I': 0, 'RT_I': 2, 'RT_J': 0}, 'quadratic': ['T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.753723774962
Slowdown (Predicted Best): 0.739389710481
Budget: 67/1000
Current Best Point: 
[3, 6, 6, 7, 9, 29, 0, 3, 1]
Final Best Point: 
[3, 6, 6, 7, 9, 29, 0, 3, 1]
Ending DLMT
Best Point: [3, 6, 6, 7, 9, 29, 0, 3, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.49030506086
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.49030506086
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [3, 6, 6, 7, 9, 29, 0, 3, 1]={'T1_I': 8, 'T1_J': 64, 'U_J': 1, 'U_I': 30, 'T2_I': 64, 'T2_J': 128, 'U1_I': 10, 'RT_I': 8, 'RT_J': 2}, cost=3.189757e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-7476.06, runs=71
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 8
 RT_J = 2
 T1_I = 8
 T1_J = 64
 T2_I = 64
 T2_J = 128
 U1_I = 10
 U_I = 30
 U_J = 1
 cost_mean = 3.189757
 points = 71
 speedup = 1.49030506086
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1309
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2553
        Writes: 		315
        Comparisons:		19
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
