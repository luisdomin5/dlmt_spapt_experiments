
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 82694
Valid coordinates: 3520/17600
Tested coordinates: 163066
Valid coordinates: 5280/17600
Tested coordinates: 249239
Valid coordinates: 7040/17600
Tested coordinates: 336469
Valid coordinates: 8800/17600
Tested coordinates: 418582
Valid coordinates: 10560/17600
Tested coordinates: 503010
Valid coordinates: 12320/17600
Tested coordinates: 588045
Valid coordinates: 14080/17600
Tested coordinates: 673612
Valid coordinates: 15840/17600
Tested coordinates: 757492
Valid coordinates: 17600/17600
Tested coordinates: 844183
Valid/Tested configurations: 17600/844183
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
16      11    6    0   11    0   0  11    5    1
64      11    4    0    0   23  14   0    0    5
1021     1    0    5    4   29   0  28    2    5
1561     1    4    0    5   29   0  28    0    0
2299     0    2    6   11   14   0   0    1    0
3253    11    7   11   10   27  28   0    3    0
4530     0    7    4    8    0  10   0    3    3
4864     7    2    9    0    0   0  29    2    1
4970     6    0   11   11   23   0  15    5    0
5873     4   11   10    0   28   1   0    5    2
7028     6    6    6    6   19   0  13    2    5
7058     0    0    3    1   14  29   0    5    2
7299    11   11   11   11   15   0  27    0    4
8750     0    4    9    6   15   0  29    5    0
9971     6    6    7   11   29  16   0    0    3
9979     1   11    6    0    4   0  15    0    0
10534   11    0   11    6   13  14   0    2    0
10572    3   11    0   11   11  25   0    2    0
10901    6    5   11    6    2  28   0    0    5
12252    0    0   11   11    0   0   6    1    5
12577    0    7   11    0   17   0  12    2    2
13435   11    1    0    5   10   0   1    0    2

D-Efficiency Approximation: [1] 0.2205296

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		6346
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10004
        Writes: 		1021
        Comparisons:		14
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.520673
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		6982
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10715
        Writes: 		1119
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.777611
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		3737
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6364
        Writes: 		681
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.812363
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		322
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			718
        Writes: 		108
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.671986
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		63
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			165
        Writes: 		46
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.574624
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		435
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			979
        Writes: 		166
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.513383
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2255
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3741
        Writes: 		408
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.336257
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1963
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3397
        Writes: 		359
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.838581
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		7432
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11358
        Writes: 		1173
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.027861
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2113
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3674
        Writes: 		416
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.411493
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2824
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4837
        Writes: 		519
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.011741
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3804
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6495
        Writes: 		708
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.674283
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		439
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			990
        Writes: 		124
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.644737
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		13755
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20589
        Writes: 		2091
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.346182
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		2095
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3432
        Writes: 		401
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.480417
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		180
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			408
        Writes: 		57
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58251
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		236
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			542
        Writes: 		96
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.621266
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		344
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			780
        Writes: 		127
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.716595
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		13312
        Multiplications: 	3960
        Divisions: 		0
        Logical: 		0
        Reads: 			19962
        Writes: 		2042
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.14989
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1290
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2490
        Writes: 		267
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.967653
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1082
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1933
        Writes: 		227
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.336737
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		95
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			227
        Writes: 		45
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.97802
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
16      11    6    0   11    0   0  11    5    1  5.520673
64      11    4    0    0   23  14   0    0    5  3.777611
1021     1    0    5    4   29   0  28    2    5  4.812363
1561     1    4    0    5   29   0  28    0    0  4.671986
2299     0    2    6   11   14   0   0    1    0  3.574624
3253    11    7   11   10   27  28   0    3    0  3.513383
4530     0    7    4    8    0  10   0    3    3  3.336257
4864     7    2    9    0    0   0  29    2    1  3.838581
4970     6    0   11   11   23   0  15    5    0  6.027861
5873     4   11   10    0   28   1   0    5    2  3.411493
7028     6    6    6    6   19   0  13    2    5  4.011741
7058     0    0    3    1   14  29   0    5    2  4.674283
7299    11   11   11   11   15   0  27    0    4  4.644737
8750     0    4    9    6   15   0  29    5    0  6.346182
9971     6    6    7   11   29  16   0    0    3  3.480417
9979     1   11    6    0    4   0  15    0    0  4.582510
10534   11    0   11    6   13  14   0    2    0  3.621266
10572    3   11    0   11   11  25   0    2    0  3.716595
10901    6    5   11    6    2  28   0    0    5  9.149890
12252    0    0   11   11    0   0   6    1    5  3.967653
12577    0    7   11    0   17   0  12    2    2  3.336737
13435   11    1    0    5   10   0   1    0    2  5.978020

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
16      11    6    0   11    0   0  11    5    1  5.520673
64      11    4    0    0   23  14   0    0    5  3.777611
1021     1    0    5    4   29   0  28    2    5  4.812363
1561     1    4    0    5   29   0  28    0    0  4.671986
2299     0    2    6   11   14   0   0    1    0  3.574624
3253    11    7   11   10   27  28   0    3    0  3.513383
4530     0    7    4    8    0  10   0    3    3  3.336257
4864     7    2    9    0    0   0  29    2    1  3.838581
4970     6    0   11   11   23   0  15    5    0  6.027861
5873     4   11   10    0   28   1   0    5    2  3.411493
7028     6    6    6    6   19   0  13    2    5  4.011741
7058     0    0    3    1   14  29   0    5    2  4.674283
7299    11   11   11   11   15   0  27    0    4  4.644737
8750     0    4    9    6   15   0  29    5    0  6.346182
9971     6    6    7   11   29  16   0    0    3  3.480417
9979     1   11    6    0    4   0  15    0    0  4.582510
10534   11    0   11    6   13  14   0    2    0  3.621266
10572    3   11    0   11   11  25   0    2    0  3.716595
10901    6    5   11    6    2  28   0    0    5  9.149890
12252    0    0   11   11    0   0   6    1    5  3.967653
12577    0    7   11    0   17   0  12    2    2  3.336737
13435   11    1    0    5   10   0   1    0    2  5.978020

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
16     0.8333333  0.0000000 -1.0000000  0.8333333 -1.00000000 -1.00000000
64     0.8333333 -0.3333333 -1.0000000 -1.0000000  0.53333333 -0.06666667
1021  -0.8333333 -1.0000000 -0.1666667 -0.3333333  0.93333333 -1.00000000
1561  -0.8333333 -0.3333333 -1.0000000 -0.1666667  0.93333333 -1.00000000
2299  -1.0000000 -0.6666667  0.0000000  0.8333333 -0.06666667 -1.00000000
3253   0.8333333  0.1666667  0.8333333  0.6666667  0.80000000  0.86666667
4530  -1.0000000  0.1666667 -0.3333333  0.3333333 -1.00000000 -0.33333333
4864   0.1666667 -0.6666667  0.5000000 -1.0000000 -1.00000000 -1.00000000
4970   0.0000000 -1.0000000  0.8333333  0.8333333  0.53333333 -1.00000000
5873  -0.3333333  0.8333333  0.6666667 -1.0000000  0.86666667 -0.93333333
7028   0.0000000  0.0000000  0.0000000  0.0000000  0.26666667 -1.00000000
7058  -1.0000000 -1.0000000 -0.5000000 -0.8333333 -0.06666667  0.93333333
7299   0.8333333  0.8333333  0.8333333  0.8333333  0.00000000 -1.00000000
8750  -1.0000000 -0.3333333  0.5000000  0.0000000  0.00000000 -1.00000000
9971   0.0000000  0.0000000  0.1666667  0.8333333  0.93333333  0.06666667
9979  -0.8333333  0.8333333  0.0000000 -1.0000000 -0.73333333 -1.00000000
10534  0.8333333 -1.0000000  0.8333333  0.0000000 -0.13333333 -0.06666667
10572 -0.5000000  0.8333333 -1.0000000  0.8333333 -0.26666667  0.66666667
10901  0.0000000 -0.1666667  0.8333333  0.0000000 -0.86666667  0.86666667
12252 -1.0000000 -1.0000000  0.8333333  0.8333333 -1.00000000 -1.00000000
12577 -1.0000000  0.1666667  0.8333333 -1.0000000  0.13333333 -1.00000000
13435  0.8333333 -0.8333333 -1.0000000 -0.1666667 -0.33333333 -1.00000000
            U_Je      RT_Ie      RT_Je cost_mean
16    -0.2666667  0.6666667 -0.6666667  5.520673
64    -1.0000000 -1.0000000  0.6666667  3.777611
1021   0.8666667 -0.3333333  0.6666667  4.812363
1561   0.8666667 -1.0000000 -1.0000000  4.671986
2299  -1.0000000 -0.6666667 -1.0000000  3.574624
3253  -1.0000000  0.0000000 -1.0000000  3.513383
4530  -1.0000000  0.0000000  0.0000000  3.336257
4864   0.9333333 -0.3333333 -0.6666667  3.838581
4970   0.0000000  0.6666667 -1.0000000  6.027861
5873  -1.0000000  0.6666667 -0.3333333  3.411493
7028  -0.1333333 -0.3333333  0.6666667  4.011741
7058  -1.0000000  0.6666667 -0.3333333  4.674283
7299   0.8000000 -1.0000000  0.3333333  4.644737
8750   0.9333333  0.6666667 -1.0000000  6.346182
9971  -1.0000000 -1.0000000  0.0000000  3.480417
9979   0.0000000 -1.0000000 -1.0000000  4.582510
10534 -1.0000000 -0.3333333 -1.0000000  3.621266
10572 -1.0000000 -0.3333333 -1.0000000  3.716595
10901 -1.0000000 -1.0000000  0.6666667  9.149890
12252 -0.6000000 -0.6666667  0.6666667  3.967653
12577 -0.2000000 -0.3333333 -0.3333333  3.336737
13435 -0.9333333 -1.0000000 -0.3333333  5.978020

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.415867738232
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  0.104   0.104   0.059 0.8243  
I(T1_J^2)    1  1.966   1.966   1.105 0.3703  
I(T2_I^2)    1  0.517   0.517   0.290 0.6274  
I(T2_J^2)    1  0.087   0.087   0.049 0.8389  
I(U1_I^2)    1  2.430   2.430   1.366 0.3269  
I(U_I^2)     1  1.548   1.548   0.870 0.4197  
I(U_J^2)     1  3.166   3.166   1.780 0.2744  
I(RT_I^2)    1  0.862   0.862   0.484 0.5365  
I(RT_J^2)    1  2.397   2.397   1.347 0.3297  
T1_I         1  2.537   2.537   1.426 0.3182  
T1_J         1  0.206   0.206   0.116 0.7558  
T2_I         1  2.367   2.367   1.330 0.3323  
T2_J         1  3.727   3.727   2.095 0.2436  
U1_I         1  0.027   0.027   0.015 0.9091  
U_I          1  2.600   2.600   1.462 0.3132  
U_J          1  0.003   0.003   0.002 0.9680  
RT_I         1 10.152  10.152   5.707 0.0968 .
RT_J         1  0.327   0.327   0.184 0.6971  
Residuals    3  5.336   1.779                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
16     5.520673
64     3.777611
1021   4.812363
1561   4.671986
2299   3.574624
3253   3.513383
4530   3.336257
4864   3.838581
4970   6.027861
5873   3.411493
7028   4.011741
7058   4.674283
7299   4.644737
8750   6.346182
9971   3.480417
9979   4.582510
10534  3.621266
10572  3.716595
10901  9.149890
12252  3.967653
12577  3.336737
13435  5.978020

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.32971822912637544, 'T1_J': 0.7558420544874909, 'T2_J': 0.24357889754976358, 'U_J': 0.9680358849251249, 'U_I': 0.31323811419918046, 'I(T2_I^2)': 0.6273691644653687, 'T2_I': 0.33228126741113967, 'U1_I': 0.9090849371267988, 'I(U_I^2)': 0.4197248263359956, 'I(RT_I^2)': 0.5365433158787248, 'I(T2_J^2)': 0.8389035316930245, 'I(U1_I^2)': 0.3268903518144726, 'RT_I': 0.09683512634047371, 'I(T1_I^2)': 0.824328672813378, 'I(T1_J^2)': 0.3703012579843646, 'I(U_J^2)': 0.2744271731074694, 'RT_J': 0.6970610808736847, 'T1_I': 0.31817757710018885}
Ordered Keys: 
['RT_I', 'T2_J', 'I(U_J^2)', 'U_I', 'T1_I', 'I(U1_I^2)', 'I(RT_J^2)', 'T2_I', 'I(T1_J^2)', 'I(U_I^2)', 'I(RT_I^2)', 'I(T2_I^2)', 'RT_J', 'T1_J', 'I(T1_I^2)', 'I(T2_J^2)', 'U1_I', 'U_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.15, data = structure(list(T1_I = c(11, 
11, 1, 1, 0, 11, 0, 7, 6, 4, 6, 0, 11, 0, 6, 1, 11, 3, 6, 0, 
0, 11), T1_J = c(6, 4, 0, 4, 2, 7, 7, 2, 0, 11, 6, 0, 11, 4, 
6, 11, 0, 11, 5, 0, 7, 1), T2_I = c(0, 0, 5, 0, 6, 11, 4, 9, 
11, 10, 6, 3, 11, 9, 7, 6, 11, 0, 11, 11, 11, 0), T2_J = c(11, 
0, 4, 5, 11, 10, 8, 0, 11, 0, 6, 1, 11, 6, 11, 0, 6, 11, 6, 11, 
0, 5), U1_I = c(0, 23, 29, 29, 14, 27, 0, 0, 23, 28, 19, 14, 
15, 15, 29, 4, 13, 11, 2, 0, 17, 10), U_I = c(0, 14, 0, 0, 0, 
28, 10, 0, 0, 1, 0, 29, 0, 0, 16, 0, 14, 25, 28, 0, 0, 0), U_J = c(11, 
0, 28, 28, 0, 0, 0, 29, 15, 0, 13, 0, 27, 29, 0, 15, 0, 0, 0, 
6, 12, 1), RT_I = c(5, 0, 2, 0, 1, 3, 3, 2, 5, 5, 2, 5, 0, 5, 
0, 0, 2, 2, 0, 1, 2, 0), RT_J = c(1, 5, 5, 0, 0, 0, 3, 1, 0, 
2, 5, 2, 4, 0, 3, 0, 0, 0, 5, 5, 2, 2), cost_mean = c(5.520673, 
3.777611, 4.812363, 4.671986, 3.574624, 3.513383, 3.336257, 3.838581, 
6.027861, 3.411493, 4.011741, 4.674283, 4.644737, 6.346182, 3.480417, 
4.58251, 3.621266, 3.716595, 9.14989, 3.967653, 3.336737, 5.97802
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("16", "64", 
"1021", "1561", "2299", "3253", "4530", "4864", "4970", "5873", 
"7028", "7058", "7299", "8750", "9971", "9979", "10534", "10572", 
"10901", "12252", "12577", "13435"), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.971400e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -2.908000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)    -3.874000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)     2.769000e-02 -1.797693e+308  1.797693e+308
I(T2_J^2)    -3.303000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)    -3.740000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)      4.320000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)      1.060000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     3.501500e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     4.516000e-02 -1.797693e+308  1.797693e+308
T1_I          3.093600e-01 -1.797693e+308  1.797693e+308
T1_J          4.356800e-01 -1.797693e+308  1.797693e+308
T2_I         -2.380500e-01 -1.797693e+308  1.797693e+308
T2_J          3.751600e-01 -1.797693e+308  1.797693e+308
U1_I          2.483000e-02 -1.797693e+308  1.797693e+308
U_I          -1.008400e-01 -1.797693e+308  1.797693e+308
U_J          -4.134000e-02 -1.797693e+308  1.797693e+308
RT_I         -1.777040e+00 -1.797693e+308  1.797693e+308
RT_J         -2.716100e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 256787
Valid coordinates: 10560/52800
Tested coordinates: 511570
Valid coordinates: 15840/52800
Tested coordinates: 768844
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1017610
Valid coordinates: 26400/52800
Tested coordinates: 1271005
Valid coordinates: 31680/52800
Tested coordinates: 1520219
Valid coordinates: 36960/52800
Tested coordinates: 1773452
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2022903
Valid coordinates: 47520/52800
Tested coordinates: 2279435
Valid coordinates: 52800/52800
Tested coordinates: 2535553
Valid/Tested configurations: 52800/2535553
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.32971822912637544, 'T1_J': 0.7558420544874909, 'T2_J': 0.24357889754976358, 'U_J': 0.9680358849251249, 'U_I': 0.31323811419918046, 'I(T2_I^2)': 0.6273691644653687, 'T2_I': 0.33228126741113967, 'U1_I': 0.9090849371267988, 'I(U_I^2)': 0.4197248263359956, 'I(RT_I^2)': 0.5365433158787248, 'I(T2_J^2)': 0.8389035316930245, 'I(U1_I^2)': 0.3268903518144726, 'RT_I': 0.09683512634047371, 'I(T1_I^2)': 0.824328672813378, 'I(T1_J^2)': 0.3703012579843646, 'I(U_J^2)': 0.2744271731074694, 'RT_J': 0.6970610808736847, 'T1_I': 0.31817757710018885}
Ordered Keys: 
['RT_I', 'T2_J', 'I(U_J^2)', 'U_I', 'T1_I', 'I(U1_I^2)', 'I(RT_J^2)', 'T2_I', 'I(T1_J^2)', 'I(U_I^2)', 'I(RT_I^2)', 'I(T2_I^2)', 'RT_J', 'T1_J', 'I(T1_I^2)', 'I(T2_J^2)', 'U1_I', 'U_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.32971822912637544, 'T1_J': 0.7558420544874909, 'T2_J': 0.24357889754976358, 'U_J': 0.9680358849251249, 'U_I': 0.31323811419918046, 'I(T2_I^2)': 0.6273691644653687, 'T2_I': 0.33228126741113967, 'U1_I': 0.9090849371267988, 'I(U_I^2)': 0.4197248263359956, 'I(RT_I^2)': 0.5365433158787248, 'I(T2_J^2)': 0.8389035316930245, 'I(U1_I^2)': 0.3268903518144726, 'RT_I': 0.09683512634047371, 'I(T1_I^2)': 0.824328672813378, 'I(T1_J^2)': 0.3703012579843646, 'I(U_J^2)': 0.2744271731074694, 'RT_J': 0.6970610808736847, 'T1_I': 0.31817757710018885}
Ordered Keys: 
['RT_I', 'T2_J', 'I(U_J^2)', 'U_I', 'T1_I', 'I(U1_I^2)', 'I(RT_J^2)', 'T2_I', 'I(T1_J^2)', 'I(U_I^2)', 'I(RT_I^2)', 'I(T2_I^2)', 'RT_J', 'T1_J', 'I(T1_I^2)', 'I(T2_J^2)', 'U1_I', 'U_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
48728    0   11    6   11   29  13   0    3    4

Best From Design: [0, 7, 4, 8, 0, 10, 0, 3, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.755473
Baseline Point:
4.755473
Design Best Point:
[0, 7, 4, 8, 0, 10, 0, 3, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.701561548136
Predicted Best Point:
[0, 11, 6, 11, 29, 13, 0, 3, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 11, 6, 11, 29, 13, 0, 3, 4]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		5087
        Multiplications: 	1564
        Divisions: 		0
        Logical: 		0
        Reads: 			8013
        Writes: 		859
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.663437
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.701561548136
Slowdown (Predicted Best): 0.770362275214
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.336257
Current Best Point: 
[0, 7, 4, 8, 0, 10, 0, 3, 3]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 82658
Valid coordinates: 3520/17600
Tested coordinates: 165484
Valid coordinates: 5280/17600
Tested coordinates: 249374
Valid coordinates: 7040/17600
Tested coordinates: 330386
Valid coordinates: 8800/17600
Tested coordinates: 412480
Valid coordinates: 10560/17600
Tested coordinates: 500489
Valid coordinates: 12320/17600
Tested coordinates: 582766
Valid coordinates: 14080/17600
Tested coordinates: 665930
Valid coordinates: 15840/17600
Tested coordinates: 750175
Valid coordinates: 17600/17600
Tested coordinates: 831482
Valid/Tested configurations: 17600/831482
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
392     11    6   11   10   10  29   0    0    3
5506     0    7    3    0    0   0  29    5    0
10321    9    0    0    4    0   0  29    2    2
11328   11    1    0   11   29   0   1    2    5
22092    2    5    0    7   16   0  12    0    5
28801    0    6    0    7    2  11   0    2    2
32006    2    0    0   11   18  28   0    5    2
32317    5    6    5   11    0  23   0    2    0
34138   11    6   11    0   29   0  15    4    2
37541    2   11   11   11    0   4   0    0    0
39969    0    0    6    8   26   0  28    0    0
44380    5    7    7    0   17   0   0    1    3
47848    7   10   11   10   14   0  29    2    5
48728    0   11    6   11   29  13   0    3    4
49100   11    0   11    1   10  16   0    0    5
49914    6    0    8    6    0   0  15    5    1
55448   11    6    0    6   21   0   0    5    0
64848    0   11    5    0    1  29   0    0    5
68247    3    1   11    5   29  29   0    3    0
70965   11   11    0    0   13   0  16    2    0
81524    6    5    0    0   28  20   0    0    1
82715    0    0   11    0    6   0   9    2    0

D-Efficiency Approximation: [1] 0.228274

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		3594
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5753
        Writes: 		627
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 8.066413
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		13729
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20536
        Writes: 		2069
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.578639
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		2080
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3590
        Writes: 		377
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.546103
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2120
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3671
        Writes: 		413
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.768188
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		452
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1019
        Writes: 		129
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.587797
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1010
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1845
        Writes: 		222
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.413124
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3747
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6401
        Writes: 		701
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581291
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		317
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			726
        Writes: 		113
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.850518
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		4622
        Multiplications: 	1428
        Divisions: 		0
        Logical: 		0
        Reads: 			7297
        Writes: 		773
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.213894
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		81
        Multiplications: 	24
        Divisions: 		0
        Logical: 		0
        Reads: 			193
        Writes: 		37
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.677389
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		316
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			705
        Writes: 		103
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.579194
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		312
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			658
        Writes: 		99
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.496865
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		3782
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6434
        Writes: 		676
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.96028
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		7875
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			12013
        Writes: 		1240
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.528236
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		8151
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12637
        Writes: 		1283
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.790733
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		334
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			765
        Writes: 		109
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.45144
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		13755
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20601
        Writes: 		2102
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.283223
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		450
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			1012
        Writes: 		173
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.643389
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1095
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1911
        Writes: 		219
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.655476
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		765
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1497
        Writes: 		206
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.505841
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		646
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1175
        Writes: 		138
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.647367
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
392     11    6   11   10   10  29   0    0    3  8.066413
5506     0    7    3    0    0   0  29    5    0  4.578639
10321    9    0    0    4    0   0  29    2    2  3.546103
11328   11    1    0   11   29   0   1    2    5  4.768188
22092    2    5    0    7   16   0  12    0    5  4.587797
28801    0    6    0    7    2  11   0    2    2  3.413124
32006    2    0    0   11   18  28   0    5    2  4.581291
32317    5    6    5   11    0  23   0    2    0  3.850518
34138   11    6   11    0   29   0  15    4    2  3.213894
37541    2   11   11   11    0   4   0    0    0  4.677389
39969    0    0    6    8   26   0  28    0    0  4.579194
44380    5    7    7    0   17   0   0    1    3  3.496865
47848    7   10   11   10   14   0  29    2    5  3.960280
48728    0   11    6   11   29  13   0    3    4  3.663437
49100   11    0   11    1   10  16   0    0    5  4.528236
49914    6    0    8    6    0   0  15    5    1  5.790733
55448   11    6    0    6   21   0   0    5    0  5.451440
64848    0   11    5    0    1  29   0    0    5  9.283223
68247    3    1   11    5   29  29   0    3    0  3.643389
70965   11   11    0    0   13   0  16    2    0  3.655476
81524    6    5    0    0   28  20   0    0    1  3.505841
82715    0    0   11    0    6   0   9    2    0  3.647367

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
392     11    6   11   10   10  29   0    0    3  8.066413
5506     0    7    3    0    0   0  29    5    0  4.578639
10321    9    0    0    4    0   0  29    2    2  3.546103
11328   11    1    0   11   29   0   1    2    5  4.768188
22092    2    5    0    7   16   0  12    0    5  4.587797
28801    0    6    0    7    2  11   0    2    2  3.413124
32006    2    0    0   11   18  28   0    5    2  4.581291
32317    5    6    5   11    0  23   0    2    0  3.850518
34138   11    6   11    0   29   0  15    4    2  3.213894
37541    2   11   11   11    0   4   0    0    0  4.677389
39969    0    0    6    8   26   0  28    0    0  4.579194
44380    5    7    7    0   17   0   0    1    3  3.496865
47848    7   10   11   10   14   0  29    2    5  3.960280
48728    0   11    6   11   29  13   0    3    4  3.663437
49100   11    0   11    1   10  16   0    0    5  4.528236
49914    6    0    8    6    0   0  15    5    1  5.790733
55448   11    6    0    6   21   0   0    5    0  5.451440
64848    0   11    5    0    1  29   0    0    5  9.283223
68247    3    1   11    5   29  29   0    3    0  3.643389
70965   11   11    0    0   13   0  16    2    0  3.655476
81524    6    5    0    0   28  20   0    0    1  3.505841
82715    0    0   11    0    6   0   9    2    0  3.647367

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
392    0.8333333  0.0000000  0.8333333  0.6666667 -0.33333333  0.93333333
5506  -1.0000000  0.1666667 -0.5000000 -1.0000000 -1.00000000 -1.00000000
10321  0.5000000 -1.0000000 -1.0000000 -0.3333333 -1.00000000 -1.00000000
11328  0.8333333 -0.8333333 -1.0000000  0.8333333  0.93333333 -1.00000000
22092 -0.6666667 -0.1666667 -1.0000000  0.1666667  0.06666667 -1.00000000
28801 -1.0000000  0.0000000 -1.0000000  0.1666667 -0.86666667 -0.26666667
32006 -0.6666667 -1.0000000 -1.0000000  0.8333333  0.20000000  0.86666667
32317 -0.1666667  0.0000000 -0.1666667  0.8333333 -1.00000000  0.53333333
34138  0.8333333  0.0000000  0.8333333 -1.0000000  0.93333333 -1.00000000
37541 -0.6666667  0.8333333  0.8333333  0.8333333 -1.00000000 -0.73333333
39969 -1.0000000 -1.0000000  0.0000000  0.3333333  0.73333333 -1.00000000
44380 -0.1666667  0.1666667  0.1666667 -1.0000000  0.13333333 -1.00000000
47848  0.1666667  0.6666667  0.8333333  0.6666667 -0.06666667 -1.00000000
48728 -1.0000000  0.8333333  0.0000000  0.8333333  0.93333333 -0.13333333
49100  0.8333333 -1.0000000  0.8333333 -0.8333333 -0.33333333  0.06666667
49914  0.0000000 -1.0000000  0.3333333  0.0000000 -1.00000000 -1.00000000
55448  0.8333333  0.0000000 -1.0000000  0.0000000  0.40000000 -1.00000000
64848 -1.0000000  0.8333333 -0.1666667 -1.0000000 -0.93333333  0.93333333
68247 -0.5000000 -0.8333333  0.8333333 -0.1666667  0.93333333  0.93333333
70965  0.8333333  0.8333333 -1.0000000 -1.0000000 -0.13333333 -1.00000000
81524  0.0000000 -0.1666667 -1.0000000 -1.0000000  0.86666667  0.33333333
82715 -1.0000000 -1.0000000  0.8333333 -1.0000000 -0.60000000 -1.00000000
             U_Je      RT_Ie      RT_Je cost_mean
392   -1.00000000 -1.0000000  0.0000000  8.066413
5506   0.93333333  0.6666667 -1.0000000  4.578639
10321  0.93333333 -0.3333333 -0.3333333  3.546103
11328 -0.93333333 -0.3333333  0.6666667  4.768188
22092 -0.20000000 -1.0000000  0.6666667  4.587797
28801 -1.00000000 -0.3333333 -0.3333333  3.413124
32006 -1.00000000  0.6666667 -0.3333333  4.581291
32317 -1.00000000 -0.3333333 -1.0000000  3.850518
34138  0.00000000  0.3333333 -0.3333333  3.213894
37541 -1.00000000 -1.0000000 -1.0000000  4.677389
39969  0.86666667 -1.0000000 -1.0000000  4.579194
44380 -1.00000000 -0.6666667  0.0000000  3.496865
47848  0.93333333 -0.3333333  0.6666667  3.960280
48728 -1.00000000  0.0000000  0.3333333  3.663437
49100 -1.00000000 -1.0000000  0.6666667  4.528236
49914  0.00000000  0.6666667 -0.6666667  5.790733
55448 -1.00000000  0.6666667 -1.0000000  5.451440
64848 -1.00000000 -1.0000000  0.6666667  9.283223
68247 -1.00000000  0.0000000 -1.0000000  3.643389
70965  0.06666667 -0.3333333 -1.0000000  3.655476
81524 -1.00000000 -1.0000000 -0.6666667  3.505841
82715 -0.40000000 -0.3333333 -1.0000000  3.647367

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.0125974395389
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1    11    6    0   11    0   0  11    5    1  5.520673
2    11    4    0    0   23  14   0    0    5  3.777611
3     1    0    5    4   29   0  28    2    5  4.812363
4     1    4    0    5   29   0  28    0    0  4.671986
5     0    2    6   11   14   0   0    1    0  3.574624
6    11    7   11   10   27  28   0    3    0  3.513383
7     0    7    4    8    0  10   0    3    3  3.336257
8     7    2    9    0    0   0  29    2    1  3.838581
9     6    0   11   11   23   0  15    5    0  6.027861
10    4   11   10    0   28   1   0    5    2  3.411493
11    6    6    6    6   19   0  13    2    5  4.011741
12    0    0    3    1   14  29   0    5    2  4.674283
13   11   11   11   11   15   0  27    0    4  4.644737
14    0    4    9    6   15   0  29    5    0  6.346182
15    6    6    7   11   29  16   0    0    3  3.480417
16    1   11    6    0    4   0  15    0    0  4.582510
17   11    0   11    6   13  14   0    2    0  3.621266
18    3   11    0   11   11  25   0    2    0  3.716595
19    6    5   11    6    2  28   0    0    5  9.149890
20    0    0   11   11    0   0   6    1    5  3.967653
21    0    7   11    0   17   0  12    2    2  3.336737
22   11    1    0    5   10   0   1    0    2  5.978020
23   11    6   11   10   10  29   0    0    3  8.066413
24    0    7    3    0    0   0  29    5    0  4.578639
25    9    0    0    4    0   0  29    2    2  3.546103
26   11    1    0   11   29   0   1    2    5  4.768188
27    2    5    0    7   16   0  12    0    5  4.587797
28    0    6    0    7    2  11   0    2    2  3.413124
29    2    0    0   11   18  28   0    5    2  4.581291
30    5    6    5   11    0  23   0    2    0  3.850518
31   11    6   11    0   29   0  15    4    2  3.213894
32    2   11   11   11    0   4   0    0    0  4.677389
33    0    0    6    8   26   0  28    0    0  4.579194
34    5    7    7    0   17   0   0    1    3  3.496865
35    7   10   11   10   14   0  29    2    5  3.960280
36    0   11    6   11   29  13   0    3    4  3.663437
37   11    0   11    1   10  16   0    0    5  4.528236
38    6    0    8    6    0   0  15    5    1  5.790733
39   11    6    0    6   21   0   0    5    0  5.451440
40    0   11    5    0    1  29   0    0    5  9.283223
41    3    1   11    5   29  29   0    3    0  3.643389
42   11   11    0    0   13   0  16    2    0  3.655476
43    6    5    0    0   28  20   0    0    1  3.505841
44    0    0   11    0    6   0   9    2    0  3.647367

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 1.970e-06 1.970e-06   0.623  0.43747    
I(T1_J^2)    1 4.480e-06 4.480e-06   1.417  0.24508    
I(T2_I^2)    1 1.880e-06 1.880e-06   0.596  0.44723    
I(T2_J^2)    1 8.030e-06 8.030e-06   2.542  0.12343    
I(U1_I^2)    1 3.160e-05 3.160e-05  10.002  0.00407 ** 
I(U_I^2)     1 8.320e-06 8.320e-06   2.633  0.11721    
I(U_J^2)     1 3.304e-05 3.304e-05  10.458  0.00342 ** 
I(RT_I^2)    1 1.055e-05 1.055e-05   3.338  0.07964 .  
I(RT_J^2)    1 3.792e-05 3.792e-05  12.003  0.00193 ** 
T1_I         1 6.000e-07 6.000e-07   0.191  0.66620    
T1_J         1 7.520e-06 7.520e-06   2.380  0.13549    
T2_I         1 1.200e-07 1.200e-07   0.038  0.84711    
T2_J         1 1.484e-05 1.484e-05   4.699  0.03991 *  
U1_I         1 8.400e-07 8.400e-07   0.265  0.61097    
U_I          1 3.883e-05 3.883e-05  12.292  0.00174 ** 
U_J          1 0.000e+00 0.000e+00   0.000  0.98308    
RT_I         1 1.357e-04 1.357e-04  42.961 7.25e-07 ***
RT_J         1 2.226e-05 2.226e-05   7.045  0.01362 *  
Residuals   25 7.898e-05 3.160e-06                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
392    8.066413
5506   4.578639
10321  3.546103
11328  4.768188
22092  4.587797
28801  3.413124
32006  4.581291
32317  3.850518
34138  3.213894
37541  4.677389
39969  4.579194
44380  3.496865
47848  3.960280
48728  3.663437
49100  4.528236
49914  5.790733
55448  5.451440
64848  9.283223
68247  3.643389
70965  3.655476
81524  3.505841
82715  3.647367

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.0019296108742525696, 'T1_J': 0.13548840895887249, 'T2_J': 0.03991322463185961, 'U_J': 0.98308393235563, 'U_I': 0.0017392773752474234, 'I(T2_I^2)': 0.44722935852712753, 'T2_I': 0.8471051626570223, 'U1_I': 0.6109713547318678, 'I(U_I^2)': 0.11720676189466556, 'I(RT_I^2)': 0.07964104223868268, 'I(T2_J^2)': 0.12342657880081098, 'I(U1_I^2)': 0.004071974393676976, 'RT_I': 7.248878750969277e-07, 'I(T1_I^2)': 0.43746766383114133, 'I(T1_J^2)': 0.24507622515421412, 'I(U_J^2)': 0.003418867532615232, 'RT_J': 0.013621481676409865, 'T1_I': 0.6662019498381841}
Ordered Keys: 
['RT_I', 'U_I', 'I(RT_J^2)', 'I(U_J^2)', 'I(U1_I^2)', 'RT_J', 'T2_J', 'I(RT_I^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T1_J', 'I(T1_J^2)', 'I(T1_I^2)', 'I(T2_I^2)', 'U1_I', 'T1_I', 'T2_I', 'U_J']
Variables within threshold: ['RT_I', 'U_I', 'I(RT_J^2)', 'I(U_J^2)', 'I(U1_I^2)']
Predicting Best Values for: ['RT_I', 'U_I', 'I(RT_J^2)', 'I(U_J^2)', 'I(U1_I^2)']
Using Model: cost_mean ~ RT_I + U_I + I(RT_J^2) + I(U_J^2) + I(U1_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + U_I + I(RT_J^2) + I(U_J^2) + 
    I(U1_I^2), tau = 0.15, data = structure(list(T1_I = c(11, 
11, 1, 1, 0, 11, 0, 7, 6, 4, 6, 0, 11, 0, 6, 1, 11, 3, 6, 0, 
0, 11, 11, 0, 9, 11, 2, 0, 2, 5, 11, 2, 0, 5, 7, 0, 11, 6, 11, 
0, 3, 11, 6, 0), T1_J = c(6, 4, 0, 4, 2, 7, 7, 2, 0, 11, 6, 0, 
11, 4, 6, 11, 0, 11, 5, 0, 7, 1, 6, 7, 0, 1, 5, 6, 0, 6, 6, 11, 
0, 7, 10, 11, 0, 0, 6, 11, 1, 11, 5, 0), T2_I = c(0, 0, 5, 0, 
6, 11, 4, 9, 11, 10, 6, 3, 11, 9, 7, 6, 11, 0, 11, 11, 11, 0, 
11, 3, 0, 0, 0, 0, 0, 5, 11, 11, 6, 7, 11, 6, 11, 8, 0, 5, 11, 
0, 0, 11), T2_J = c(11, 0, 4, 5, 11, 10, 8, 0, 11, 0, 6, 1, 11, 
6, 11, 0, 6, 11, 6, 11, 0, 5, 10, 0, 4, 11, 7, 7, 11, 11, 0, 
11, 8, 0, 10, 11, 1, 6, 6, 0, 5, 0, 0, 0), U1_I = c(0, 23, 29, 
29, 14, 27, 0, 0, 23, 28, 19, 14, 15, 15, 29, 4, 13, 11, 2, 0, 
17, 10, 10, 0, 0, 29, 16, 2, 18, 0, 29, 0, 26, 17, 14, 29, 10, 
0, 21, 1, 29, 13, 28, 6), U_I = c(0, 14, 0, 0, 0, 28, 10, 0, 
0, 1, 0, 29, 0, 0, 16, 0, 14, 25, 28, 0, 0, 0, 29, 0, 0, 0, 0, 
11, 28, 23, 0, 4, 0, 0, 0, 13, 16, 0, 0, 29, 29, 0, 20, 0), U_J = c(11, 
0, 28, 28, 0, 0, 0, 29, 15, 0, 13, 0, 27, 29, 0, 15, 0, 0, 0, 
6, 12, 1, 0, 29, 29, 1, 12, 0, 0, 0, 15, 0, 28, 0, 29, 0, 0, 
15, 0, 0, 0, 16, 0, 9), RT_I = c(5, 0, 2, 0, 1, 3, 3, 2, 5, 5, 
2, 5, 0, 5, 0, 0, 2, 2, 0, 1, 2, 0, 0, 5, 2, 2, 0, 2, 5, 2, 4, 
0, 0, 1, 2, 3, 0, 5, 5, 0, 3, 2, 0, 2), RT_J = c(1, 5, 5, 0, 
0, 0, 3, 1, 0, 2, 5, 2, 4, 0, 3, 0, 0, 0, 5, 5, 2, 2, 3, 0, 2, 
5, 5, 2, 2, 0, 2, 0, 0, 3, 5, 4, 5, 1, 0, 5, 0, 0, 1, 0), cost_mean = c(5.520673, 
3.777611, 4.812363, 4.671986, 3.574624, 3.513383, 3.336257, 3.838581, 
6.027861, 3.411493, 4.011741, 4.674283, 4.644737, 6.346182, 3.480417, 
4.58251, 3.621266, 3.716595, 9.14989, 3.967653, 3.336737, 5.97802, 
8.066413, 4.578639, 3.546103, 4.768188, 4.587797, 3.413124, 4.581291, 
3.850518, 3.213894, 4.677389, 4.579194, 3.496865, 3.96028, 3.663437, 
4.528236, 5.790733, 5.45144, 9.283223, 3.643389, 3.655476, 3.505841, 
3.647367)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
-44L), class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients lower bd upper bd
(Intercept)  3.30831      2.93406  3.71183
RT_I        -0.01003     -0.35915  0.24544
U_I          0.01474     -0.01786  0.02546
I(RT_J^2)    0.01567     -0.03388  0.02661
I(U_J^2)     0.00039     -0.00048  0.00076
I(U1_I^2)   -0.00024     -0.00061  0.00019

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 249518
Valid coordinates: 10560/52800
Tested coordinates: 505504
Valid coordinates: 15840/52800
Tested coordinates: 754507
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1005243
Valid coordinates: 26400/52800
Tested coordinates: 1257651
Valid coordinates: 31680/52800
Tested coordinates: 1511883
Valid coordinates: 36960/52800
Tested coordinates: 1763173
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2012666
Valid coordinates: 47520/52800
Tested coordinates: 2264064
Valid coordinates: 52800/52800
Tested coordinates: 2516197
Valid/Tested configurations: 52800/2516197
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0019296108742525696, 'T1_J': 0.13548840895887249, 'T2_J': 0.03991322463185961, 'U_J': 0.98308393235563, 'U_I': 0.0017392773752474234, 'I(T2_I^2)': 0.44722935852712753, 'T2_I': 0.8471051626570223, 'U1_I': 0.6109713547318678, 'I(U_I^2)': 0.11720676189466556, 'I(RT_I^2)': 0.07964104223868268, 'I(T2_J^2)': 0.12342657880081098, 'I(U1_I^2)': 0.004071974393676976, 'RT_I': 7.248878750969277e-07, 'I(T1_I^2)': 0.43746766383114133, 'I(T1_J^2)': 0.24507622515421412, 'I(U_J^2)': 0.003418867532615232, 'RT_J': 0.013621481676409865, 'T1_I': 0.6662019498381841}
Ordered Keys: 
['RT_I', 'U_I', 'I(RT_J^2)', 'I(U_J^2)', 'I(U1_I^2)', 'RT_J', 'T2_J', 'I(RT_I^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T1_J', 'I(T1_J^2)', 'I(T1_I^2)', 'I(T2_I^2)', 'U1_I', 'T1_I', 'T2_I', 'U_J']
Variables within threshold: ['RT_I', 'U_I', 'RT_J', 'U_J', 'U1_I']
Unique Variables: ['RT_I', 'U_I', 'RT_J', 'U_J', 'U1_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0019296108742525696, 'T1_J': 0.13548840895887249, 'T2_J': 0.03991322463185961, 'U_J': 0.98308393235563, 'U_I': 0.0017392773752474234, 'I(T2_I^2)': 0.44722935852712753, 'T2_I': 0.8471051626570223, 'U1_I': 0.6109713547318678, 'I(U_I^2)': 0.11720676189466556, 'I(RT_I^2)': 0.07964104223868268, 'I(T2_J^2)': 0.12342657880081098, 'I(U1_I^2)': 0.004071974393676976, 'RT_I': 7.248878750969277e-07, 'I(T1_I^2)': 0.43746766383114133, 'I(T1_J^2)': 0.24507622515421412, 'I(U_J^2)': 0.003418867532615232, 'RT_J': 0.013621481676409865, 'T1_I': 0.6662019498381841}
Ordered Keys: 
['RT_I', 'U_I', 'I(RT_J^2)', 'I(U_J^2)', 'I(U1_I^2)', 'RT_J', 'T2_J', 'I(RT_I^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T1_J', 'I(T1_J^2)', 'I(T1_I^2)', 'I(T2_I^2)', 'U1_I', 'T1_I', 'T2_I', 'U_J']
Variables within threshold: ['RT_I', 'U_I', 'RT_J', 'U_J', 'U1_I']
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
8377    1    7    1    7   29   0   0    5    0

Best From Design: [11, 6, 11, 0, 29, 0, 15, 4, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.755473
Design Best Point:
[11, 6, 11, 0, 29, 0, 15, 4, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.675830564068
Predicted Best Point:
[1, 7, 1, 7, 29, 0, 0, 5, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 7, 1, 7, 29, 0, 0, 5, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2 must be greater than the stride value 2; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.676322
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.675830564068
Slowdown (Predicted Best): 0.983355809191
Budget: 44/1000
Best point from design was better than predicted point
Updating Global Best: 3.213894
Current Best Point: 
[11, 6, 11, 0, 29, 0, 15, 4, 2]
Step 2
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 2105
Valid coordinates: 1600/8000
Tested coordinates: 4191
Valid coordinates: 2400/8000
Tested coordinates: 6364
Valid coordinates: 3200/8000
Tested coordinates: 8587
Valid coordinates: 4000/8000
Tested coordinates: 10676
Valid coordinates: 4800/8000
Tested coordinates: 12779
Valid coordinates: 5600/8000
Tested coordinates: 14890
Valid coordinates: 6400/8000
Tested coordinates: 16933
Valid coordinates: 7200/8000
Tested coordinates: 19076
Valid coordinates: 8000/8000
Tested coordinates: 21235
Valid/Tested configurations: 8000/21235
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 148800      9

Pruned data dimensions: [1] 8003    9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Clean Info:
One-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J']
Clean 2 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 8003    9

Coded data: NULL
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
148     0    0    0    5   29   0   0    5    0
856    11    0   11   11   29   0   0    5    0
1708    0   11    6   11   29   0   0    5    0
2002    5   11   11    0   29   0   0    5    0
2209   11    6   11    6   29   0   0    5    0
2229    6    0    6    5   29   0   0    5    0
3375    0    5    5    0   29   0   0    5    0
5542   11   11    0    0   29   0   0    5    0
7141    5    6    0   11   29   0   0    5    0
7503    0    0   11    0   29   0   0    5    0

D-Efficiency Approximation: [1] 0.3079626

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		337
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			773
        Writes: 		115
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.544904
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.434756
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.440533
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		345
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			788
        Writes: 		119
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.532182
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.447499
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.535241
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.549217
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.442905
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		348
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			795
        Writes: 		121
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.613529
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		336
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			767
        Writes: 		113
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.606073
Complete design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
148     0    0    0    5   29   0   0    5    0  5.544904
856    11    0   11   11   29   0   0    5    0  5.434756
1708    0   11    6   11   29   0   0    5    0  5.440533
2002    5   11   11    0   29   0   0    5    0  5.532182
2209   11    6   11    6   29   0   0    5    0  5.447499
2229    6    0    6    5   29   0   0    5    0  5.535241
3375    0    5    5    0   29   0   0    5    0  5.549217
5542   11   11    0    0   29   0   0    5    0  5.442905
7141    5    6    0   11   29   0   0    5    0  5.613529
7503    0    0   11    0   29   0   0    5    0  5.606073

Clean design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
148     0    0    0    5   29   0   0    5    0  5.544904
856    11    0   11   11   29   0   0    5    0  5.434756
1708    0   11    6   11   29   0   0    5    0  5.440533
2002    5   11   11    0   29   0   0    5    0  5.532182
2209   11    6   11    6   29   0   0    5    0  5.447499
2229    6    0    6    5   29   0   0    5    0  5.535241
3375    0    5    5    0   29   0   0    5    0  5.549217
5542   11   11    0    0   29   0   0    5    0  5.442905
7141    5    6    0   11   29   0   0    5    0  5.613529
7503    0    0   11    0   29   0   0    5    0  5.606073

Clean encoded design, with measurements:
          T1_Ie      T1_Je      T2_Ie      T2_Je     U1_Ie U_Ie U_Je     RT_Ie
148  -1.0000000 -1.0000000 -1.0000000 -0.1666667 0.9333333   -1   -1 0.6666667
856   0.8333333 -1.0000000  0.8333333  0.8333333 0.9333333   -1   -1 0.6666667
1708 -1.0000000  0.8333333  0.0000000  0.8333333 0.9333333   -1   -1 0.6666667
2002 -0.1666667  0.8333333  0.8333333 -1.0000000 0.9333333   -1   -1 0.6666667
2209  0.8333333  0.0000000  0.8333333  0.0000000 0.9333333   -1   -1 0.6666667
2229  0.0000000 -1.0000000  0.0000000 -0.1666667 0.9333333   -1   -1 0.6666667
3375 -1.0000000 -0.1666667 -0.1666667 -1.0000000 0.9333333   -1   -1 0.6666667
5542  0.8333333  0.8333333 -1.0000000 -1.0000000 0.9333333   -1   -1 0.6666667
7141 -0.1666667  0.0000000 -1.0000000  0.8333333 0.9333333   -1   -1 0.6666667
7503 -1.0000000 -1.0000000  0.8333333 -1.0000000 0.9333333   -1   -1 0.6666667
     RT_Je cost_mean
148     -1  5.544904
856     -1  5.434756
1708    -1  5.440533
2002    -1  5.532182
2209    -1  5.447499
2229    -1  5.535241
3375    -1  5.549217
5542    -1  5.442905
7141    -1  5.613529
7503    -1  5.606073

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + T1_I + 
    T1_J + T2_I + T2_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 54 10

Pruned data dimensions: [1] 10 10

Heteroscedasticity Test p-value: 0.364186205459
Heteroscedasticity transform NOT required.
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.019824 0.019824  14.040  0.166
I(T1_J^2)    1 0.005190 0.005190   3.676  0.306
I(T2_I^2)    1 0.000019 0.000019   0.013  0.927
I(T2_J^2)    1 0.001298 0.001298   0.919  0.513
T1_I         1 0.005988 0.005988   4.241  0.288
T1_J         1 0.001369 0.001369   0.969  0.505
T2_I         1 0.005183 0.005183   3.671  0.306
T2_J         1 0.002227 0.002227   1.578  0.428
Residuals    1 0.001412 0.001412               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:      cost_mean
148   5.544904
856   5.434756
1708  5.440533
2002  5.532182
2209  5.447499
2229  5.535241
3375  5.549217
5542  5.442905
7141  5.613529
7503  5.606073

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.2877904398125074, 'T1_J': 0.5049418320580541, 'T2_J': 0.42806407620546094, 'T2_I': 0.30624006703733064, 'I(T2_J^2)': 0.5134171562774714, 'I(T2_I^2)': 0.9269457787686051, 'I(T1_I^2)': 0.16603270746447849, 'I(T1_J^2)': 0.30606059311757755}
Ordered Keys: 
['I(T1_I^2)', 'T1_I', 'I(T1_J^2)', 'T2_I', 'T2_J', 'T1_J', 'I(T2_J^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 54 10

Pruned data dimensions: [1] 10 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + T1_I + T1_J + T2_I + T2_J, tau = 0.15, data = structure(list(
    T1_I = c(0, 11, 0, 5, 11, 6, 0, 11, 5, 0), T1_J = c(0, 0, 
    11, 11, 6, 0, 5, 11, 6, 0), T2_I = c(0, 11, 6, 11, 11, 6, 
    5, 0, 0, 11), T2_J = c(5, 11, 11, 0, 6, 5, 0, 0, 11, 0), 
    U1_I = c(29, 29, 29, 29, 29, 29, 29, 29, 29, 29), U_I = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0), U_J = c(0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0), RT_I = c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5), RT_J = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0), cost_mean = c(5.544904, 5.434756, 
    5.440533, 5.532182, 5.447499, 5.535241, 5.549217, 5.442905, 
    5.613529, 5.606073)), .Names = c("T1_I", "T1_J", "T2_I", 
"T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 45:54, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   5.574740e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -2.780000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.590000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     1.060000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)     5.800000e-04 -1.797693e+308  1.797693e+308
T1_I          2.365000e-02 -1.797693e+308  1.797693e+308
T1_J          1.248000e-02 -1.797693e+308  1.797693e+308
T2_I         -1.493000e-02 -1.797693e+308  1.797693e+308
T2_J         -8.860000e-03 -1.797693e+308  1.797693e+308

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 6247
Valid coordinates: 4800/24000
Tested coordinates: 12611
Valid coordinates: 7200/24000
Tested coordinates: 18892
Valid coordinates: 9600/24000
Tested coordinates: 25229
Valid coordinates: 12000/24000
Tested coordinates: 31703
Valid coordinates: 14400/24000
Tested coordinates: 38130
Valid coordinates: 16800/24000
Tested coordinates: 44337
Valid coordinates: 19200/24000
Tested coordinates: 50808
Valid coordinates: 21600/24000
Tested coordinates: 57120
Valid coordinates: 24000/24000
Tested coordinates: 63338
Valid/Tested configurations: 24000/63338
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 172800      9

Pruned data dimensions: [1] 32003     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.2877904398125074, 'T1_J': 0.5049418320580541, 'T2_J': 0.42806407620546094, 'T2_I': 0.30624006703733064, 'I(T2_J^2)': 0.5134171562774714, 'I(T2_I^2)': 0.9269457787686051, 'I(T1_I^2)': 0.16603270746447849, 'I(T1_J^2)': 0.30606059311757755}
Ordered Keys: 
['I(T1_I^2)', 'T1_I', 'I(T1_J^2)', 'T2_I', 'T2_J', 'T1_J', 'I(T2_J^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.2877904398125074, 'T1_J': 0.5049418320580541, 'T2_J': 0.42806407620546094, 'T2_I': 0.30624006703733064, 'I(T2_J^2)': 0.5134171562774714, 'I(T2_I^2)': 0.9269457787686051, 'I(T1_I^2)': 0.16603270746447849, 'I(T1_J^2)': 0.30606059311757755}
Ordered Keys: 
['I(T1_I^2)', 'T1_I', 'I(T1_J^2)', 'T2_I', 'T2_J', 'T1_J', 'I(T2_J^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
15153    3    4    3    6    5   6   0    3    2

Best From Design: [11, 0, 11, 11, 29, 0, 0, 5, 0]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.755473
Design Best Point:
[11, 0, 11, 11, 29, 0, 0, 5, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 1.14284236289
Predicted Best Point:
[3, 4, 3, 6, 5, 6, 0, 3, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[3, 4, 3, 6, 5, 6, 0, 3, 2]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 8 must be greater than the stride value 8; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		961
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1752
        Writes: 		212
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.434833
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 1.14284236289
Slowdown (Predicted Best): 0.722290506118
Budget: 54/1000
Current Best Point: 
[11, 6, 11, 0, 29, 0, 15, 4, 2]
Step 3
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 2039
Valid coordinates: 1600/8000
Tested coordinates: 4112
Valid coordinates: 2400/8000
Tested coordinates: 6223
Valid coordinates: 3200/8000
Tested coordinates: 8322
Valid coordinates: 4000/8000
Tested coordinates: 10429
Valid coordinates: 4800/8000
Tested coordinates: 12554
Valid coordinates: 5600/8000
Tested coordinates: 14518
Valid coordinates: 6400/8000
Tested coordinates: 16615
Valid coordinates: 7200/8000
Tested coordinates: 18739
Valid coordinates: 8000/8000
Tested coordinates: 20779
Valid/Tested configurations: 8000/20779
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 180800      9

Pruned data dimensions: [1] 40003     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Clean Info:
One-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J']
Clean 2 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 40003     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
928     11    0    0    6   29   0   0    5    0
2002     5   11   11    0   29   0   0    5    0
2399     0   11    5   11   29   0   0    5    0
3216     5    6    5    6   29   0   0    5    0
5542    11   11    0    0   29   0   0    5    0
5794     0    0   11    5   29   0   0    5    0
9525     0    5    0    0   29   0   0    5    0
9721    11    5   11   11   29   0   0    5    0
10028    7    0    7    0   29   0   0    5    0
12460    5    0    0   11   29   0   0    5    0

D-Efficiency Approximation: [1] 0.3091604

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.379504
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.536982
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.496741
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.456108
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		337
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			773
        Writes: 		115
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.545427
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		348
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			795
        Writes: 		121
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.585918
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		336
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			767
        Writes: 		113
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.530294
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		342
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			781
        Writes: 		117
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.633031
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
928     11    0    0    6   29   0   0    5    0  5.379504
2002     5   11   11    0   29   0   0    5    0  5.532182
2399     0   11    5   11   29   0   0    5    0  5.536982
3216     5    6    5    6   29   0   0    5    0  5.496741
5542    11   11    0    0   29   0   0    5    0  5.442905
5794     0    0   11    5   29   0   0    5    0  5.456108
9525     0    5    0    0   29   0   0    5    0  5.545427
9721    11    5   11   11   29   0   0    5    0  5.585918
10028    7    0    7    0   29   0   0    5    0  5.530294
12460    5    0    0   11   29   0   0    5    0  5.633031

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
928     11    0    0    6   29   0   0    5    0  5.379504
2002     5   11   11    0   29   0   0    5    0  5.532182
2399     0   11    5   11   29   0   0    5    0  5.536982
3216     5    6    5    6   29   0   0    5    0  5.496741
5542    11   11    0    0   29   0   0    5    0  5.442905
5794     0    0   11    5   29   0   0    5    0  5.456108
9525     0    5    0    0   29   0   0    5    0  5.545427
9721    11    5   11   11   29   0   0    5    0  5.585918
10028    7    0    7    0   29   0   0    5    0  5.530294
12460    5    0    0   11   29   0   0    5    0  5.633031

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je     U1_Ie U_Ie U_Je     RT_Ie
928    0.8333333 -1.0000000 -1.0000000  0.0000000 0.9333333   -1   -1 0.6666667
2002  -0.1666667  0.8333333  0.8333333 -1.0000000 0.9333333   -1   -1 0.6666667
2399  -1.0000000  0.8333333 -0.1666667  0.8333333 0.9333333   -1   -1 0.6666667
3216  -0.1666667  0.0000000 -0.1666667  0.0000000 0.9333333   -1   -1 0.6666667
5542   0.8333333  0.8333333 -1.0000000 -1.0000000 0.9333333   -1   -1 0.6666667
5794  -1.0000000 -1.0000000  0.8333333 -0.1666667 0.9333333   -1   -1 0.6666667
9525  -1.0000000 -0.1666667 -1.0000000 -1.0000000 0.9333333   -1   -1 0.6666667
9721   0.8333333 -0.1666667  0.8333333  0.8333333 0.9333333   -1   -1 0.6666667
10028  0.1666667 -1.0000000  0.1666667 -1.0000000 0.9333333   -1   -1 0.6666667
12460 -0.1666667 -1.0000000 -1.0000000  0.8333333 0.9333333   -1   -1 0.6666667
      RT_Je cost_mean
928      -1  5.379504
2002     -1  5.532182
2399     -1  5.536982
3216     -1  5.496741
5542     -1  5.442905
5794     -1  5.456108
9525     -1  5.545427
9721     -1  5.585918
10028    -1  5.530294
12460    -1  5.633031

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + T1_I + T1_J + T2_I + T2_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + T1_I + 
    T1_J + T2_I + T2_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 64 10

Pruned data dimensions: [1] 20 10

Heteroscedasticity Test p-value: 0.729938850915
Heteroscedasticity transform NOT required.
Regression Step:            Df   Sum Sq  Mean Sq F value Pr(>F)   
I(T1_I^2)    1 0.024339 0.024339  10.308 0.0083 **
I(T1_J^2)    1 0.003640 0.003640   1.542 0.2402   
I(T2_I^2)    1 0.000114 0.000114   0.048 0.8301   
I(T2_J^2)    1 0.003245 0.003245   1.374 0.2658   
T1_I         1 0.008844 0.008844   3.745 0.0791 . 
T1_J         1 0.004271 0.004271   1.809 0.2057   
T2_I         1 0.005994 0.005994   2.539 0.1394   
T2_J         1 0.014337 0.014337   6.072 0.0314 * 
Residuals   11 0.025974 0.002361                  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
928    5.379504
2002   5.532182
2399   5.536982
3216   5.496741
5542   5.442905
5794   5.456108
9525   5.545427
9721   5.585918
10028  5.530294
12460  5.633031

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.0790703608121148, 'T1_J': 0.20571104911920143, 'T2_J': 0.03144840640434891, 'T2_I': 0.13940635152343678, 'I(T2_J^2)': 0.26584804341091534, 'I(T2_I^2)': 0.8301453299414822, 'I(T1_I^2)': 0.008296696405687637, 'I(T1_J^2)': 0.2401854601224064}
Ordered Keys: 
['I(T1_I^2)', 'T2_J', 'T1_I', 'T2_I', 'T1_J', 'I(T1_J^2)', 'I(T2_J^2)', 'I(T2_I^2)']
Variables within threshold: ['I(T1_I^2)']
Predicting Best Values for: ['I(T1_I^2)']
Using Model: cost_mean ~ I(T1_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 64 10

Pruned data dimensions: [1] 20 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2), tau = 0.15, data = structure(list(
    T1_I = c(0, 11, 0, 5, 11, 6, 0, 11, 5, 0, 11, 5, 0, 5, 11, 
    0, 0, 11, 7, 5), T1_J = c(0, 0, 11, 11, 6, 0, 5, 11, 6, 0, 
    0, 11, 11, 6, 11, 0, 5, 5, 0, 0), T2_I = c(0, 11, 6, 11, 
    11, 6, 5, 0, 0, 11, 0, 11, 5, 5, 0, 11, 0, 11, 7, 0), T2_J = c(5, 
    11, 11, 0, 6, 5, 0, 0, 11, 0, 6, 0, 11, 6, 0, 5, 0, 11, 0, 
    11), U1_I = c(29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
    29, 29, 29, 29, 29, 29, 29, 29, 29), U_I = c(0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), U_J = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), 
    RT_I = c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
    5, 5, 5, 5), RT_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0), cost_mean = c(5.544904, 5.434756, 
    5.440533, 5.532182, 5.447499, 5.535241, 5.549217, 5.442905, 
    5.613529, 5.606073, 5.379504, 5.532182, 5.536982, 5.496741, 
    5.442905, 5.456108, 5.545427, 5.585918, 5.530294, 5.633031
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = 45:64, class = "data.frame"))

tau: [1] 0.15

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   5.456110e+00 -1.797693e+308   5.537580e+00
I(T1_I^2)    -1.800000e-04  -1.600000e-03  -3.000000e-05

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 6253
Valid coordinates: 4800/24000
Tested coordinates: 12542
Valid coordinates: 7200/24000
Tested coordinates: 19102
Valid coordinates: 9600/24000
Tested coordinates: 25510
Valid coordinates: 12000/24000
Tested coordinates: 31759
Valid coordinates: 14400/24000
Tested coordinates: 38132
Valid coordinates: 16800/24000
Tested coordinates: 44335
Valid coordinates: 19200/24000
Tested coordinates: 50495
Valid coordinates: 21600/24000
Tested coordinates: 56730
Valid coordinates: 24000/24000
Tested coordinates: 63011
Valid/Tested configurations: 24000/63011
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 204800      9

Pruned data dimensions: [1] 64003     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.0790703608121148, 'T1_J': 0.20571104911920143, 'T2_J': 0.03144840640434891, 'T2_I': 0.13940635152343678, 'I(T2_J^2)': 0.26584804341091534, 'I(T2_I^2)': 0.8301453299414822, 'I(T1_I^2)': 0.008296696405687637, 'I(T1_J^2)': 0.2401854601224064}
Ordered Keys: 
['I(T1_I^2)', 'T2_J', 'T1_I', 'T2_I', 'T1_J', 'I(T1_J^2)', 'I(T2_J^2)', 'I(T2_I^2)']
Variables within threshold: ['T1_I']
Unique Variables: ['T1_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 29, 'U_J': 0, 'U_I': 0, 'RT_J': 0, 'RT_I': 5}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.0790703608121148, 'T1_J': 0.20571104911920143, 'T2_J': 0.03144840640434891, 'T2_I': 0.13940635152343678, 'I(T2_J^2)': 0.26584804341091534, 'I(T2_I^2)': 0.8301453299414822, 'I(T1_I^2)': 0.008296696405687637, 'I(T1_J^2)': 0.2401854601224064}
Ordered Keys: 
['I(T1_I^2)', 'T2_J', 'T1_I', 'T2_I', 'T1_J', 'I(T1_J^2)', 'I(T2_J^2)', 'I(T2_I^2)']
Variables within threshold: ['T1_I']
Best Predicted:     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
109    4   10   10   11   23   0   7    2    5

Best From Design: [11, 0, 0, 6, 29, 0, 0, 5, 0]
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 0, 'RT_I': 5, 'U_J': 0, 'U_I': 0, 'U1_I': 29, 'T1_I': 4}, 'quadratic': ['T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.755473
Design Best Point:
[11, 0, 0, 6, 29, 0, 0, 5, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 1.13122374998
Predicted Best Point:
[4, 10, 10, 11, 23, 0, 7, 2, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 10, 10, 11, 23, 0, 7, 2, 5]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2477
        Multiplications: 	820
        Divisions: 		0
        Logical: 		0
        Reads: 			4266
        Writes: 		469
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.965552
Current Model: {'inverse': [], 'linear': ['T1_J', 'T2_I', 'T2_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 0, 'RT_I': 5, 'U_J': 0, 'U_I': 0, 'U1_I': 29, 'T1_I': 4}, 'quadratic': ['T1_J', 'T2_I', 'T2_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 1.13122374998
Slowdown (Predicted Best): 0.833892233223
Budget: 64/1000
Current Best Point: 
[11, 6, 11, 0, 29, 0, 15, 4, 2]
Final Best Point: 
[11, 6, 11, 0, 29, 0, 15, 4, 2]
Ending DLMT
Best Point: [11, 6, 11, 0, 29, 0, 15, 4, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.47966081022
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.47966081022
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [11, 6, 11, 0, 29, 0, 15, 4, 2]={'T1_I': 2048, 'T1_J': 64, 'U_J': 16, 'U_I': 1, 'T2_I': 2048, 'T2_J': 1, 'U1_I': 30, 'RT_I': 16, 'RT_J': 4}, cost=3.213894e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-7291.68, runs=66
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 16
 RT_J = 4
 T1_I = 2048
 T1_J = 64
 T2_I = 2048
 T2_J = 1
 U1_I = 30
 U_I = 1
 U_J = 16
 cost_mean = 3.213894
 points = 66
 speedup = 1.47966081022
 step = 4
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		4622
        Multiplications: 	1428
        Divisions: 		0
        Logical: 		0
        Reads: 			7297
        Writes: 		773
        Comparisons:		13
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
