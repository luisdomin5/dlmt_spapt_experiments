
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84853
Valid coordinates: 3520/17600
Tested coordinates: 167285
Valid coordinates: 5280/17600
Tested coordinates: 251847
Valid coordinates: 7040/17600
Tested coordinates: 336924
Valid coordinates: 8800/17600
Tested coordinates: 421603
Valid coordinates: 10560/17600
Tested coordinates: 506120
Valid coordinates: 12320/17600
Tested coordinates: 589783
Valid coordinates: 14080/17600
Tested coordinates: 671346
Valid coordinates: 15840/17600
Tested coordinates: 757748
Valid coordinates: 17600/17600
Tested coordinates: 845133
Valid/Tested configurations: 17600/845133
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
2089     6    7   11    9    1  28   0    2    5
3343     5    0    0    0   28   0  28    5    0
4429    11    4   11   11   22   0  29    5    2
4697     0    6    4    7    0   0  29    0    3
4775     7    0    7   11    0   0   0    0    5
6273    11    5    0    9    0  11   0    5    2
7471     0    3    0    7   11   0   1    2    0
7660    10   11   10   11   28  16   0    2    1
8996     0   11   11   11    1   0  10    5    2
9500     0    8    3    0   29   0   5    0    5
9918     9   10   11    0   17   0   0    5    2
10501    3    6   11    6   25  16   0    0    0
10734    0    6    4    9   21  27   0    5    0
12680    1   11    1   11   18   0  29    2    5
12789    0    2   11    0   28  29   0    3    2
12899    0    0   11   11   12   0  18    0    3
13643    5    0    6    6   29   0  14    3    2
15035    3    0    4    0   13  13   0    3    4
15698   11    1    0    6   16   0  16    0    5
15880    5    5    0   11   22   0  12    2    2
16469    9    5    9    0    1   0  15    1    0
17289    7   11    7    0   10  29   0    0    1

D-Efficiency Approximation: [1] 0.2175999

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		14970
        Multiplications: 	4488
        Divisions: 		0
        Logical: 		0
        Reads: 			22635
        Writes: 		2316
        Comparisons:		19
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.901688
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		13288
        Multiplications: 	3960
        Divisions: 		0
        Logical: 		0
        Reads: 			19919
        Writes: 		2030
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.858167
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		15413
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23257
        Writes: 		2366
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.922028
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		368
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			838
        Writes: 		96
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.61893
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	4
        Additions: 		303
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			700
        Writes: 		80
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.594449
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2696
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4643
        Writes: 		499
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.900852
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		194
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			413
        Writes: 		69
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.732516
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		759
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1517
        Writes: 		211
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.916675
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		6798
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10661
        Writes: 		1087
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.920601
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		399
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			898
        Writes: 		126
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.594899
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1984
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3418
        Writes: 		375
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.813535
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		231
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			516
        Writes: 		101
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.609453
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		635
        Multiplications: 	244
        Divisions: 		0
        Logical: 		0
        Reads: 			1425
        Writes: 		205
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.609721
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2 must be greater than the stride value 2; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3783
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6435
        Writes: 		678
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.601343
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2378
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4123
        Writes: 		482
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.620596
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		283
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			644
        Writes: 		87
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.60759
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2277
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3764
        Writes: 		421
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.145441
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		4931
        Multiplications: 	1504
        Divisions: 		0
        Logical: 		0
        Reads: 			7654
        Writes: 		806
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.778346
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		488
        Multiplications: 	200
        Divisions: 		0
        Logical: 		0
        Reads: 			1099
        Writes: 		137
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 11.07542
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1093
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1957
        Writes: 		236
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.18195
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		567
        Multiplications: 	204
        Divisions: 		0
        Logical: 		0
        Reads: 			1107
        Writes: 		129
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.419553
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1044
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			2019
        Writes: 		251
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.219507
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2089     6    7   11    9    1  28   0    2    5  4.901688
3343     5    0    0    0   28   0  28    5    0  6.858167
4429    11    4   11   11   22   0  29    5    2  6.922028
4697     0    6    4    7    0   0  29    0    3  5.618930
4775     7    0    7   11    0   0   0    0    5  5.594449
6273    11    5    0    9    0  11   0    5    2  6.900852
7471     0    3    0    7   11   0   1    2    0  4.732516
7660    10   11   10   11   28  16   0    2    1  3.916675
8996     0   11   11   11    1   0  10    5    2  6.920601
9500     0    8    3    0   29   0   5    0    5  5.594899
9918     9   10   11    0   17   0   0    5    2  6.813535
10501    3    6   11    6   25  16   0    0    0  5.609453
10734    0    6    4    9   21  27   0    5    0  5.609721
12680    1   11    1   11   18   0  29    2    5  5.601343
12789    0    2   11    0   28  29   0    3    2  4.620596
12899    0    0   11   11   12   0  18    0    3  5.607590
13643    5    0    6    6   29   0  14    3    2  4.145441
15035    3    0    4    0   13  13   0    3    4  4.778346
15698   11    1    0    6   16   0  16    0    5 11.075420
15880    5    5    0   11   22   0  12    2    2  4.181950
16469    9    5    9    0    1   0  15    1    0  4.419553
17289    7   11    7    0   10  29   0    0    1  5.219507

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2089     6    7   11    9    1  28   0    2    5  4.901688
3343     5    0    0    0   28   0  28    5    0  6.858167
4429    11    4   11   11   22   0  29    5    2  6.922028
4697     0    6    4    7    0   0  29    0    3  5.618930
4775     7    0    7   11    0   0   0    0    5  5.594449
6273    11    5    0    9    0  11   0    5    2  6.900852
7471     0    3    0    7   11   0   1    2    0  4.732516
7660    10   11   10   11   28  16   0    2    1  3.916675
8996     0   11   11   11    1   0  10    5    2  6.920601
9500     0    8    3    0   29   0   5    0    5  5.594899
9918     9   10   11    0   17   0   0    5    2  6.813535
10501    3    6   11    6   25  16   0    0    0  5.609453
10734    0    6    4    9   21  27   0    5    0  5.609721
12680    1   11    1   11   18   0  29    2    5  5.601343
12789    0    2   11    0   28  29   0    3    2  4.620596
12899    0    0   11   11   12   0  18    0    3  5.607590
13643    5    0    6    6   29   0  14    3    2  4.145441
15035    3    0    4    0   13  13   0    3    4  4.778346
15698   11    1    0    6   16   0  16    0    5 11.075420
15880    5    5    0   11   22   0  12    2    2  4.181950
16469    9    5    9    0    1   0  15    1    0  4.419553
17289    7   11    7    0   10  29   0    0    1  5.219507

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
2089   0.0000000  0.1666667  0.8333333  0.5000000 -0.93333333  0.86666667
3343  -0.1666667 -1.0000000 -1.0000000 -1.0000000  0.86666667 -1.00000000
4429   0.8333333 -0.3333333  0.8333333  0.8333333  0.46666667 -1.00000000
4697  -1.0000000  0.0000000 -0.3333333  0.1666667 -1.00000000 -1.00000000
4775   0.1666667 -1.0000000  0.1666667  0.8333333 -1.00000000 -1.00000000
6273   0.8333333 -0.1666667 -1.0000000  0.5000000 -1.00000000 -0.26666667
7471  -1.0000000 -0.5000000 -1.0000000  0.1666667 -0.26666667 -1.00000000
7660   0.6666667  0.8333333  0.6666667  0.8333333  0.86666667  0.06666667
8996  -1.0000000  0.8333333  0.8333333  0.8333333 -0.93333333 -1.00000000
9500  -1.0000000  0.3333333 -0.5000000 -1.0000000  0.93333333 -1.00000000
9918   0.5000000  0.6666667  0.8333333 -1.0000000  0.13333333 -1.00000000
10501 -0.5000000  0.0000000  0.8333333  0.0000000  0.66666667  0.06666667
10734 -1.0000000  0.0000000 -0.3333333  0.5000000  0.40000000  0.80000000
12680 -0.8333333  0.8333333 -0.8333333  0.8333333  0.20000000 -1.00000000
12789 -1.0000000 -0.6666667  0.8333333 -1.0000000  0.86666667  0.93333333
12899 -1.0000000 -1.0000000  0.8333333  0.8333333 -0.20000000 -1.00000000
13643 -0.1666667 -1.0000000  0.0000000  0.0000000  0.93333333 -1.00000000
15035 -0.5000000 -1.0000000 -0.3333333 -1.0000000 -0.13333333 -0.13333333
15698  0.8333333 -0.8333333 -1.0000000  0.0000000  0.06666667 -1.00000000
15880 -0.1666667 -0.1666667 -1.0000000  0.8333333  0.46666667 -1.00000000
16469  0.5000000 -0.1666667  0.5000000 -1.0000000 -0.93333333 -1.00000000
17289  0.1666667  0.8333333  0.1666667 -1.0000000 -0.33333333  0.93333333
             U_Je      RT_Ie      RT_Je cost_mean
2089  -1.00000000 -0.3333333  0.6666667  4.901688
3343   0.86666667  0.6666667 -1.0000000  6.858167
4429   0.93333333  0.6666667 -0.3333333  6.922028
4697   0.93333333 -1.0000000  0.0000000  5.618930
4775  -1.00000000 -1.0000000  0.6666667  5.594449
6273  -1.00000000  0.6666667 -0.3333333  6.900852
7471  -0.93333333 -0.3333333 -1.0000000  4.732516
7660  -1.00000000 -0.3333333 -0.6666667  3.916675
8996  -0.33333333  0.6666667 -0.3333333  6.920601
9500  -0.66666667 -1.0000000  0.6666667  5.594899
9918  -1.00000000  0.6666667 -0.3333333  6.813535
10501 -1.00000000 -1.0000000 -1.0000000  5.609453
10734 -1.00000000  0.6666667 -1.0000000  5.609721
12680  0.93333333 -0.3333333  0.6666667  5.601343
12789 -1.00000000  0.0000000 -0.3333333  4.620596
12899  0.20000000 -1.0000000  0.0000000  5.607590
13643 -0.06666667  0.0000000 -0.3333333  4.145441
15035 -1.00000000  0.0000000  0.3333333  4.778346
15698  0.06666667 -1.0000000  0.6666667 11.075420
15880 -0.20000000 -0.3333333 -0.3333333  4.181950
16469  0.00000000 -0.6666667 -1.0000000  4.419553
17289 -1.00000000 -1.0000000 -0.6666667  5.219507

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.183402504366
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  9.360   9.360  10.370 0.0486 *
I(T1_J^2)    1  0.400   0.400   0.443 0.5533  
I(T2_I^2)    1  1.223   1.223   1.355 0.3286  
I(T2_J^2)    1  0.058   0.058   0.064 0.8166  
I(U1_I^2)    1  0.866   0.866   0.959 0.3996  
I(U_I^2)     1  1.308   1.308   1.449 0.3150  
I(U_J^2)     1  1.678   1.678   1.860 0.2660  
I(RT_I^2)    1  1.795   1.795   1.989 0.2532  
I(RT_J^2)    1  6.442   6.442   7.138 0.0756 .
T1_I         1  4.054   4.054   4.492 0.1242  
T1_J         1  0.867   0.867   0.961 0.3993  
T2_I         1  3.966   3.966   4.395 0.1270  
T2_J         1  3.370   3.370   3.733 0.1488  
U1_I         1  0.731   0.731   0.809 0.4346  
U_I          1  0.583   0.583   0.646 0.4803  
U_J          1  0.871   0.871   0.965 0.3984  
RT_I         1  8.923   8.923   9.886 0.0515 .
RT_J         1  0.120   0.120   0.133 0.7391  
Residuals    3  2.708   0.903                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
2089   4.901688
3343   6.858167
4429   6.922028
4697   5.618930
4775   5.594449
6273   6.900852
7471   4.732516
7660   3.916675
8996   6.920601
9500   5.594899
9918   6.813535
10501  5.609453
10734  5.609721
12680  5.601343
12789  4.620596
12899  5.607590
13643  4.145441
15035  4.778346
15698 11.075420
15880  4.181950
16469  4.419553
17289  5.219507

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.07558551416613453, 'T1_J': 0.3992535534666817, 'T2_J': 0.14884423591174975, 'U_J': 0.39835054463135006, 'U_I': 0.4802766289405943, 'I(T2_I^2)': 0.32857415519746963, 'T2_I': 0.12700314093167608, 'U1_I': 0.434605233576057, 'I(U_I^2)': 0.3150318285659364, 'I(RT_I^2)': 0.2532356647336533, 'I(T2_J^2)': 0.8165687836668587, 'I(U1_I^2)': 0.3996377218278306, 'RT_I': 0.0514935788323874, 'I(T1_I^2)': 0.04857292846982332, 'I(T1_J^2)': 0.553272470517173, 'I(U_J^2)': 0.2659760342289834, 'RT_J': 0.7391350743950813, 'T1_I': 0.12424429230277038}
Ordered Keys: 
['I(T1_I^2)', 'RT_I', 'I(RT_J^2)', 'T1_I', 'T2_I', 'T2_J', 'I(RT_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'I(T2_I^2)', 'U_J', 'T1_J', 'I(U1_I^2)', 'U1_I', 'U_I', 'I(T1_J^2)', 'RT_J', 'I(T2_J^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.05, data = structure(list(T1_I = c(6, 
5, 11, 0, 7, 11, 0, 10, 0, 0, 9, 3, 0, 1, 0, 0, 5, 3, 11, 5, 
9, 7), T1_J = c(7, 0, 4, 6, 0, 5, 3, 11, 11, 8, 10, 6, 6, 11, 
2, 0, 0, 0, 1, 5, 5, 11), T2_I = c(11, 0, 11, 4, 7, 0, 0, 10, 
11, 3, 11, 11, 4, 1, 11, 11, 6, 4, 0, 0, 9, 7), T2_J = c(9, 0, 
11, 7, 11, 9, 7, 11, 11, 0, 0, 6, 9, 11, 0, 11, 6, 0, 6, 11, 
0, 0), U1_I = c(1, 28, 22, 0, 0, 0, 11, 28, 1, 29, 17, 25, 21, 
18, 28, 12, 29, 13, 16, 22, 1, 10), U_I = c(28, 0, 0, 0, 0, 11, 
0, 16, 0, 0, 0, 16, 27, 0, 29, 0, 0, 13, 0, 0, 0, 29), U_J = c(0, 
28, 29, 29, 0, 0, 1, 0, 10, 5, 0, 0, 0, 29, 0, 18, 14, 0, 16, 
12, 15, 0), RT_I = c(2, 5, 5, 0, 0, 5, 2, 2, 5, 0, 5, 0, 5, 2, 
3, 0, 3, 3, 0, 2, 1, 0), RT_J = c(5, 0, 2, 3, 5, 2, 0, 1, 2, 
5, 2, 0, 0, 5, 2, 3, 2, 4, 5, 2, 0, 1), cost_mean = c(4.901688, 
6.858167, 6.922028, 5.61893, 5.594449, 6.900852, 4.732516, 3.916675, 
6.920601, 5.594899, 6.813535, 5.609453, 5.609721, 5.601343, 4.620596, 
5.60759, 4.145441, 4.778346, 11.07542, 4.18195, 4.419553, 5.219507
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("2089", "3343", 
"4429", "4697", "4775", "6273", "7471", "7660", "8996", "9500", 
"9918", "10501", "10734", "12680", "12789", "12899", "13643", 
"15035", "15698", "15880", "16469", "17289"), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   5.355560e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     4.350000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)     7.310000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     2.019000e-02 -1.797693e+308  1.797693e+308
I(T2_J^2)    -2.042000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)    -2.520000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)     -8.400000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)      5.200000e-04 -1.797693e+308  1.797693e+308
I(RT_I^2)     2.657700e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     6.637000e-02 -1.797693e+308  1.797693e+308
T1_I          1.916000e-02 -1.797693e+308  1.797693e+308
T1_J         -7.387000e-02 -1.797693e+308  1.797693e+308
T2_I         -2.509400e-01 -1.797693e+308  1.797693e+308
T2_J          1.924000e-01 -1.797693e+308  1.797693e+308
U1_I          6.894000e-02 -1.797693e+308  1.797693e+308
U_I           1.870000e-02 -1.797693e+308  1.797693e+308
U_J           4.500000e-03 -1.797693e+308  1.797693e+308
RT_I         -1.167690e+00 -1.797693e+308  1.797693e+308
RT_J         -1.290900e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 256733
Valid coordinates: 10560/52800
Tested coordinates: 510206
Valid coordinates: 15840/52800
Tested coordinates: 756671
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1009973
Valid coordinates: 26400/52800
Tested coordinates: 1266599
Valid coordinates: 31680/52800
Tested coordinates: 1518856
Valid coordinates: 36960/52800
Tested coordinates: 1769883
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2027249
Valid coordinates: 47520/52800
Tested coordinates: 2284903
Valid coordinates: 52800/52800
Tested coordinates: 2539609
Valid/Tested configurations: 52800/2539609
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.07558551416613453, 'T1_J': 0.3992535534666817, 'T2_J': 0.14884423591174975, 'U_J': 0.39835054463135006, 'U_I': 0.4802766289405943, 'I(T2_I^2)': 0.32857415519746963, 'T2_I': 0.12700314093167608, 'U1_I': 0.434605233576057, 'I(U_I^2)': 0.3150318285659364, 'I(RT_I^2)': 0.2532356647336533, 'I(T2_J^2)': 0.8165687836668587, 'I(U1_I^2)': 0.3996377218278306, 'RT_I': 0.0514935788323874, 'I(T1_I^2)': 0.04857292846982332, 'I(T1_J^2)': 0.553272470517173, 'I(U_J^2)': 0.2659760342289834, 'RT_J': 0.7391350743950813, 'T1_I': 0.12424429230277038}
Ordered Keys: 
['I(T1_I^2)', 'RT_I', 'I(RT_J^2)', 'T1_I', 'T2_I', 'T2_J', 'I(RT_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'I(T2_I^2)', 'U_J', 'T1_J', 'I(U1_I^2)', 'U1_I', 'U_I', 'I(T1_J^2)', 'RT_J', 'I(T2_J^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.07558551416613453, 'T1_J': 0.3992535534666817, 'T2_J': 0.14884423591174975, 'U_J': 0.39835054463135006, 'U_I': 0.4802766289405943, 'I(T2_I^2)': 0.32857415519746963, 'T2_I': 0.12700314093167608, 'U1_I': 0.434605233576057, 'I(U_I^2)': 0.3150318285659364, 'I(RT_I^2)': 0.2532356647336533, 'I(T2_J^2)': 0.8165687836668587, 'I(U1_I^2)': 0.3996377218278306, 'RT_I': 0.0514935788323874, 'I(T1_I^2)': 0.04857292846982332, 'I(T1_J^2)': 0.553272470517173, 'I(U_J^2)': 0.2659760342289834, 'RT_J': 0.7391350743950813, 'T1_I': 0.12424429230277038}
Ordered Keys: 
['I(T1_I^2)', 'RT_I', 'I(RT_J^2)', 'T1_I', 'T2_I', 'T2_J', 'I(RT_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'I(T2_I^2)', 'U_J', 'T1_J', 'I(U1_I^2)', 'U1_I', 'U_I', 'I(T1_J^2)', 'RT_J', 'I(T2_J^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
18633    0    8    5   11   29  29   0    2    0

Best From Design: [10, 11, 10, 11, 28, 16, 0, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.790567
Baseline Point:
5.790567
Design Best Point:
[10, 11, 10, 11, 28, 16, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.676388857948
Predicted Best Point:
[0, 8, 5, 11, 29, 29, 0, 2, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 8, 5, 11, 29, 29, 0, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		411
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			925
        Writes: 		163
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.437772
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.676388857948
Slowdown (Predicted Best): 0.766379527255
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.916675
Current Best Point: 
[10, 11, 10, 11, 28, 16, 0, 2, 1]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 85516
Valid coordinates: 3520/17600
Tested coordinates: 170310
Valid coordinates: 5280/17600
Tested coordinates: 253911
Valid coordinates: 7040/17600
Tested coordinates: 336576
Valid coordinates: 8800/17600
Tested coordinates: 418067
Valid coordinates: 10560/17600
Tested coordinates: 502476
Valid coordinates: 12320/17600
Tested coordinates: 586669
Valid coordinates: 14080/17600
Tested coordinates: 668223
Valid coordinates: 15840/17600
Tested coordinates: 753872
Valid coordinates: 17600/17600
Tested coordinates: 836832
Valid/Tested configurations: 17600/836832
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
170     11    1   11   11    0  13   0    5    2
3961     5    5    5    0    4   0  15    5    0
4851     0    3    5    0   16   0  29    0    5
11906    6    0   11    6   12   0  19    2    5
12650   11    6   11    0   12   0  28    2    1
25949    7    4   11   11   18  28   0    0    5
28980    0   11    1   11   13   0   0    0    0
40892   11   11    0    0    3  28   0    5    0
41788    6    0    8    1   26  29   0    5    2
49149    0    0    0    0   16  16   0    2    5
52100    0   11    6   11   20   0  15    3    4
54208    5    2    0   11    1   0   0    2    2
56351   11    0    0    2   29   0  11    0    5
59044    7   10    8    0   29   0   1    2    5
66316    0    4   11    6   27   0   0    5    0
66692    6    6    6    6   28  14   0    2    0
75463    0    5   11    0   28   0  12    0    2
75951    6    7    0    9   26   0  29    5    2
79572    3   11   11    0    0  16   0    0    5
80348    8    0   11   11   29   0  29    2    0
87348    6    0    6    5   13   1   0    0    3
87783    0    4    5    7    0  29   0    2    3

D-Efficiency Approximation: [1] 0.2283782

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2818
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4847
        Writes: 		521
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.836188
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		7410
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11313
        Writes: 		1152
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.788936
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		602
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1352
        Writes: 		161
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.481534
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		3180
        Multiplications: 	1060
        Divisions: 		0
        Logical: 		0
        Reads: 			5430
        Writes: 		574
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.078039
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1917
        Multiplications: 	640
        Divisions: 		0
        Logical: 		0
        Reads: 			3323
        Writes: 		362
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.95692
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		13328
        Multiplications: 	3960
        Divisions: 		0
        Logical: 		0
        Reads: 			19994
        Writes: 		2058
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.472676
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	4
        Additions: 		34
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			88
        Writes: 		30
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.693446
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		618
        Multiplications: 	248
        Divisions: 		0
        Logical: 		0
        Reads: 			1390
        Writes: 		184
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.354515
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		3819
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6526
        Writes: 		722
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.978759
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	2
        Additions: 		9354
        Multiplications: 	2832
        Divisions: 		0
        Logical: 		0
        Reads: 			14288
        Writes: 		1472
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.868563
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3773
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			6079
        Writes: 		644
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.502147
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		291
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			593
        Writes: 		81
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.608996
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		453
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1018
        Writes: 		138
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.566261
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2117
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3664
        Writes: 		411
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.981332
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		346
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			791
        Writes: 		119
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.460188
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		251
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			572
        Writes: 		111
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.453899
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		209
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			476
        Writes: 		83
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.613464
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		15417
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23265
        Writes: 		2370
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.738359
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		7863
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			11991
        Writes: 		1229
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.729256
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1894
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3250
        Writes: 		367
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.509143
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		315
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			649
        Writes: 		94
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.243832
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		4014
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6479
        Writes: 		697
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.264873
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
170     11    1   11   11    0  13   0    5    2  6.836188
3961     5    5    5    0    4   0  15    5    0  6.788936
4851     0    3    5    0   16   0  29    0    5  6.481534
11906    6    0   11    6   12   0  19    2    5  5.078039
12650   11    6   11    0   12   0  28    2    1  3.956920
25949    7    4   11   11   18  28   0    0    5  5.472676
28980    0   11    1   11   13   0   0    0    0  5.693446
40892   11   11    0    0    3  28   0    5    0  6.354515
41788    6    0    8    1   26  29   0    5    2  6.978759
49149    0    0    0    0   16  16   0    2    5  4.868563
52100    0   11    6   11   20   0  15    3    4  4.502147
54208    5    2    0   11    1   0   0    2    2  4.608996
56351   11    0    0    2   29   0  11    0    5  7.566261
59044    7   10    8    0   29   0   1    2    5  4.981332
66316    0    4   11    6   27   0   0    5    0  6.460188
66692    6    6    6    6   28  14   0    2    0  4.453899
75463    0    5   11    0   28   0  12    0    2  5.613464
75951    6    7    0    9   26   0  29    5    2  6.738359
79572    3   11   11    0    0  16   0    0    5  5.729256
80348    8    0   11   11   29   0  29    2    0  4.509143
87348    6    0    6    5   13   1   0    0    3  4.243832
87783    0    4    5    7    0  29   0    2    3  4.264873

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
170     11    1   11   11    0  13   0    5    2  6.836188
3961     5    5    5    0    4   0  15    5    0  6.788936
4851     0    3    5    0   16   0  29    0    5  6.481534
11906    6    0   11    6   12   0  19    2    5  5.078039
12650   11    6   11    0   12   0  28    2    1  3.956920
25949    7    4   11   11   18  28   0    0    5  5.472676
28980    0   11    1   11   13   0   0    0    0  5.693446
40892   11   11    0    0    3  28   0    5    0  6.354515
41788    6    0    8    1   26  29   0    5    2  6.978759
49149    0    0    0    0   16  16   0    2    5  4.868563
52100    0   11    6   11   20   0  15    3    4  4.502147
54208    5    2    0   11    1   0   0    2    2  4.608996
56351   11    0    0    2   29   0  11    0    5  7.566261
59044    7   10    8    0   29   0   1    2    5  4.981332
66316    0    4   11    6   27   0   0    5    0  6.460188
66692    6    6    6    6   28  14   0    2    0  4.453899
75463    0    5   11    0   28   0  12    0    2  5.613464
75951    6    7    0    9   26   0  29    5    2  6.738359
79572    3   11   11    0    0  16   0    0    5  5.729256
80348    8    0   11   11   29   0  29    2    0  4.509143
87348    6    0    6    5   13   1   0    0    3  4.243832
87783    0    4    5    7    0  29   0    2    3  4.264873

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
170    0.8333333 -0.8333333  0.8333333  0.8333333 -1.00000000 -0.13333333
3961  -0.1666667 -0.1666667 -0.1666667 -1.0000000 -0.73333333 -1.00000000
4851  -1.0000000 -0.5000000 -0.1666667 -1.0000000  0.06666667 -1.00000000
11906  0.0000000 -1.0000000  0.8333333  0.0000000 -0.20000000 -1.00000000
12650  0.8333333  0.0000000  0.8333333 -1.0000000 -0.20000000 -1.00000000
25949  0.1666667 -0.3333333  0.8333333  0.8333333  0.20000000  0.86666667
28980 -1.0000000  0.8333333 -0.8333333  0.8333333 -0.13333333 -1.00000000
40892  0.8333333  0.8333333 -1.0000000 -1.0000000 -0.80000000  0.86666667
41788  0.0000000 -1.0000000  0.3333333 -0.8333333  0.73333333  0.93333333
49149 -1.0000000 -1.0000000 -1.0000000 -1.0000000  0.06666667  0.06666667
52100 -1.0000000  0.8333333  0.0000000  0.8333333  0.33333333 -1.00000000
54208 -0.1666667 -0.6666667 -1.0000000  0.8333333 -0.93333333 -1.00000000
56351  0.8333333 -1.0000000 -1.0000000 -0.6666667  0.93333333 -1.00000000
59044  0.1666667  0.6666667  0.3333333 -1.0000000  0.93333333 -1.00000000
66316 -1.0000000 -0.3333333  0.8333333  0.0000000  0.80000000 -1.00000000
66692  0.0000000  0.0000000  0.0000000  0.0000000  0.86666667 -0.06666667
75463 -1.0000000 -0.1666667  0.8333333 -1.0000000  0.86666667 -1.00000000
75951  0.0000000  0.1666667 -1.0000000  0.5000000  0.73333333 -1.00000000
79572 -0.5000000  0.8333333  0.8333333 -1.0000000 -1.00000000  0.06666667
80348  0.3333333 -1.0000000  0.8333333  0.8333333  0.93333333 -1.00000000
87348  0.0000000 -1.0000000  0.0000000 -0.1666667 -0.13333333 -0.93333333
87783 -1.0000000 -0.3333333 -0.1666667  0.1666667 -1.00000000  0.93333333
            U_Je      RT_Ie      RT_Je cost_mean
170   -1.0000000  0.6666667 -0.3333333  6.836188
3961   0.0000000  0.6666667 -1.0000000  6.788936
4851   0.9333333 -1.0000000  0.6666667  6.481534
11906  0.2666667 -0.3333333  0.6666667  5.078039
12650  0.8666667 -0.3333333 -0.6666667  3.956920
25949 -1.0000000 -1.0000000  0.6666667  5.472676
28980 -1.0000000 -1.0000000 -1.0000000  5.693446
40892 -1.0000000  0.6666667 -1.0000000  6.354515
41788 -1.0000000  0.6666667 -0.3333333  6.978759
49149 -1.0000000 -0.3333333  0.6666667  4.868563
52100  0.0000000  0.0000000  0.3333333  4.502147
54208 -1.0000000 -0.3333333 -0.3333333  4.608996
56351 -0.2666667 -1.0000000  0.6666667  7.566261
59044 -0.9333333 -0.3333333  0.6666667  4.981332
66316 -1.0000000  0.6666667 -1.0000000  6.460188
66692 -1.0000000 -0.3333333 -1.0000000  4.453899
75463 -0.2000000 -1.0000000 -0.3333333  5.613464
75951  0.9333333  0.6666667 -0.3333333  6.738359
79572 -1.0000000 -1.0000000  0.6666667  5.729256
80348  0.9333333 -0.3333333 -1.0000000  4.509143
87348 -1.0000000 -1.0000000  0.0000000  4.243832
87783 -1.0000000 -0.3333333  0.0000000  4.264873

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 9.03244177431e-07
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1     6    7   11    9    1  28   0    2    5  4.901688
2     5    0    0    0   28   0  28    5    0  6.858167
3    11    4   11   11   22   0  29    5    2  6.922028
4     0    6    4    7    0   0  29    0    3  5.618930
5     7    0    7   11    0   0   0    0    5  5.594449
6    11    5    0    9    0  11   0    5    2  6.900852
7     0    3    0    7   11   0   1    2    0  4.732516
8    10   11   10   11   28  16   0    2    1  3.916675
9     0   11   11   11    1   0  10    5    2  6.920601
10    0    8    3    0   29   0   5    0    5  5.594899
11    9   10   11    0   17   0   0    5    2  6.813535
12    3    6   11    6   25  16   0    0    0  5.609453
13    0    6    4    9   21  27   0    5    0  5.609721
14    1   11    1   11   18   0  29    2    5  5.601343
15    0    2   11    0   28  29   0    3    2  4.620596
16    0    0   11   11   12   0  18    0    3  5.607590
17    5    0    6    6   29   0  14    3    2  4.145441
18    3    0    4    0   13  13   0    3    4  4.778346
19   11    1    0    6   16   0  16    0    5 11.075420
20    5    5    0   11   22   0  12    2    2  4.181950
21    9    5    9    0    1   0  15    1    0  4.419553
22    7   11    7    0   10  29   0    0    1  5.219507
23   11    1   11   11    0  13   0    5    2  6.836188
24    5    5    5    0    4   0  15    5    0  6.788936
25    0    3    5    0   16   0  29    0    5  6.481534
26    6    0   11    6   12   0  19    2    5  5.078039
27   11    6   11    0   12   0  28    2    1  3.956920
28    7    4   11   11   18  28   0    0    5  5.472676
29    0   11    1   11   13   0   0    0    0  5.693446
30   11   11    0    0    3  28   0    5    0  6.354515
31    6    0    8    1   26  29   0    5    2  6.978759
32    0    0    0    0   16  16   0    2    5  4.868563
33    0   11    6   11   20   0  15    3    4  4.502147
34    5    2    0   11    1   0   0    2    2  4.608996
35   11    0    0    2   29   0  11    0    5  7.566261
36    7   10    8    0   29   0   1    2    5  4.981332
37    0    4   11    6   27   0   0    5    0  6.460188
38    6    6    6    6   28  14   0    2    0  4.453899
39    0    5   11    0   28   0  12    0    2  5.613464
40    6    7    0    9   26   0  29    5    2  6.738359
41    3   11   11    0    0  16   0    0    5  5.729256
42    8    0   11   11   29   0  29    2    0  4.509143
43    6    0    6    5   13   1   0    0    3  4.243832
44    0    4    5    7    0  29   0    2    3  4.264873

Power Transform Successful
Regression Step:            Df   Sum Sq  Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.000580 0.000580   5.782   0.0239 *  
I(T1_J^2)    1 0.000000 0.000000   0.000   0.9961    
I(T2_I^2)    1 0.000158 0.000158   1.579   0.2206    
I(T2_J^2)    1 0.000091 0.000091   0.912   0.3488    
I(U1_I^2)    1 0.000052 0.000052   0.520   0.4775    
I(U_I^2)     1 0.000095 0.000095   0.946   0.3402    
I(U_J^2)     1 0.000153 0.000153   1.530   0.2276    
I(RT_I^2)    1 0.003111 0.003111  31.010 8.62e-06 ***
I(RT_J^2)    1 0.002304 0.002304  22.964 6.39e-05 ***
T1_I         1 0.000513 0.000513   5.110   0.0328 *  
T1_J         1 0.000000 0.000000   0.003   0.9553    
T2_I         1 0.000521 0.000521   5.193   0.0315 *  
T2_J         1 0.000069 0.000069   0.688   0.4147    
U1_I         1 0.000003 0.000003   0.031   0.8615    
U_I          1 0.000167 0.000167   1.660   0.2094    
U_J          1 0.000000 0.000000   0.001   0.9762    
RT_I         1 0.005892 0.005892  58.743 5.09e-08 ***
RT_J         1 0.000162 0.000162   1.617   0.2152    
Residuals   25 0.002508 0.000100                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
170    6.836188
3961   6.788936
4851   6.481534
11906  5.078039
12650  3.956920
25949  5.472676
28980  5.693446
40892  6.354515
41788  6.978759
49149  4.868563
52100  4.502147
54208  4.608996
56351  7.566261
59044  4.981332
66316  6.460188
66692  4.453899
75463  5.613464
75951  6.738359
79572  5.729256
80348  4.509143
87348  4.243832
87783  4.264873

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 6.385851739636304e-05, 'T1_J': 0.9552659100962946, 'T2_J': 0.4146900141050608, 'U_J': 0.9762230757984138, 'U_I': 0.20936043084052786, 'I(T2_I^2)': 0.2205513400023857, 'T2_I': 0.03147558127374773, 'U1_I': 0.8614975139694551, 'I(U_I^2)': 0.34016876486807646, 'I(RT_I^2)': 8.624332829334847e-06, 'I(T2_J^2)': 0.34880723074547393, 'I(U1_I^2)': 0.47751953712912, 'RT_I': 5.086288904358776e-08, 'I(T1_I^2)': 0.023921331987742052, 'I(T1_J^2)': 0.9961153017784421, 'I(U_J^2)': 0.2276184712010871, 'RT_J': 0.21523798515231013, 'T1_I': 0.03275109529889861}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'I(T1_I^2)', 'T2_I', 'T1_I', 'U_I', 'RT_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T2_J', 'I(U1_I^2)', 'U1_I', 'T1_J', 'U_J', 'I(T1_J^2)']
Variables within threshold: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'RT_J']
Predicting Best Values for: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'RT_J']
Using Model: cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2) + I(RT_J^2) + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2) + 
    I(RT_J^2) + RT_J, tau = 0.05, data = structure(list(T1_I = c(6, 
5, 11, 0, 7, 11, 0, 10, 0, 0, 9, 3, 0, 1, 0, 0, 5, 3, 11, 5, 
9, 7, 11, 5, 0, 6, 11, 7, 0, 11, 6, 0, 0, 5, 11, 7, 0, 6, 0, 
6, 3, 8, 6, 0), T1_J = c(7, 0, 4, 6, 0, 5, 3, 11, 11, 8, 10, 
6, 6, 11, 2, 0, 0, 0, 1, 5, 5, 11, 1, 5, 3, 0, 6, 4, 11, 11, 
0, 0, 11, 2, 0, 10, 4, 6, 5, 7, 11, 0, 0, 4), T2_I = c(11, 0, 
11, 4, 7, 0, 0, 10, 11, 3, 11, 11, 4, 1, 11, 11, 6, 4, 0, 0, 
9, 7, 11, 5, 5, 11, 11, 11, 1, 0, 8, 0, 6, 0, 0, 8, 11, 6, 11, 
0, 11, 11, 6, 5), T2_J = c(9, 0, 11, 7, 11, 9, 7, 11, 11, 0, 
0, 6, 9, 11, 0, 11, 6, 0, 6, 11, 0, 0, 11, 0, 0, 6, 0, 11, 11, 
0, 1, 0, 11, 11, 2, 0, 6, 6, 0, 9, 0, 11, 5, 7), U1_I = c(1, 
28, 22, 0, 0, 0, 11, 28, 1, 29, 17, 25, 21, 18, 28, 12, 29, 13, 
16, 22, 1, 10, 0, 4, 16, 12, 12, 18, 13, 3, 26, 16, 20, 1, 29, 
29, 27, 28, 28, 26, 0, 29, 13, 0), U_I = c(28, 0, 0, 0, 0, 11, 
0, 16, 0, 0, 0, 16, 27, 0, 29, 0, 0, 13, 0, 0, 0, 29, 13, 0, 
0, 0, 0, 28, 0, 28, 29, 16, 0, 0, 0, 0, 0, 14, 0, 0, 16, 0, 1, 
29), U_J = c(0, 28, 29, 29, 0, 0, 1, 0, 10, 5, 0, 0, 0, 29, 0, 
18, 14, 0, 16, 12, 15, 0, 0, 15, 29, 19, 28, 0, 0, 0, 0, 0, 15, 
0, 11, 1, 0, 0, 12, 29, 0, 29, 0, 0), RT_I = c(2, 5, 5, 0, 0, 
5, 2, 2, 5, 0, 5, 0, 5, 2, 3, 0, 3, 3, 0, 2, 1, 0, 5, 5, 0, 2, 
2, 0, 0, 5, 5, 2, 3, 2, 0, 2, 5, 2, 0, 5, 0, 2, 0, 2), RT_J = c(5, 
0, 2, 3, 5, 2, 0, 1, 2, 5, 2, 0, 0, 5, 2, 3, 2, 4, 5, 2, 0, 1, 
2, 0, 5, 5, 1, 5, 0, 0, 2, 5, 4, 2, 5, 5, 0, 0, 2, 2, 5, 0, 3, 
3), cost_mean = c(4.901688, 6.858167, 6.922028, 5.61893, 5.594449, 
6.900852, 4.732516, 3.916675, 6.920601, 5.594899, 6.813535, 5.609453, 
5.609721, 5.601343, 4.620596, 5.60759, 4.145441, 4.778346, 11.07542, 
4.18195, 4.419553, 5.219507, 6.836188, 6.788936, 6.481534, 5.078039, 
3.95692, 5.472676, 5.693446, 6.354515, 6.978759, 4.868563, 4.502147, 
4.608996, 7.566261, 4.981332, 6.460188, 4.453899, 5.613464, 6.738359, 
5.729256, 4.509143, 4.243832, 4.264873)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = c(NA, -44L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.550680e+00 -1.797693e+308   4.859560e+00
RT_I         -3.952800e-01 -1.797693e+308   6.286100e-01
I(RT_I^2)     1.214200e-01   1.167000e-01  1.797693e+308
I(RT_J^2)     1.134200e-01  -6.692000e-02  1.797693e+308
RT_J         -4.425300e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 259736
Valid coordinates: 10560/52800
Tested coordinates: 514449
Valid coordinates: 15840/52800
Tested coordinates: 763599
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1018208
Valid coordinates: 26400/52800
Tested coordinates: 1270770
Valid coordinates: 31680/52800
Tested coordinates: 1523293
Valid coordinates: 36960/52800
Tested coordinates: 1779374
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2034258
Valid coordinates: 47520/52800
Tested coordinates: 2291088
Valid coordinates: 52800/52800
Tested coordinates: 2539948
Valid/Tested configurations: 52800/2539948
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 6.385851739636304e-05, 'T1_J': 0.9552659100962946, 'T2_J': 0.4146900141050608, 'U_J': 0.9762230757984138, 'U_I': 0.20936043084052786, 'I(T2_I^2)': 0.2205513400023857, 'T2_I': 0.03147558127374773, 'U1_I': 0.8614975139694551, 'I(U_I^2)': 0.34016876486807646, 'I(RT_I^2)': 8.624332829334847e-06, 'I(T2_J^2)': 0.34880723074547393, 'I(U1_I^2)': 0.47751953712912, 'RT_I': 5.086288904358776e-08, 'I(T1_I^2)': 0.023921331987742052, 'I(T1_J^2)': 0.9961153017784421, 'I(U_J^2)': 0.2276184712010871, 'RT_J': 0.21523798515231013, 'T1_I': 0.03275109529889861}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'I(T1_I^2)', 'T2_I', 'T1_I', 'U_I', 'RT_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T2_J', 'I(U1_I^2)', 'U1_I', 'T1_J', 'U_J', 'I(T1_J^2)']
Variables within threshold: ['RT_I', 'RT_J']
Unique Variables: ['RT_I', 'RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 6.385851739636304e-05, 'T1_J': 0.9552659100962946, 'T2_J': 0.4146900141050608, 'U_J': 0.9762230757984138, 'U_I': 0.20936043084052786, 'I(T2_I^2)': 0.2205513400023857, 'T2_I': 0.03147558127374773, 'U1_I': 0.8614975139694551, 'I(U_I^2)': 0.34016876486807646, 'I(RT_I^2)': 8.624332829334847e-06, 'I(T2_J^2)': 0.34880723074547393, 'I(U1_I^2)': 0.47751953712912, 'RT_I': 5.086288904358776e-08, 'I(T1_I^2)': 0.023921331987742052, 'I(T1_J^2)': 0.9961153017784421, 'I(U_J^2)': 0.2276184712010871, 'RT_J': 0.21523798515231013, 'T1_I': 0.03275109529889861}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'I(T1_I^2)', 'T2_I', 'T1_I', 'U_I', 'RT_J', 'I(T2_I^2)', 'I(U_J^2)', 'I(U_I^2)', 'I(T2_J^2)', 'T2_J', 'I(U1_I^2)', 'U1_I', 'T1_J', 'U_J', 'I(T1_J^2)']
Variables within threshold: ['RT_I', 'RT_J']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
13   11    1   11    7   15   0  21    2    2

Best From Design: [11, 6, 11, 0, 12, 0, 28, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
5.790567
Design Best Point:
[11, 6, 11, 0, 12, 0, 28, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.683338954545
Predicted Best Point:
[11, 1, 11, 7, 15, 0, 21, 2, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[11, 1, 11, 7, 15, 0, 21, 2, 2]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1626
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2843
        Writes: 		319
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.305242
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.683338954545
Slowdown (Predicted Best): 1.26157628433
Budget: 44/1000
Best point from design was better than predicted point
Current Best Point: 
[10, 11, 10, 11, 28, 16, 0, 2, 1]
Step 2
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 55010
Valid coordinates: 2720/13600
Tested coordinates: 110413
Valid coordinates: 4080/13600
Tested coordinates: 164307
Valid coordinates: 5440/13600
Tested coordinates: 221794
Valid coordinates: 6800/13600
Tested coordinates: 276680
Valid coordinates: 8160/13600
Tested coordinates: 333977
Valid coordinates: 9520/13600
Tested coordinates: 388623
Valid coordinates: 10880/13600
Tested coordinates: 441880
Valid coordinates: 12240/13600
Tested coordinates: 497621
Valid coordinates: 13600/13600
Tested coordinates: 552471
Valid/Tested configurations: 13600/552471
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 154400      9

Pruned data dimensions: [1] 18189     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Clean Info:
One-Level Factors: ['RT_I', 'RT_J']
Two-Level Factors: ['RT_I', 'RT_J']
Three-Level Factors: ['RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 18189     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
229     11    5   11    7   13  28   0    2    2
1251    11    5    0    0    0   0  16    2    2
6599     6    6    0   11   16  17   0    2    2
6956     5    6    8    0   28  29   0    2    2
7602     7   10    8   11    0   0   0    2    2
9166     0   11   10   11   18   0  16    2    2
9569    11    0   11    8   27  10   0    2    2
9622     3    6   11    6    0   0  28    2    2
9958     0   11    0    0   29   0   0    2    2
12509   10   11    0    0   12   0  29    2    2
13321    0    6   11   11   29   0   1    2    2
13347    1    0    1    9    0  29   0    2    2
13431    4    3    5    6   29   0  16    2    2
13935    4    0   11    0   13   0   6    2    2
14464    0    4    3    6   15   0   0    2    2
16973    0    0    7   11   16   0  29    2    2
18060    0   10    7    0    0  14   0    2    2

D-Efficiency Approximation: [1] 0.2520837

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2071
        Multiplications: 	680
        Divisions: 		0
        Logical: 		0
        Reads: 			3612
        Writes: 		422
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.125569
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		1300
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2290
        Writes: 		247
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.412344
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1403
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2496
        Writes: 		304
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.231392
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2141
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3730
        Writes: 		444
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.089903
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		288
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			589
        Writes: 		79
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.0687
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1323
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2335
        Writes: 		268
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.060878
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		978
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1783
        Writes: 		232
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.066839
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		2023
        Multiplications: 	680
        Divisions: 		0
        Logical: 		0
        Reads: 			3497
        Writes: 		369
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.260016
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		308
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			627
        Writes: 		103
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.164452
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2097
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3623
        Writes: 		392
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.054569
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		440
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			871
        Writes: 		133
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.107318
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2 must be greater than the stride value 2; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		2105
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3658
        Writes: 		411
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.597601
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		1343
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2378
        Writes: 		285
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.567727
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		627
        Multiplications: 	208
        Divisions: 		0
        Logical: 		0
        Reads: 			1138
        Writes: 		142
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.452603
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		305
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			621
        Writes: 		95
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.197139
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2101
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3631
        Writes: 		396
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.055693
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		1190
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2128
        Writes: 		246
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.058102
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
229     11    5   11    7   13  28   0    2    2  4.125569
1251    11    5    0    0    0   0  16    2    2  4.412344
6599     6    6    0   11   16  17   0    2    2  4.231392
6956     5    6    8    0   28  29   0    2    2  4.089903
7602     7   10    8   11    0   0   0    2    2  4.068700
9166     0   11   10   11   18   0  16    2    2  4.060878
9569    11    0   11    8   27  10   0    2    2  4.066839
9622     3    6   11    6    0   0  28    2    2  4.260016
9958     0   11    0    0   29   0   0    2    2  4.164452
12509   10   11    0    0   12   0  29    2    2  4.054569
13321    0    6   11   11   29   0   1    2    2  4.107318
13347    1    0    1    9    0  29   0    2    2  5.597601
13431    4    3    5    6   29   0  16    2    2  4.567727
13935    4    0   11    0   13   0   6    2    2  4.452603
14464    0    4    3    6   15   0   0    2    2  4.197139
16973    0    0    7   11   16   0  29    2    2  4.055693
18060    0   10    7    0    0  14   0    2    2  4.058102

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
229     11    5   11    7   13  28   0    2    2  4.125569
1251    11    5    0    0    0   0  16    2    2  4.412344
6599     6    6    0   11   16  17   0    2    2  4.231392
6956     5    6    8    0   28  29   0    2    2  4.089903
7602     7   10    8   11    0   0   0    2    2  4.068700
9166     0   11   10   11   18   0  16    2    2  4.060878
9569    11    0   11    8   27  10   0    2    2  4.066839
9622     3    6   11    6    0   0  28    2    2  4.260016
9958     0   11    0    0   29   0   0    2    2  4.164452
12509   10   11    0    0   12   0  29    2    2  4.054569
13321    0    6   11   11   29   0   1    2    2  4.107318
13347    1    0    1    9    0  29   0    2    2  5.597601
13431    4    3    5    6   29   0  16    2    2  4.567727
13935    4    0   11    0   13   0   6    2    2  4.452603
14464    0    4    3    6   15   0   0    2    2  4.197139
16973    0    0    7   11   16   0  29    2    2  4.055693
18060    0   10    7    0    0  14   0    2    2  4.058102

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
229    0.8333333 -0.1666667  0.8333333  0.1666667 -0.13333333  0.86666667
1251   0.8333333 -0.1666667 -1.0000000 -1.0000000 -1.00000000 -1.00000000
6599   0.0000000  0.0000000 -1.0000000  0.8333333  0.06666667  0.13333333
6956  -0.1666667  0.0000000  0.3333333 -1.0000000  0.86666667  0.93333333
7602   0.1666667  0.6666667  0.3333333  0.8333333 -1.00000000 -1.00000000
9166  -1.0000000  0.8333333  0.6666667  0.8333333  0.20000000 -1.00000000
9569   0.8333333 -1.0000000  0.8333333  0.3333333  0.80000000 -0.33333333
9622  -0.5000000  0.0000000  0.8333333  0.0000000 -1.00000000 -1.00000000
9958  -1.0000000  0.8333333 -1.0000000 -1.0000000  0.93333333 -1.00000000
12509  0.6666667  0.8333333 -1.0000000 -1.0000000 -0.20000000 -1.00000000
13321 -1.0000000  0.0000000  0.8333333  0.8333333  0.93333333 -1.00000000
13347 -0.8333333 -1.0000000 -0.8333333  0.5000000 -1.00000000  0.93333333
13431 -0.3333333 -0.5000000 -0.1666667  0.0000000  0.93333333 -1.00000000
13935 -0.3333333 -1.0000000  0.8333333 -1.0000000 -0.13333333 -1.00000000
14464 -1.0000000 -0.3333333 -0.5000000  0.0000000  0.00000000 -1.00000000
16973 -1.0000000 -1.0000000  0.1666667  0.8333333  0.06666667 -1.00000000
18060 -1.0000000  0.6666667  0.1666667 -1.0000000 -1.00000000 -0.06666667
             U_Je      RT_Ie      RT_Je cost_mean
229   -1.00000000 -0.3333333 -0.3333333  4.125569
1251   0.06666667 -0.3333333 -0.3333333  4.412344
6599  -1.00000000 -0.3333333 -0.3333333  4.231392
6956  -1.00000000 -0.3333333 -0.3333333  4.089903
7602  -1.00000000 -0.3333333 -0.3333333  4.068700
9166   0.06666667 -0.3333333 -0.3333333  4.060878
9569  -1.00000000 -0.3333333 -0.3333333  4.066839
9622   0.86666667 -0.3333333 -0.3333333  4.260016
9958  -1.00000000 -0.3333333 -0.3333333  4.164452
12509  0.93333333 -0.3333333 -0.3333333  4.054569
13321 -0.93333333 -0.3333333 -0.3333333  4.107318
13347 -1.00000000 -0.3333333 -0.3333333  5.597601
13431  0.06666667 -0.3333333 -0.3333333  4.567727
13935 -0.60000000 -0.3333333 -0.3333333  4.452603
14464 -1.00000000 -0.3333333 -0.3333333  4.197139
16973  0.93333333 -0.3333333 -0.3333333  4.055693
18060 -1.00000000 -0.3333333 -0.3333333  4.058102

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + 
    U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 19 10

Heteroscedasticity Test p-value: 0.678896054096
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1 0.0823  0.0823   1.863 0.2440  
I(T1_J^2)    1 0.4740  0.4740  10.726 0.0306 *
I(T2_I^2)    1 0.2899  0.2899   6.561 0.0625 .
I(T2_J^2)    1 0.0124  0.0124   0.281 0.6243  
I(U1_I^2)    1 0.1526  0.1526   3.453 0.1367  
I(U_I^2)     1 0.2367  0.2367   5.355 0.0817 .
I(U_J^2)     1 0.0147  0.0147   0.333 0.5948  
T1_I         1 0.0007  0.0007   0.015 0.9074  
T1_J         1 0.2152  0.2152   4.870 0.0920 .
T2_I         1 0.1242  0.1242   2.810 0.1690  
T2_J         1 0.1422  0.1422   3.219 0.1472  
U1_I         1 0.2465  0.2465   5.578 0.0775 .
U_I          1 0.0775  0.0775   1.754 0.2560  
U_J          1 0.1395  0.1395   3.156 0.1503  
Residuals    4 0.1768  0.0442                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
229    4.125569
1251   4.412344
6599   4.231392
6956   4.089903
7602   4.068700
9166   4.060878
9569   4.066839
9622   4.260016
9958   4.164452
12509  4.054569
13321  4.107318
13347  5.597601
13431  4.567727
13935  4.452603
14464  4.197139
16973  4.055693
18060  4.058102

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.9074265547768312, 'T1_J': 0.0919552213128507, 'T2_J': 0.14723847939077297, 'U_J': 0.15027536581350284, 'U_I': 0.25595681379772695, 'I(T2_I^2)': 0.06253883975863538, 'U1_I': 0.07751604771289372, 'I(U_I^2)': 0.08165933182558509, 'T2_I': 0.1690132958023398, 'I(T2_J^2)': 0.6243233041687278, 'I(U1_I^2)': 0.13666230519467137, 'I(T1_I^2)': 0.24403143328747684, 'I(T1_J^2)': 0.030643513177200845, 'I(U_J^2)': 0.5947990912329418}
Ordered Keys: 
['I(T1_J^2)', 'I(T2_I^2)', 'U1_I', 'I(U_I^2)', 'T1_J', 'I(U1_I^2)', 'T2_J', 'U_J', 'T2_I', 'I(T1_I^2)', 'U_I', 'I(U_J^2)', 'I(T2_J^2)', 'T1_I']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 19 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J, tau = 0.05, data = structure(list(
    T1_I = c(5, 5, 11, 11, 6, 5, 7, 0, 11, 3, 0, 10, 0, 1, 4, 
    4, 0, 0, 0), T1_J = c(5, 2, 5, 5, 6, 6, 10, 11, 0, 6, 11, 
    11, 6, 0, 3, 0, 4, 0, 10), T2_I = c(0, 0, 11, 0, 0, 8, 8, 
    10, 11, 11, 0, 0, 11, 1, 5, 11, 3, 7, 7), T2_J = c(11, 11, 
    7, 0, 11, 0, 11, 11, 8, 6, 0, 0, 11, 9, 6, 0, 6, 11, 0), 
    U1_I = c(22, 1, 13, 0, 16, 28, 0, 18, 27, 0, 29, 12, 29, 
    0, 29, 13, 15, 16, 0), U_I = c(0, 0, 28, 0, 17, 29, 0, 0, 
    10, 0, 0, 0, 0, 29, 0, 0, 0, 0, 14), U_J = c(12, 0, 0, 16, 
    0, 0, 0, 16, 0, 28, 0, 29, 1, 0, 16, 6, 0, 29, 0), RT_I = c(2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), cost_mean = c(4.18195, 
    4.608996, 4.125569, 4.412344, 4.231392, 4.089903, 4.0687, 
    4.060878, 4.066839, 4.260016, 4.164452, 4.054569, 4.107318, 
    5.597601, 4.567727, 4.452603, 4.197139, 4.055693, 4.058102
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(20L, 34L, 
45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 
58L, 59L, 60L, 61L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.960230e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -5.830000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)     1.482000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)     2.450000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -1.286000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)     7.700000e-04 -1.797693e+308  1.797693e+308
I(U_I^2)      1.430000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)     -1.430000e-03 -1.797693e+308  1.797693e+308
T1_I          4.788000e-02 -1.797693e+308  1.797693e+308
T1_J         -1.974000e-01 -1.797693e+308  1.797693e+308
T2_I         -6.662000e-02 -1.797693e+308  1.797693e+308
T2_J          1.347700e-01 -1.797693e+308  1.797693e+308
U1_I         -3.683000e-02 -1.797693e+308  1.797693e+308
U_I          -2.458000e-02 -1.797693e+308  1.797693e+308
U_J           3.838000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 163390
Valid coordinates: 8160/40800
Tested coordinates: 320889
Valid coordinates: 12240/40800
Tested coordinates: 483584
Valid coordinates: 16320/40800
Tested coordinates: 646722
Valid coordinates: 20400/40800
Tested coordinates: 806106
Valid coordinates: 24480/40800
Tested coordinates: 969645
Tested coordinates: 1000000
Valid coordinates: 28560/40800
Tested coordinates: 1127948
Valid coordinates: 32640/40800
Tested coordinates: 1291753
Valid coordinates: 36720/40800
Tested coordinates: 1456550
Valid coordinates: 40800/40800
Tested coordinates: 1618969
Valid/Tested configurations: 40800/1618969
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 195200      9

Pruned data dimensions: [1] 58989     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.9074265547768312, 'T1_J': 0.0919552213128507, 'T2_J': 0.14723847939077297, 'U_J': 0.15027536581350284, 'U_I': 0.25595681379772695, 'I(T2_I^2)': 0.06253883975863538, 'U1_I': 0.07751604771289372, 'I(U_I^2)': 0.08165933182558509, 'T2_I': 0.1690132958023398, 'I(T2_J^2)': 0.6243233041687278, 'I(U1_I^2)': 0.13666230519467137, 'I(T1_I^2)': 0.24403143328747684, 'I(T1_J^2)': 0.030643513177200845, 'I(U_J^2)': 0.5947990912329418}
Ordered Keys: 
['I(T1_J^2)', 'I(T2_I^2)', 'U1_I', 'I(U_I^2)', 'T1_J', 'I(U1_I^2)', 'T2_J', 'U_J', 'T2_I', 'I(T1_I^2)', 'U_I', 'I(U_J^2)', 'I(T2_J^2)', 'T1_I']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.9074265547768312, 'T1_J': 0.0919552213128507, 'T2_J': 0.14723847939077297, 'U_J': 0.15027536581350284, 'U_I': 0.25595681379772695, 'I(T2_I^2)': 0.06253883975863538, 'U1_I': 0.07751604771289372, 'I(U_I^2)': 0.08165933182558509, 'T2_I': 0.1690132958023398, 'I(T2_J^2)': 0.6243233041687278, 'I(U1_I^2)': 0.13666230519467137, 'I(T1_I^2)': 0.24403143328747684, 'I(T1_J^2)': 0.030643513177200845, 'I(U_J^2)': 0.5947990912329418}
Ordered Keys: 
['I(T1_J^2)', 'I(T2_I^2)', 'U1_I', 'I(U_I^2)', 'T1_J', 'I(U1_I^2)', 'T2_J', 'U_J', 'T2_I', 'I(T1_I^2)', 'U_I', 'I(U_J^2)', 'I(T2_J^2)', 'T1_I']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
29647    1    0    7   11    0  26   0    3    3

Best From Design: [10, 11, 0, 0, 12, 0, 29, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
5.790567
Design Best Point:
[10, 11, 0, 0, 12, 0, 29, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.700202415411
Predicted Best Point:
[1, 0, 7, 11, 0, 26, 0, 3, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 0, 7, 11, 0, 26, 0, 3, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		4121
        Multiplications: 	1296
        Divisions: 		0
        Logical: 		0
        Reads: 			6639
        Writes: 		708
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.606709
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.700202415411
Slowdown (Predicted Best): 0.968248705179
Budget: 61/1000
Best point from design was better than predicted point
Current Best Point: 
[10, 11, 10, 11, 28, 16, 0, 2, 1]
Step 3
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 56058
Valid coordinates: 2720/13600
Tested coordinates: 108125
Valid coordinates: 4080/13600
Tested coordinates: 162056
Valid coordinates: 5440/13600
Tested coordinates: 215029
Valid coordinates: 6800/13600
Tested coordinates: 269855
Valid coordinates: 8160/13600
Tested coordinates: 324852
Valid coordinates: 9520/13600
Tested coordinates: 376750
Valid coordinates: 10880/13600
Tested coordinates: 432259
Valid coordinates: 12240/13600
Tested coordinates: 483363
Valid coordinates: 13600/13600
Tested coordinates: 539225
Valid/Tested configurations: 13600/539225
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 208800      9

Pruned data dimensions: [1] 72589     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Clean Info:
One-Level Factors: ['RT_I', 'RT_J']
Two-Level Factors: ['RT_I', 'RT_J']
Three-Level Factors: ['RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 72589     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
2998    11    4    0    0    1   0  22    2    2
11816   11    4   11    6   28  17   0    2    2
11930    7   11   11   11    7   0  29    2    2
16347    7    6    7    6    0   1   0    2    2
19023    0   11    6   11   18  29   0    2    2
21374    0    0    5    5   29   0  29    2    2
27714    6   11   11    0   28   0  13    2    2
29410   11   11    0    0   29   0   1    2    2
30428    5    0    5    0   19  12   0    2    2
36139    0    7   11    0   12   0   0    2    2
39507   11    0   11   11   12   0   5    2    2
40135    0    0    0    5    6   0  13    2    2
42699    4    5    0    7   15  29   0    2    2
56955    3    1    0   11   29   0   0    2    2
60111    0    5    6   11   29   0  16    2    2
66258    1    0   10    0    0  29   0    2    2
69794    1   10    0   11    1  13   0    2    2

D-Efficiency Approximation: [1] 0.2608969

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1666
        Multiplications: 	560
        Divisions: 		0
        Logical: 		0
        Reads: 			2901
        Writes: 		311
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.274904
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1415
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2520
        Writes: 		316
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.20597
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2095
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3620
        Writes: 		389
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.210707
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		397
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			802
        Writes: 		103
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.084602
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2128
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3703
        Writes: 		432
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.060207
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2114
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3657
        Writes: 		409
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.272405
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1156
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2062
        Writes: 		250
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.351761
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		434
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			857
        Writes: 		129
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.059955
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		958
        Multiplications: 	304
        Divisions: 		0
        Logical: 		0
        Reads: 			1657
        Writes: 		209
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.057147
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		296
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			601
        Writes: 		88
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.219281
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		657
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1223
        Writes: 		152
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.156217
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		1126
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2003
        Writes: 		224
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.162636
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2134
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3718
        Writes: 		435
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest78.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.127626
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		319
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			649
        Writes: 		109
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest79.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.195997
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1340
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2371
        Writes: 		283
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest80.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.323471
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1821
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3011
        Writes: 		342
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest81.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.715352
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1144
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2058
        Writes: 		245
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest82.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.594704
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2998    11    4    0    0    1   0  22    2    2  4.274904
11816   11    4   11    6   28  17   0    2    2  4.205970
11930    7   11   11   11    7   0  29    2    2  4.210707
16347    7    6    7    6    0   1   0    2    2  4.084602
19023    0   11    6   11   18  29   0    2    2  4.060207
21374    0    0    5    5   29   0  29    2    2  4.272405
27714    6   11   11    0   28   0  13    2    2  4.351761
29410   11   11    0    0   29   0   1    2    2  4.059955
30428    5    0    5    0   19  12   0    2    2  4.057147
36139    0    7   11    0   12   0   0    2    2  4.219281
39507   11    0   11   11   12   0   5    2    2  4.156217
40135    0    0    0    5    6   0  13    2    2  4.162636
42699    4    5    0    7   15  29   0    2    2  4.127626
56955    3    1    0   11   29   0   0    2    2  5.195997
60111    0    5    6   11   29   0  16    2    2  4.323471
66258    1    0   10    0    0  29   0    2    2  5.715352
69794    1   10    0   11    1  13   0    2    2  5.594704

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2998    11    4    0    0    1   0  22    2    2  4.274904
11816   11    4   11    6   28  17   0    2    2  4.205970
11930    7   11   11   11    7   0  29    2    2  4.210707
16347    7    6    7    6    0   1   0    2    2  4.084602
19023    0   11    6   11   18  29   0    2    2  4.060207
21374    0    0    5    5   29   0  29    2    2  4.272405
27714    6   11   11    0   28   0  13    2    2  4.351761
29410   11   11    0    0   29   0   1    2    2  4.059955
30428    5    0    5    0   19  12   0    2    2  4.057147
36139    0    7   11    0   12   0   0    2    2  4.219281
39507   11    0   11   11   12   0   5    2    2  4.156217
40135    0    0    0    5    6   0  13    2    2  4.162636
42699    4    5    0    7   15  29   0    2    2  4.127626
56955    3    1    0   11   29   0   0    2    2  5.195997
60111    0    5    6   11   29   0  16    2    2  4.323471
66258    1    0   10    0    0  29   0    2    2  5.715352
69794    1   10    0   11    1  13   0    2    2  5.594704

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je      U1_Ie       U_Ie
2998   0.8333333 -0.3333333 -1.0000000 -1.0000000 -0.9333333 -1.0000000
11816  0.8333333 -0.3333333  0.8333333  0.0000000  0.8666667  0.1333333
11930  0.1666667  0.8333333  0.8333333  0.8333333 -0.5333333 -1.0000000
16347  0.1666667  0.0000000  0.1666667  0.0000000 -1.0000000 -0.9333333
19023 -1.0000000  0.8333333  0.0000000  0.8333333  0.2000000  0.9333333
21374 -1.0000000 -1.0000000 -0.1666667 -0.1666667  0.9333333 -1.0000000
27714  0.0000000  0.8333333  0.8333333 -1.0000000  0.8666667 -1.0000000
29410  0.8333333  0.8333333 -1.0000000 -1.0000000  0.9333333 -1.0000000
30428 -0.1666667 -1.0000000 -0.1666667 -1.0000000  0.2666667 -0.2000000
36139 -1.0000000  0.1666667  0.8333333 -1.0000000 -0.2000000 -1.0000000
39507  0.8333333 -1.0000000  0.8333333  0.8333333 -0.2000000 -1.0000000
40135 -1.0000000 -1.0000000 -1.0000000 -0.1666667 -0.6000000 -1.0000000
42699 -0.3333333 -0.1666667 -1.0000000  0.1666667  0.0000000  0.9333333
56955 -0.5000000 -0.8333333 -1.0000000  0.8333333  0.9333333 -1.0000000
60111 -1.0000000 -0.1666667  0.0000000  0.8333333  0.9333333 -1.0000000
66258 -0.8333333 -1.0000000  0.6666667 -1.0000000 -1.0000000  0.9333333
69794 -0.8333333  0.6666667 -1.0000000  0.8333333 -0.9333333 -0.1333333
             U_Je      RT_Ie      RT_Je cost_mean
2998   0.46666667 -0.3333333 -0.3333333  4.274904
11816 -1.00000000 -0.3333333 -0.3333333  4.205970
11930  0.93333333 -0.3333333 -0.3333333  4.210707
16347 -1.00000000 -0.3333333 -0.3333333  4.084602
19023 -1.00000000 -0.3333333 -0.3333333  4.060207
21374  0.93333333 -0.3333333 -0.3333333  4.272405
27714 -0.13333333 -0.3333333 -0.3333333  4.351761
29410 -0.93333333 -0.3333333 -0.3333333  4.059955
30428 -1.00000000 -0.3333333 -0.3333333  4.057147
36139 -1.00000000 -0.3333333 -0.3333333  4.219281
39507 -0.66666667 -0.3333333 -0.3333333  4.156217
40135 -0.13333333 -0.3333333 -0.3333333  4.162636
42699 -1.00000000 -0.3333333 -0.3333333  4.127626
56955 -1.00000000 -0.3333333 -0.3333333  5.195997
60111  0.06666667 -0.3333333 -0.3333333  4.323471
66258 -1.00000000 -0.3333333 -0.3333333  5.715352
69794 -1.00000000 -0.3333333 -0.3333333  5.594704

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + 
    U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 78 10

Pruned data dimensions: [1] 36 10

Heteroscedasticity Test p-value: 0.0283365748606
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
20    5    5    0   11   22   0  12    2    2  4.181950
34    5    2    0   11    1   0   0    2    2  4.608996
45   11    5   11    7   13  28   0    2    2  4.125569
46   11    5    0    0    0   0  16    2    2  4.412344
47    6    6    0   11   16  17   0    2    2  4.231392
48    5    6    8    0   28  29   0    2    2  4.089903
49    7   10    8   11    0   0   0    2    2  4.068700
50    0   11   10   11   18   0  16    2    2  4.060878
51   11    0   11    8   27  10   0    2    2  4.066839
52    3    6   11    6    0   0  28    2    2  4.260016
53    0   11    0    0   29   0   0    2    2  4.164452
54   10   11    0    0   12   0  29    2    2  4.054569
55    0    6   11   11   29   0   1    2    2  4.107318
56    1    0    1    9    0  29   0    2    2  5.597601
57    4    3    5    6   29   0  16    2    2  4.567727
58    4    0   11    0   13   0   6    2    2  4.452603
59    0    4    3    6   15   0   0    2    2  4.197139
60    0    0    7   11   16   0  29    2    2  4.055693
61    0   10    7    0    0  14   0    2    2  4.058102
62   11    4    0    0    1   0  22    2    2  4.274904
63   11    4   11    6   28  17   0    2    2  4.205970
64    7   11   11   11    7   0  29    2    2  4.210707
65    7    6    7    6    0   1   0    2    2  4.084602
66    0   11    6   11   18  29   0    2    2  4.060207
67    0    0    5    5   29   0  29    2    2  4.272405
68    6   11   11    0   28   0  13    2    2  4.351761
69   11   11    0    0   29   0   1    2    2  4.059955
70    5    0    5    0   19  12   0    2    2  4.057147
71    0    7   11    0   12   0   0    2    2  4.219281
72   11    0   11   11   12   0   5    2    2  4.156217
73    0    0    0    5    6   0  13    2    2  4.162636
74    4    5    0    7   15  29   0    2    2  4.127626
75    3    1    0   11   29   0   0    2    2  5.195997
76    0    5    6   11   29   0  16    2    2  4.323471
77    1    0   10    0    0  29   0    2    2  5.715352
78    1   10    0   11    1  13   0    2    2  5.594704

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value  Pr(>F)   
I(T1_I^2)    1 1.223e-17 1.223e-17   2.626 0.12007   
I(T1_J^2)    1 2.628e-17 2.628e-17   5.642 0.02713 * 
I(T2_I^2)    1 3.040e-18 3.040e-18   0.652 0.42849   
I(T2_J^2)    1 8.000e-20 8.000e-20   0.017 0.89877   
I(U1_I^2)    1 1.540e-18 1.540e-18   0.331 0.57113   
I(U_I^2)     1 6.000e-20 6.000e-20   0.013 0.90883   
I(U_J^2)     1 6.300e-19 6.300e-19   0.135 0.71656   
T1_I         1 3.920e-18 3.920e-18   0.841 0.36956   
T1_J         1 9.800e-19 9.800e-19   0.211 0.65061   
T2_I         1 3.335e-17 3.335e-17   7.161 0.01414 * 
T2_J         1 1.230e-18 1.230e-18   0.263 0.61319   
U1_I         1 4.724e-17 4.724e-17  10.143 0.00446 **
U_I          1 2.900e-19 2.900e-19   0.063 0.80417   
U_J          1 6.400e-18 6.400e-18   1.374 0.25421   
Residuals   21 9.781e-17 4.660e-18                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
2998   4.274904
11816  4.205970
11930  4.210707
16347  4.084602
19023  4.060207
21374  4.272405
27714  4.351761
29410  4.059955
30428  4.057147
36139  4.219281
39507  4.156217
40135  4.162636
42699  4.127626
56955  5.195997
60111  4.323471
66258  5.715352
69794  5.594704

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.36955710310432677, 'T1_J': 0.6506098743050559, 'T2_J': 0.6131900822824945, 'U_J': 0.2542058758269052, 'U_I': 0.8041676893804288, 'I(T2_I^2)': 0.4284903677863011, 'U1_I': 0.004457864705451513, 'I(U_I^2)': 0.9088268743532097, 'T2_I': 0.01414379692478325, 'I(T2_J^2)': 0.8987694937988219, 'I(U1_I^2)': 0.5711288398658421, 'I(T1_I^2)': 0.12006865894473641, 'I(T1_J^2)': 0.027131611679711364, 'I(U_J^2)': 0.716556467552649}
Ordered Keys: 
['U1_I', 'T2_I', 'I(T1_J^2)', 'I(T1_I^2)', 'U_J', 'T1_I', 'I(T2_I^2)', 'I(U1_I^2)', 'T2_J', 'T1_J', 'I(U_J^2)', 'U_I', 'I(T2_J^2)', 'I(U_I^2)']
Variables within threshold: ['U1_I', 'I(U1_I^2)']
Predicting Best Values for: ['U1_I', 'I(U1_I^2)']
Using Model: cost_mean ~ U1_I + I(U1_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 78 10

Pruned data dimensions: [1] 36 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ U1_I + I(U1_I^2), tau = 0.05, data = structure(list(
    T1_I = c(5, 5, 11, 11, 6, 5, 7, 0, 11, 3, 0, 10, 0, 1, 4, 
    4, 0, 0, 0, 11, 11, 7, 7, 0, 0, 6, 11, 5, 0, 11, 0, 4, 3, 
    0, 1, 1), T1_J = c(5, 2, 5, 5, 6, 6, 10, 11, 0, 6, 11, 11, 
    6, 0, 3, 0, 4, 0, 10, 4, 4, 11, 6, 11, 0, 11, 11, 0, 7, 0, 
    0, 5, 1, 5, 0, 10), T2_I = c(0, 0, 11, 0, 0, 8, 8, 10, 11, 
    11, 0, 0, 11, 1, 5, 11, 3, 7, 7, 0, 11, 11, 7, 6, 5, 11, 
    0, 5, 11, 11, 0, 0, 0, 6, 10, 0), T2_J = c(11, 11, 7, 0, 
    11, 0, 11, 11, 8, 6, 0, 0, 11, 9, 6, 0, 6, 11, 0, 0, 6, 11, 
    6, 11, 5, 0, 0, 0, 0, 11, 5, 7, 11, 11, 0, 11), U1_I = c(22, 
    1, 13, 0, 16, 28, 0, 18, 27, 0, 29, 12, 29, 0, 29, 13, 15, 
    16, 0, 1, 28, 7, 0, 18, 29, 28, 29, 19, 12, 12, 6, 15, 29, 
    29, 0, 1), U_I = c(0, 0, 28, 0, 17, 29, 0, 0, 10, 0, 0, 0, 
    0, 29, 0, 0, 0, 0, 14, 0, 17, 0, 1, 29, 0, 0, 0, 12, 0, 0, 
    0, 29, 0, 0, 29, 13), U_J = c(12, 0, 0, 16, 0, 0, 0, 16, 
    0, 28, 0, 29, 1, 0, 16, 6, 0, 29, 0, 22, 0, 29, 0, 0, 29, 
    13, 1, 0, 0, 5, 13, 0, 0, 16, 0, 0), RT_I = c(2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), cost_mean = c(4.18195, 
    4.608996, 4.125569, 4.412344, 4.231392, 4.089903, 4.0687, 
    4.060878, 4.066839, 4.260016, 4.164452, 4.054569, 4.107318, 
    5.597601, 4.567727, 4.452603, 4.197139, 4.055693, 4.058102, 
    4.274904, 4.20597, 4.210707, 4.084602, 4.060207, 4.272405, 
    4.351761, 4.059955, 4.057147, 4.219281, 4.156217, 4.162636, 
    4.127626, 5.195997, 4.323471, 5.715352, 5.594704)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = c(20L, 34L, 45L, 46L, 47L, 48L, 49L, 
50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 
63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 
76L, 77L, 78L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.058100e+00 -1.797693e+308   4.064370e+00
U1_I         -5.500000e-04 -1.797693e+308  1.797693e+308
I(U1_I^2)     2.000000e-05   0.000000e+00  1.797693e+308

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 162356
Valid coordinates: 8160/40800
Tested coordinates: 327120
Valid coordinates: 12240/40800
Tested coordinates: 495186
Valid coordinates: 16320/40800
Tested coordinates: 659801
Valid coordinates: 20400/40800
Tested coordinates: 821673
Valid coordinates: 24480/40800
Tested coordinates: 987924
Tested coordinates: 1000000
Valid coordinates: 28560/40800
Tested coordinates: 1148165
Valid coordinates: 32640/40800
Tested coordinates: 1309469
Valid coordinates: 36720/40800
Tested coordinates: 1469899
Valid coordinates: 40800/40800
Tested coordinates: 1631145
Valid/Tested configurations: 40800/1631145
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 249600      9

Pruned data dimensions: [1] 113389      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.36955710310432677, 'T1_J': 0.6506098743050559, 'T2_J': 0.6131900822824945, 'U_J': 0.2542058758269052, 'U_I': 0.8041676893804288, 'I(T2_I^2)': 0.4284903677863011, 'U1_I': 0.004457864705451513, 'I(U_I^2)': 0.9088268743532097, 'T2_I': 0.01414379692478325, 'I(T2_J^2)': 0.8987694937988219, 'I(U1_I^2)': 0.5711288398658421, 'I(T1_I^2)': 0.12006865894473641, 'I(T1_J^2)': 0.027131611679711364, 'I(U_J^2)': 0.716556467552649}
Ordered Keys: 
['U1_I', 'T2_I', 'I(T1_J^2)', 'I(T1_I^2)', 'U_J', 'T1_I', 'I(T2_I^2)', 'I(U1_I^2)', 'T2_J', 'T1_J', 'I(U_J^2)', 'U_I', 'I(T2_J^2)', 'I(U_I^2)']
Variables within threshold: ['U1_I']
Unique Variables: ['U1_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.36955710310432677, 'T1_J': 0.6506098743050559, 'T2_J': 0.6131900822824945, 'U_J': 0.2542058758269052, 'U_I': 0.8041676893804288, 'I(T2_I^2)': 0.4284903677863011, 'U1_I': 0.004457864705451513, 'I(U_I^2)': 0.9088268743532097, 'T2_I': 0.01414379692478325, 'I(T2_J^2)': 0.8987694937988219, 'I(U1_I^2)': 0.5711288398658421, 'I(T1_I^2)': 0.12006865894473641, 'I(T1_J^2)': 0.027131611679711364, 'I(U_J^2)': 0.716556467552649}
Ordered Keys: 
['U1_I', 'T2_I', 'I(T1_J^2)', 'I(T1_I^2)', 'U_J', 'T1_I', 'I(T2_I^2)', 'I(U1_I^2)', 'T2_J', 'T1_J', 'I(U_J^2)', 'U_I', 'I(T2_J^2)', 'I(U_I^2)']
Variables within threshold: ['U1_I']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
31    2    0    5    5    5   2   0    4    2

Best From Design: [5, 0, 5, 0, 19, 12, 0, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 5, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
5.790567
Design Best Point:
[5, 0, 5, 0, 19, 12, 0, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.700647622245
Predicted Best Point:
[2, 0, 5, 5, 5, 2, 0, 4, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 0, 5, 5, 5, 2, 0, 4, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1191
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2130
        Writes: 		244
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest83.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.465087
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U1_I': 5, 'RT_J': 2, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.700647622245
Slowdown (Predicted Best): 0.771096681897
Budget: 78/1000
Best point from design was better than predicted point
Current Best Point: 
[10, 11, 10, 11, 28, 16, 0, 2, 1]
Final Best Point: 
[10, 11, 10, 11, 28, 16, 0, 2, 1]
Ending DLMT
Best Point: [10, 11, 10, 11, 28, 16, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.47843949268
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.47843949268
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [10, 11, 10, 11, 28, 16, 0, 2, 1]={'T1_I': 1024, 'T1_J': 2048, 'U_J': 1, 'U_I': 17, 'T2_I': 1024, 'T2_J': 2048, 'U1_I': 29, 'RT_I': 4, 'RT_J': 2}, cost=3.916675e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-10926.26, runs=83
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 1024
 T1_J = 2048
 T2_I = 1024
 T2_J = 2048
 U1_I = 29
 U_I = 17
 U_J = 1
 cost_mean = 3.916675
 points = 83
 speedup = 1.47843949268
 step = 4
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		759
        Multiplications: 	264
        Divisions: 		0
        Logical: 		0
        Reads: 			1517
        Writes: 		211
        Comparisons:		15
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
