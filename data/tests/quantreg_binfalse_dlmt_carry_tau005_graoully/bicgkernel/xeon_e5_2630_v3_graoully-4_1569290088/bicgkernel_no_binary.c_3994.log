
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 85968
Valid coordinates: 3520/17600
Tested coordinates: 171394
Valid coordinates: 5280/17600
Tested coordinates: 254697
Valid coordinates: 7040/17600
Tested coordinates: 338274
Valid coordinates: 8800/17600
Tested coordinates: 421157
Valid coordinates: 10560/17600
Tested coordinates: 504806
Valid coordinates: 12320/17600
Tested coordinates: 590744
Valid coordinates: 14080/17600
Tested coordinates: 676126
Valid coordinates: 15840/17600
Tested coordinates: 762643
Valid coordinates: 17600/17600
Tested coordinates: 848153
Valid/Tested configurations: 17600/848153
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
62       6    6    0    0   12   5   0    0    0
969      0    1    4    5    1   0  29    5    0
1416     2    0    5   11   28   0  16    0    5
2684     0    8   11    9   29  16   0    2    2
2980    10    6   10    7   11  16   0    0    5
3629     0    0    0    5   14  29   0    0    4
4352     5    0    5    0   14  15   0    3    2
6114    11    7    0   11   20   0  29    2    5
7099     5    7    8   11    1  28   0    1    1
7257     2   10   11    0   26   0  29    1    3
7501    11   11   11    0    7   0  16    0    1
8304     0    1   11   11   14   0   1    5    0
8377     0    6    4    6   19   0   0    2    5
11311    8   11    9    0   25  29   0    5    0
12898    0   11    4   11   17   0  15    2    1
12953   11    0    0    0   29   3   0    2    0
14492    5    5    0    7   22   0  16    5    2
14595    5    0   11    5   22   0  25    2    0
15701    2    6    7    8   29   0   0    0    3
16916   11    0   11    6    3   0   0    5    1
17323    0    4   11    0    1   0  13    2    5
17330    6   11    0   11    0   6   0    2    5

D-Efficiency Approximation: [1] 0.2210972

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		105
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			241
        Writes: 		53
        Comparisons:		9
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.557814
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		13741
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20561
        Writes: 		2077
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.822334
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		500
        Multiplications: 	200
        Divisions: 		0
        Logical: 		0
        Reads: 			1123
        Writes: 		149
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.595434
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		1355
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2420
        Writes: 		306
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.067157
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		7882
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			12029
        Writes: 		1245
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.05992
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		6973
        Multiplications: 	2108
        Divisions: 		0
        Logical: 		0
        Reads: 			10696
        Writes: 		1121
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.800346
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1349
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2293
        Writes: 		271
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.417344
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3791
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6453
        Writes: 		684
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.031875
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1076
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			2115
        Writes: 		264
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.509443
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1292
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2498
        Writes: 		292
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.138454
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		206
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			474
        Writes: 		66
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.602727
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1098
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2107
        Writes: 		242
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.318409
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1983
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3415
        Writes: 		375
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.920194
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		653
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1463
        Writes: 		211
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.354679
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1142
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2033
        Writes: 		237
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.914037
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		133
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			311
        Writes: 		73
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.475479
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		9537
        Multiplications: 	2904
        Divisions: 		0
        Logical: 		0
        Reads: 			14677
        Writes: 		1508
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.487499
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1647
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2836
        Writes: 		320
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.67494
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		127
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			301
        Writes: 		68
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.741037
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1063
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2063
        Writes: 		227
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.583215
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2806
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4801
        Writes: 		501
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.778258
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		4986
        Multiplications: 	1584
        Divisions: 		0
        Logical: 		0
        Reads: 			8032
        Writes: 		830
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.872631
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
62       6    6    0    0   12   5   0    0    0  4.557814
969      0    1    4    5    1   0  29    5    0  6.822334
1416     2    0    5   11   28   0  16    0    5  5.595434
2684     0    8   11    9   29  16   0    2    2  4.067157
2980    10    6   10    7   11  16   0    0    5  5.059920
3629     0    0    0    5   14  29   0    0    4  9.800346
4352     5    0    5    0   14  15   0    3    2  4.417344
6114    11    7    0   11   20   0  29    2    5  5.031875
7099     5    7    8   11    1  28   0    1    1  4.509443
7257     2   10   11    0   26   0  29    1    3  4.138454
7501    11   11   11    0    7   0  16    0    1  5.602727
8304     0    1   11   11   14   0   1    5    0  7.318409
8377     0    6    4    6   19   0   0    2    5  4.920194
11311    8   11    9    0   25  29   0    5    0  6.354679
12898    0   11    4   11   17   0  15    2    1  3.914037
12953   11    0    0    0   29   3   0    2    0  4.475479
14492    5    5    0    7   22   0  16    5    2  7.487499
14595    5    0   11    5   22   0  25    2    0  4.674940
15701    2    6    7    8   29   0   0    0    3  5.741037
16916   11    0   11    6    3   0   0    5    1  5.583215
17323    0    4   11    0    1   0  13    2    5  4.778258
17330    6   11    0   11    0   6   0    2    5  4.872631

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
62       6    6    0    0   12   5   0    0    0  4.557814
969      0    1    4    5    1   0  29    5    0  6.822334
1416     2    0    5   11   28   0  16    0    5  5.595434
2684     0    8   11    9   29  16   0    2    2  4.067157
2980    10    6   10    7   11  16   0    0    5  5.059920
3629     0    0    0    5   14  29   0    0    4  9.800346
4352     5    0    5    0   14  15   0    3    2  4.417344
6114    11    7    0   11   20   0  29    2    5  5.031875
7099     5    7    8   11    1  28   0    1    1  4.509443
7257     2   10   11    0   26   0  29    1    3  4.138454
7501    11   11   11    0    7   0  16    0    1  5.602727
8304     0    1   11   11   14   0   1    5    0  7.318409
8377     0    6    4    6   19   0   0    2    5  4.920194
11311    8   11    9    0   25  29   0    5    0  6.354679
12898    0   11    4   11   17   0  15    2    1  3.914037
12953   11    0    0    0   29   3   0    2    0  4.475479
14492    5    5    0    7   22   0  16    5    2  7.487499
14595    5    0   11    5   22   0  25    2    0  4.674940
15701    2    6    7    8   29   0   0    0    3  5.741037
16916   11    0   11    6    3   0   0    5    1  5.583215
17323    0    4   11    0    1   0  13    2    5  4.778258
17330    6   11    0   11    0   6   0    2    5  4.872631

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
62     0.0000000  0.0000000 -1.0000000 -1.0000000 -0.20000000 -0.66666667
969   -1.0000000 -0.8333333 -0.3333333 -0.1666667 -0.93333333 -1.00000000
1416  -0.6666667 -1.0000000 -0.1666667  0.8333333  0.86666667 -1.00000000
2684  -1.0000000  0.3333333  0.8333333  0.5000000  0.93333333  0.06666667
2980   0.6666667  0.0000000  0.6666667  0.1666667 -0.26666667  0.06666667
3629  -1.0000000 -1.0000000 -1.0000000 -0.1666667 -0.06666667  0.93333333
4352  -0.1666667 -1.0000000 -0.1666667 -1.0000000 -0.06666667  0.00000000
6114   0.8333333  0.1666667 -1.0000000  0.8333333  0.33333333 -1.00000000
7099  -0.1666667  0.1666667  0.3333333  0.8333333 -0.93333333  0.86666667
7257  -0.6666667  0.6666667  0.8333333 -1.0000000  0.73333333 -1.00000000
7501   0.8333333  0.8333333  0.8333333 -1.0000000 -0.53333333 -1.00000000
8304  -1.0000000 -0.8333333  0.8333333  0.8333333 -0.06666667 -1.00000000
8377  -1.0000000  0.0000000 -0.3333333  0.0000000  0.26666667 -1.00000000
11311  0.3333333  0.8333333  0.5000000 -1.0000000  0.66666667  0.93333333
12898 -1.0000000  0.8333333 -0.3333333  0.8333333  0.13333333 -1.00000000
12953  0.8333333 -1.0000000 -1.0000000 -1.0000000  0.93333333 -0.80000000
14492 -0.1666667 -0.1666667 -1.0000000  0.1666667  0.46666667 -1.00000000
14595 -0.1666667 -1.0000000  0.8333333 -0.1666667  0.46666667 -1.00000000
15701 -0.6666667  0.0000000  0.1666667  0.3333333  0.93333333 -1.00000000
16916  0.8333333 -1.0000000  0.8333333  0.0000000 -0.80000000 -1.00000000
17323 -1.0000000 -0.3333333  0.8333333 -1.0000000 -0.93333333 -1.00000000
17330  0.0000000  0.8333333 -1.0000000  0.8333333 -1.00000000 -0.60000000
             U_Je      RT_Ie      RT_Je cost_mean
62    -1.00000000 -1.0000000 -1.0000000  4.557814
969    0.93333333  0.6666667 -1.0000000  6.822334
1416   0.06666667 -1.0000000  0.6666667  5.595434
2684  -1.00000000 -0.3333333 -0.3333333  4.067157
2980  -1.00000000 -1.0000000  0.6666667  5.059920
3629  -1.00000000 -1.0000000  0.3333333  9.800346
4352  -1.00000000  0.0000000 -0.3333333  4.417344
6114   0.93333333 -0.3333333  0.6666667  5.031875
7099  -1.00000000 -0.6666667 -0.6666667  4.509443
7257   0.93333333 -0.6666667  0.0000000  4.138454
7501   0.06666667 -1.0000000 -0.6666667  5.602727
8304  -0.93333333  0.6666667 -1.0000000  7.318409
8377  -1.00000000 -0.3333333  0.6666667  4.920194
11311 -1.00000000  0.6666667 -1.0000000  6.354679
12898  0.00000000 -0.3333333 -0.6666667  3.914037
12953 -1.00000000 -0.3333333 -1.0000000  4.475479
14492  0.06666667  0.6666667 -0.3333333  7.487499
14595  0.66666667 -0.3333333 -1.0000000  4.674940
15701 -1.00000000 -1.0000000  0.0000000  5.741037
16916 -1.00000000  0.6666667 -0.6666667  5.583215
17323 -0.13333333 -0.3333333  0.6666667  4.778258
17330 -1.00000000 -0.3333333  0.6666667  4.872631

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.87748505192
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  0.719   0.719   0.637  0.483  
I(T1_J^2)    1  3.668   3.668   3.251  0.169  
I(T2_I^2)    1  0.849   0.849   0.753  0.449  
I(T2_J^2)    1  0.133   0.133   0.118  0.754  
I(U1_I^2)    1  0.926   0.926   0.821  0.432  
I(U_I^2)     1  5.587   5.587   4.952  0.112  
I(U_J^2)     1  0.345   0.345   0.305  0.619  
I(RT_I^2)    1  5.338   5.338   4.731  0.118  
I(RT_J^2)    1  1.173   1.173   1.040  0.383  
T1_I         1  1.769   1.769   1.568  0.299  
T1_J         1  0.471   0.471   0.417  0.564  
T2_I         1  3.192   3.192   2.829  0.191  
T2_J         1  1.944   1.944   1.723  0.281  
U1_I         1  0.687   0.687   0.609  0.492  
U_I          1  3.381   3.381   2.997  0.182  
U_J          1  0.244   0.244   0.216  0.674  
RT_I         1  6.961   6.961   6.170  0.089 .
RT_J         1  0.326   0.326   0.289  0.628  
Residuals    3  3.385   1.128                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
62     4.557814
969    6.822334
1416   5.595434
2684   4.067157
2980   5.059920
3629   9.800346
4352   4.417344
6114   5.031875
7099   4.509443
7257   4.138454
7501   5.602727
8304   7.318409
8377   4.920194
11311  6.354679
12898  3.914037
12953  4.475479
14492  7.487499
14595  4.674940
15701  5.741037
16916  5.583215
17323  4.778258
17330  4.872631

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.3829666188682108, 'T1_J': 0.5643032645114048, 'T2_J': 0.280660456997517, 'U_J': 0.6736998940397535, 'U_I': 0.1818735228932808, 'I(T2_I^2)': 0.4494246191236449, 'T2_I': 0.19115870818340094, 'U1_I': 0.4921858026153163, 'I(U_I^2)': 0.11248890214694525, 'I(RT_I^2)': 0.11788735651243148, 'I(T2_J^2)': 0.7539280133878206, 'I(U1_I^2)': 0.4316753576026233, 'RT_I': 0.08895808209468994, 'I(T1_I^2)': 0.4830796676524198, 'I(T1_J^2)': 0.16914328299143794, 'I(U_J^2)': 0.619027125780241, 'RT_J': 0.6284101710320417, 'T1_I': 0.29919922758561723}
Ordered Keys: 
['RT_I', 'I(U_I^2)', 'I(RT_I^2)', 'I(T1_J^2)', 'U_I', 'T2_I', 'T2_J', 'T1_I', 'I(RT_J^2)', 'I(U1_I^2)', 'I(T2_I^2)', 'I(T1_I^2)', 'U1_I', 'T1_J', 'I(U_J^2)', 'RT_J', 'U_J', 'I(T2_J^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.05, data = structure(list(T1_I = c(6, 
0, 2, 0, 10, 0, 5, 11, 5, 2, 11, 0, 0, 8, 0, 11, 5, 5, 2, 11, 
0, 6), T1_J = c(6, 1, 0, 8, 6, 0, 0, 7, 7, 10, 11, 1, 6, 11, 
11, 0, 5, 0, 6, 0, 4, 11), T2_I = c(0, 4, 5, 11, 10, 0, 5, 0, 
8, 11, 11, 11, 4, 9, 4, 0, 0, 11, 7, 11, 11, 0), T2_J = c(0, 
5, 11, 9, 7, 5, 0, 11, 11, 0, 0, 11, 6, 0, 11, 0, 7, 5, 8, 6, 
0, 11), U1_I = c(12, 1, 28, 29, 11, 14, 14, 20, 1, 26, 7, 14, 
19, 25, 17, 29, 22, 22, 29, 3, 1, 0), U_I = c(5, 0, 0, 16, 16, 
29, 15, 0, 28, 0, 0, 0, 0, 29, 0, 3, 0, 0, 0, 0, 0, 6), U_J = c(0, 
29, 16, 0, 0, 0, 0, 29, 0, 29, 16, 1, 0, 0, 15, 0, 16, 25, 0, 
0, 13, 0), RT_I = c(0, 5, 0, 2, 0, 0, 3, 2, 1, 1, 0, 5, 2, 5, 
2, 2, 5, 2, 0, 5, 2, 2), RT_J = c(0, 0, 5, 2, 5, 4, 2, 5, 1, 
3, 1, 0, 5, 0, 1, 0, 2, 0, 3, 1, 5, 5), cost_mean = c(4.557814, 
6.822334, 5.595434, 4.067157, 5.05992, 9.800346, 4.417344, 5.031875, 
4.509443, 4.138454, 5.602727, 7.318409, 4.920194, 6.354679, 3.914037, 
4.475479, 7.487499, 4.67494, 5.741037, 5.583215, 4.778258, 4.872631
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("62", "969", 
"1416", "2684", "2980", "3629", "4352", "6114", "7099", "7257", 
"7501", "8304", "8377", "11311", "12898", "12953", "14492", "14595", 
"15701", "16916", "17323", "17330"), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   5.850890e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     4.160000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)     1.504000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)     2.379000e-02 -1.797693e+308  1.797693e+308
I(T2_J^2)    -3.184000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)     2.000000e-04 -1.797693e+308  1.797693e+308
I(U_I^2)      3.510000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)     -2.050000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     1.739400e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     1.700000e-04 -1.797693e+308  1.797693e+308
T1_I         -1.019800e-01 -1.797693e+308  1.797693e+308
T1_J         -2.150500e-01 -1.797693e+308  1.797693e+308
T2_I         -4.042300e-01 -1.797693e+308  1.797693e+308
T2_J          3.146600e-01 -1.797693e+308  1.797693e+308
U1_I         -8.780000e-03 -1.797693e+308  1.797693e+308
U_I          -1.865000e-02 -1.797693e+308  1.797693e+308
U_J           8.171000e-02 -1.797693e+308  1.797693e+308
RT_I         -6.714700e-01 -1.797693e+308  1.797693e+308
RT_J          2.099500e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 249664
Valid coordinates: 10560/52800
Tested coordinates: 502808
Valid coordinates: 15840/52800
Tested coordinates: 752218
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1008144
Valid coordinates: 26400/52800
Tested coordinates: 1263566
Valid coordinates: 31680/52800
Tested coordinates: 1517642
Valid coordinates: 36960/52800
Tested coordinates: 1769251
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2018936
Valid coordinates: 47520/52800
Tested coordinates: 2271384
Valid coordinates: 52800/52800
Tested coordinates: 2525776
Valid/Tested configurations: 52800/2525776
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.3829666188682108, 'T1_J': 0.5643032645114048, 'T2_J': 0.280660456997517, 'U_J': 0.6736998940397535, 'U_I': 0.1818735228932808, 'I(T2_I^2)': 0.4494246191236449, 'T2_I': 0.19115870818340094, 'U1_I': 0.4921858026153163, 'I(U_I^2)': 0.11248890214694525, 'I(RT_I^2)': 0.11788735651243148, 'I(T2_J^2)': 0.7539280133878206, 'I(U1_I^2)': 0.4316753576026233, 'RT_I': 0.08895808209468994, 'I(T1_I^2)': 0.4830796676524198, 'I(T1_J^2)': 0.16914328299143794, 'I(U_J^2)': 0.619027125780241, 'RT_J': 0.6284101710320417, 'T1_I': 0.29919922758561723}
Ordered Keys: 
['RT_I', 'I(U_I^2)', 'I(RT_I^2)', 'I(T1_J^2)', 'U_I', 'T2_I', 'T2_J', 'T1_I', 'I(RT_J^2)', 'I(U1_I^2)', 'I(T2_I^2)', 'I(T1_I^2)', 'U1_I', 'T1_J', 'I(U_J^2)', 'RT_J', 'U_J', 'I(T2_J^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.3829666188682108, 'T1_J': 0.5643032645114048, 'T2_J': 0.280660456997517, 'U_J': 0.6736998940397535, 'U_I': 0.1818735228932808, 'I(T2_I^2)': 0.4494246191236449, 'T2_I': 0.19115870818340094, 'U1_I': 0.4921858026153163, 'I(U_I^2)': 0.11248890214694525, 'I(RT_I^2)': 0.11788735651243148, 'I(T2_J^2)': 0.7539280133878206, 'I(U1_I^2)': 0.4316753576026233, 'RT_I': 0.08895808209468994, 'I(T1_I^2)': 0.4830796676524198, 'I(T1_J^2)': 0.16914328299143794, 'I(U_J^2)': 0.619027125780241, 'RT_J': 0.6284101710320417, 'T1_I': 0.29919922758561723}
Ordered Keys: 
['RT_I', 'I(U_I^2)', 'I(RT_I^2)', 'I(T1_J^2)', 'U_I', 'T2_I', 'T2_J', 'T1_I', 'I(RT_J^2)', 'I(U1_I^2)', 'I(T2_I^2)', 'I(T1_I^2)', 'U1_I', 'T1_J', 'I(U_J^2)', 'RT_J', 'U_J', 'I(T2_J^2)']
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
4578   10    6   10   11   14   3   0    2    0

Best From Design: [0, 11, 4, 11, 17, 0, 15, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.782431
Baseline Point:
5.782431
Design Best Point:
[0, 11, 4, 11, 17, 0, 15, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.676884341551
Predicted Best Point:
[10, 6, 10, 11, 14, 3, 0, 2, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[10, 6, 10, 11, 14, 3, 0, 2, 0]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		136
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			323
        Writes: 		70
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.458925
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.676884341551
Slowdown (Predicted Best): 0.771115989106
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.914037
Current Best Point: 
[0, 11, 4, 11, 17, 0, 15, 2, 1]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 82677
Valid coordinates: 3520/17600
Tested coordinates: 167505
Valid coordinates: 5280/17600
Tested coordinates: 254378
Valid coordinates: 7040/17600
Tested coordinates: 338275
Valid coordinates: 8800/17600
Tested coordinates: 420807
Valid coordinates: 10560/17600
Tested coordinates: 503716
Valid coordinates: 12320/17600
Tested coordinates: 590039
Valid coordinates: 14080/17600
Tested coordinates: 674486
Valid coordinates: 15840/17600
Tested coordinates: 758141
Valid coordinates: 17600/17600
Tested coordinates: 843161
Valid/Tested configurations: 17600/843161
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1142     5    0    0   11   27   0   7    0    0
3813     1    1    6    0   29   0  29    5    0
6450     0    5    3    6    4   0  13    2    0
10868    0    0    0   11    0  12   0    1    5
11000    0    6   11   10   21   0  16    5    2
13706    1   11    6    0   29   0   0    2    2
16475    6    4    0    6   26   0  28    2    5
22535   11    1   11    6   28  17   0    0    2
23272    3    0   11    4    1  29   0    3    3
24077    5    6    7    0    0   0   0    0    3
31879   11    0   11    0    4   0  18    2    5
33102    5    4   11    0   18  16   0    2    0
42464    3   10    6    0    0   0  15    0    5
49582    0   11   11   11    8   0   0    0    5
52892    1   10    0    0   16  29   0    0    0
54918    7   11    0    0   13  14   0    5    2
57177    6   11   11   11    1   0  29    4    0
61488    1    0    5   11   15   0  29    1    3
68992    6   11    6   11   29  18   0    3    0
76582    6    0    6    7   13   0   0    5    0
84434   11    7    0   11    0  29   0    3    3
85579    6    5    6   11   24  29   0    0    5

D-Efficiency Approximation: [1] 0.2283433

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		128
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			287
        Writes: 		62
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.605195
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		13766
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20610
        Writes: 		2103
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.871197
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		912
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1607
        Writes: 		184
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.589656
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	3
        Additions: 		6787
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10673
        Writes: 		1098
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.009159
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		9536
        Multiplications: 	2904
        Divisions: 		0
        Logical: 		0
        Reads: 			14675
        Writes: 		1507
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.72588
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		316
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			642
        Writes: 		107
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.594719
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3737
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6365
        Writes: 		680
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.802144
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1184
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2085
        Writes: 		265
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.368156
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		4478
        Multiplications: 	1404
        Divisions: 		0
        Logical: 		0
        Reads: 			7196
        Writes: 		769
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.455547
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		90
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			227
        Writes: 		34
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.605519
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		2907
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4873
        Writes: 		507
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.869395
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		264
        Multiplications: 	88
        Divisions: 		0
        Logical: 		0
        Reads: 			603
        Writes: 		109
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.621395
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		458
        Multiplications: 	196
        Divisions: 		0
        Logical: 		0
        Reads: 			1038
        Writes: 		116
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.593314
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		316
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			725
        Writes: 		91
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.721071
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		349
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			777
        Writes: 		129
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.601256
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2888
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4963
        Writes: 		542
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.975934
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		6954
        Multiplications: 	2108
        Divisions: 		0
        Logical: 		0
        Reads: 			10634
        Writes: 		1083
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58035
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		1281
        Multiplications: 	468
        Divisions: 		0
        Logical: 		0
        Reads: 			2476
        Writes: 		281
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.132172
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		328
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			742
        Writes: 		132
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.481441
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		326
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			749
        Writes: 		101
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.13946
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		4478
        Multiplications: 	1404
        Divisions: 		0
        Logical: 		0
        Reads: 			7199
        Writes: 		769
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.108691
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		13784
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20661
        Writes: 		2129
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.335586
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1142     5    0    0   11   27   0   7    0    0  5.605195
3813     1    1    6    0   29   0  29    5    0  5.871197
6450     0    5    3    6    4   0  13    2    0  4.589656
10868    0    0    0   11    0  12   0    1    5  5.009159
11000    0    6   11   10   21   0  16    5    2  7.725880
13706    1   11    6    0   29   0   0    2    2  5.594719
16475    6    4    0    6   26   0  28    2    5  4.802144
22535   11    1   11    6   28  17   0    0    2  5.368156
23272    3    0   11    4    1  29   0    3    3  4.455547
24077    5    6    7    0    0   0   0    0    3  5.605519
31879   11    0   11    0    4   0  18    2    5  4.869395
33102    5    4   11    0   18  16   0    2    0  4.621395
42464    3   10    6    0    0   0  15    0    5  5.593314
49582    0   11   11   11    8   0   0    0    5  5.721071
52892    1   10    0    0   16  29   0    0    0  5.601256
54918    7   11    0    0   13  14   0    5    2  6.975934
57177    6   11   11   11    1   0  29    4    0  4.580350
61488    1    0    5   11   15   0  29    1    3  4.132172
68992    6   11    6   11   29  18   0    3    0  4.481441
76582    6    0    6    7   13   0   0    5    0  6.139460
84434   11    7    0   11    0  29   0    3    3  4.108691
85579    6    5    6   11   24  29   0    0    5  9.335586

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1142     5    0    0   11   27   0   7    0    0  5.605195
3813     1    1    6    0   29   0  29    5    0  5.871197
6450     0    5    3    6    4   0  13    2    0  4.589656
10868    0    0    0   11    0  12   0    1    5  5.009159
11000    0    6   11   10   21   0  16    5    2  7.725880
13706    1   11    6    0   29   0   0    2    2  5.594719
16475    6    4    0    6   26   0  28    2    5  4.802144
22535   11    1   11    6   28  17   0    0    2  5.368156
23272    3    0   11    4    1  29   0    3    3  4.455547
24077    5    6    7    0    0   0   0    0    3  5.605519
31879   11    0   11    0    4   0  18    2    5  4.869395
33102    5    4   11    0   18  16   0    2    0  4.621395
42464    3   10    6    0    0   0  15    0    5  5.593314
49582    0   11   11   11    8   0   0    0    5  5.721071
52892    1   10    0    0   16  29   0    0    0  5.601256
54918    7   11    0    0   13  14   0    5    2  6.975934
57177    6   11   11   11    1   0  29    4    0  4.580350
61488    1    0    5   11   15   0  29    1    3  4.132172
68992    6   11    6   11   29  18   0    3    0  4.481441
76582    6    0    6    7   13   0   0    5    0  6.139460
84434   11    7    0   11    0  29   0    3    3  4.108691
85579    6    5    6   11   24  29   0    0    5  9.335586

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
1142  -0.1666667 -1.0000000 -1.0000000  0.8333333  0.80000000 -1.00000000
3813  -0.8333333 -0.8333333  0.0000000 -1.0000000  0.93333333 -1.00000000
6450  -1.0000000 -0.1666667 -0.5000000  0.0000000 -0.73333333 -1.00000000
10868 -1.0000000 -1.0000000 -1.0000000  0.8333333 -1.00000000 -0.20000000
11000 -1.0000000  0.0000000  0.8333333  0.6666667  0.40000000 -1.00000000
13706 -0.8333333  0.8333333  0.0000000 -1.0000000  0.93333333 -1.00000000
16475  0.0000000 -0.3333333 -1.0000000  0.0000000  0.73333333 -1.00000000
22535  0.8333333 -0.8333333  0.8333333  0.0000000  0.86666667  0.13333333
23272 -0.5000000 -1.0000000  0.8333333 -0.3333333 -0.93333333  0.93333333
24077 -0.1666667  0.0000000  0.1666667 -1.0000000 -1.00000000 -1.00000000
31879  0.8333333 -1.0000000  0.8333333 -1.0000000 -0.73333333 -1.00000000
33102 -0.1666667 -0.3333333  0.8333333 -1.0000000  0.20000000  0.06666667
42464 -0.5000000  0.6666667  0.0000000 -1.0000000 -1.00000000 -1.00000000
49582 -1.0000000  0.8333333  0.8333333  0.8333333 -0.46666667 -1.00000000
52892 -0.8333333  0.6666667 -1.0000000 -1.0000000  0.06666667  0.93333333
54918  0.1666667  0.8333333 -1.0000000 -1.0000000 -0.13333333 -0.06666667
57177  0.0000000  0.8333333  0.8333333  0.8333333 -0.93333333 -1.00000000
61488 -0.8333333 -1.0000000 -0.1666667  0.8333333  0.00000000 -1.00000000
68992  0.0000000  0.8333333  0.0000000  0.8333333  0.93333333  0.20000000
76582  0.0000000 -1.0000000  0.0000000  0.1666667 -0.13333333 -1.00000000
84434  0.8333333  0.1666667 -1.0000000  0.8333333 -1.00000000  0.93333333
85579  0.0000000 -0.1666667  0.0000000  0.8333333  0.60000000  0.93333333
             U_Je      RT_Ie      RT_Je cost_mean
1142  -0.53333333 -1.0000000 -1.0000000  5.605195
3813   0.93333333  0.6666667 -1.0000000  5.871197
6450  -0.13333333 -0.3333333 -1.0000000  4.589656
10868 -1.00000000 -0.6666667  0.6666667  5.009159
11000  0.06666667  0.6666667 -0.3333333  7.725880
13706 -1.00000000 -0.3333333 -0.3333333  5.594719
16475  0.86666667 -0.3333333  0.6666667  4.802144
22535 -1.00000000 -1.0000000 -0.3333333  5.368156
23272 -1.00000000  0.0000000  0.0000000  4.455547
24077 -1.00000000 -1.0000000  0.0000000  5.605519
31879  0.20000000 -0.3333333  0.6666667  4.869395
33102 -1.00000000 -0.3333333 -1.0000000  4.621395
42464  0.00000000 -1.0000000  0.6666667  5.593314
49582 -1.00000000 -1.0000000  0.6666667  5.721071
52892 -1.00000000 -1.0000000 -1.0000000  5.601256
54918 -1.00000000  0.6666667 -0.3333333  6.975934
57177  0.93333333  0.3333333 -1.0000000  4.580350
61488  0.93333333 -0.6666667  0.0000000  4.132172
68992 -1.00000000  0.0000000 -1.0000000  4.481441
76582 -1.00000000  0.6666667 -1.0000000  6.139460
84434 -1.00000000  0.0000000  0.0000000  4.108691
85579 -1.00000000 -1.0000000  0.6666667  9.335586

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.000448688097899
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1     6    6    0    0   12   5   0    0    0  4.557814
2     0    1    4    5    1   0  29    5    0  6.822334
3     2    0    5   11   28   0  16    0    5  5.595434
4     0    8   11    9   29  16   0    2    2  4.067157
5    10    6   10    7   11  16   0    0    5  5.059920
6     0    0    0    5   14  29   0    0    4  9.800346
7     5    0    5    0   14  15   0    3    2  4.417344
8    11    7    0   11   20   0  29    2    5  5.031875
9     5    7    8   11    1  28   0    1    1  4.509443
10    2   10   11    0   26   0  29    1    3  4.138454
11   11   11   11    0    7   0  16    0    1  5.602727
12    0    1   11   11   14   0   1    5    0  7.318409
13    0    6    4    6   19   0   0    2    5  4.920194
14    8   11    9    0   25  29   0    5    0  6.354679
15    0   11    4   11   17   0  15    2    1  3.914037
16   11    0    0    0   29   3   0    2    0  4.475479
17    5    5    0    7   22   0  16    5    2  7.487499
18    5    0   11    5   22   0  25    2    0  4.674940
19    2    6    7    8   29   0   0    0    3  5.741037
20   11    0   11    6    3   0   0    5    1  5.583215
21    0    4   11    0    1   0  13    2    5  4.778258
22    6   11    0   11    0   6   0    2    5  4.872631
23    5    0    0   11   27   0   7    0    0  5.605195
24    1    1    6    0   29   0  29    5    0  5.871197
25    0    5    3    6    4   0  13    2    0  4.589656
26    0    0    0   11    0  12   0    1    5  5.009159
27    0    6   11   10   21   0  16    5    2  7.725880
28    1   11    6    0   29   0   0    2    2  5.594719
29    6    4    0    6   26   0  28    2    5  4.802144
30   11    1   11    6   28  17   0    0    2  5.368156
31    3    0   11    4    1  29   0    3    3  4.455547
32    5    6    7    0    0   0   0    0    3  5.605519
33   11    0   11    0    4   0  18    2    5  4.869395
34    5    4   11    0   18  16   0    2    0  4.621395
35    3   10    6    0    0   0  15    0    5  5.593314
36    0   11   11   11    8   0   0    0    5  5.721071
37    1   10    0    0   16  29   0    0    0  5.601256
38    7   11    0    0   13  14   0    5    2  6.975934
39    6   11   11   11    1   0  29    4    0  4.580350
40    1    0    5   11   15   0  29    1    3  4.132172
41    6   11    6   11   29  18   0    3    0  4.481441
42    6    0    6    7   13   0   0    5    0  6.139460
43   11    7    0   11    0  29   0    3    3  4.108691
44    6    5    6   11   24  29   0    0    5  9.335586

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.0000097 0.0000097   0.521 0.477164    
I(T1_J^2)    1 0.0000235 0.0000235   1.257 0.272832    
I(T2_I^2)    1 0.0000059 0.0000059   0.315 0.579531    
I(T2_J^2)    1 0.0000194 0.0000194   1.040 0.317651    
I(U1_I^2)    1 0.0000015 0.0000015   0.083 0.776233    
I(U_I^2)     1 0.0000136 0.0000136   0.727 0.401910    
I(U_J^2)     1 0.0000372 0.0000372   1.990 0.170646    
I(RT_I^2)    1 0.0003318 0.0003318  17.736 0.000287 ***
I(RT_J^2)    1 0.0001977 0.0001977  10.568 0.003280 ** 
T1_I         1 0.0000000 0.0000000   0.000 0.993318    
T1_J         1 0.0000005 0.0000005   0.025 0.875483    
T2_I         1 0.0000009 0.0000009   0.049 0.825913    
T2_J         1 0.0000033 0.0000033   0.177 0.677713    
U1_I         1 0.0000400 0.0000400   2.139 0.156090    
U_I          1 0.0001522 0.0001522   8.136 0.008584 ** 
U_J          1 0.0000004 0.0000004   0.022 0.883286    
RT_I         1 0.0006104 0.0006104  32.634 5.97e-06 ***
RT_J         1 0.0000091 0.0000091   0.486 0.492162    
Residuals   25 0.0004676 0.0000187                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1142   5.605195
3813   5.871197
6450   4.589656
10868  5.009159
11000  7.725880
13706  5.594719
16475  4.802144
22535  5.368156
23272  4.455547
24077  5.605519
31879  4.869395
33102  4.621395
42464  5.593314
49582  5.721071
52892  5.601256
54918  6.975934
57177  4.580350
61488  4.132172
68992  4.481441
76582  6.139460
84434  4.108691
85579  9.335586

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.0032796979129179923, 'T1_J': 0.8754827472197563, 'T2_J': 0.6777134315602307, 'U_J': 0.8832858191492803, 'U_I': 0.008583594590493548, 'I(T2_I^2)': 0.5795313722500123, 'T2_I': 0.8259133689658192, 'U1_I': 0.15609039709833833, 'I(U_I^2)': 0.4019098675595816, 'I(RT_I^2)': 0.00028740770722641664, 'I(T2_J^2)': 0.31765059808904345, 'I(U1_I^2)': 0.7762331696111333, 'RT_I': 5.974861882154303e-06, 'I(T1_I^2)': 0.477163882887223, 'I(T1_J^2)': 0.27283159337308305, 'I(U_J^2)': 0.17064558162794935, 'RT_J': 0.49216159118138414, 'T1_I': 0.9933177646377287}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'U_I', 'U1_I', 'I(U_J^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'I(U_I^2)', 'I(T1_I^2)', 'RT_J', 'I(T2_I^2)', 'T2_J', 'I(U1_I^2)', 'T2_I', 'T1_J', 'U_J', 'T1_I']
Variables within threshold: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'RT_J', 'U_I', 'I(U_I^2)']
Predicting Best Values for: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'RT_J', 'U_I', 'I(U_I^2)']
Using Model: cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2) + I(RT_J^2) + RT_J + U_I + I(U_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2) + 
    I(RT_J^2) + RT_J + U_I + I(U_I^2), tau = 0.05, data = structure(list(
    T1_I = c(6, 0, 2, 0, 10, 0, 5, 11, 5, 2, 11, 0, 0, 8, 0, 
    11, 5, 5, 2, 11, 0, 6, 5, 1, 0, 0, 0, 1, 6, 11, 3, 5, 11, 
    5, 3, 0, 1, 7, 6, 1, 6, 6, 11, 6), T1_J = c(6, 1, 0, 8, 6, 
    0, 0, 7, 7, 10, 11, 1, 6, 11, 11, 0, 5, 0, 6, 0, 4, 11, 0, 
    1, 5, 0, 6, 11, 4, 1, 0, 6, 0, 4, 10, 11, 10, 11, 11, 0, 
    11, 0, 7, 5), T2_I = c(0, 4, 5, 11, 10, 0, 5, 0, 8, 11, 11, 
    11, 4, 9, 4, 0, 0, 11, 7, 11, 11, 0, 0, 6, 3, 0, 11, 6, 0, 
    11, 11, 7, 11, 11, 6, 11, 0, 0, 11, 5, 6, 6, 0, 6), T2_J = c(0, 
    5, 11, 9, 7, 5, 0, 11, 11, 0, 0, 11, 6, 0, 11, 0, 7, 5, 8, 
    6, 0, 11, 11, 0, 6, 11, 10, 0, 6, 6, 4, 0, 0, 0, 0, 11, 0, 
    0, 11, 11, 11, 7, 11, 11), U1_I = c(12, 1, 28, 29, 11, 14, 
    14, 20, 1, 26, 7, 14, 19, 25, 17, 29, 22, 22, 29, 3, 1, 0, 
    27, 29, 4, 0, 21, 29, 26, 28, 1, 0, 4, 18, 0, 8, 16, 13, 
    1, 15, 29, 13, 0, 24), U_I = c(5, 0, 0, 16, 16, 29, 15, 0, 
    28, 0, 0, 0, 0, 29, 0, 3, 0, 0, 0, 0, 0, 6, 0, 0, 0, 12, 
    0, 0, 0, 17, 29, 0, 0, 16, 0, 0, 29, 14, 0, 0, 18, 0, 29, 
    29), U_J = c(0, 29, 16, 0, 0, 0, 0, 29, 0, 29, 16, 1, 0, 
    0, 15, 0, 16, 25, 0, 0, 13, 0, 7, 29, 13, 0, 16, 0, 28, 0, 
    0, 0, 18, 0, 15, 0, 0, 0, 29, 29, 0, 0, 0, 0), RT_I = c(0, 
    5, 0, 2, 0, 0, 3, 2, 1, 1, 0, 5, 2, 5, 2, 2, 5, 2, 0, 5, 
    2, 2, 0, 5, 2, 1, 5, 2, 2, 0, 3, 0, 2, 2, 0, 0, 0, 5, 4, 
    1, 3, 5, 3, 0), RT_J = c(0, 0, 5, 2, 5, 4, 2, 5, 1, 3, 1, 
    0, 5, 0, 1, 0, 2, 0, 3, 1, 5, 5, 0, 0, 0, 5, 2, 2, 5, 2, 
    3, 3, 5, 0, 5, 5, 0, 2, 0, 3, 0, 0, 3, 5), cost_mean = c(4.557814, 
    6.822334, 5.595434, 4.067157, 5.05992, 9.800346, 4.417344, 
    5.031875, 4.509443, 4.138454, 5.602727, 7.318409, 4.920194, 
    6.354679, 3.914037, 4.475479, 7.487499, 4.67494, 5.741037, 
    5.583215, 4.778258, 4.872631, 5.605195, 5.871197, 4.589656, 
    5.009159, 7.72588, 5.594719, 4.802144, 5.368156, 4.455547, 
    5.605519, 4.869395, 4.621395, 5.593314, 5.721071, 5.601256, 
    6.975934, 4.58035, 4.132172, 4.481441, 6.13946, 4.108691, 
    9.335586)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
-44L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.884290e+00 -1.797693e+308   5.060300e+00
RT_I         -1.031070e+00 -1.797693e+308  1.797693e+308
I(RT_I^2)     2.387700e-01  -4.568000e-02  1.797693e+308
I(RT_J^2)     6.420000e-02  -6.548000e-02  1.797693e+308
RT_J         -1.792200e-01 -1.797693e+308   1.923410e+00
U_I          -7.982000e-02 -1.797693e+308   4.431000e-02
I(U_I^2)      2.910000e-03  -6.180000e-03  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 259370
Valid coordinates: 10560/52800
Tested coordinates: 512139
Valid coordinates: 15840/52800
Tested coordinates: 762432
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1011231
Valid coordinates: 26400/52800
Tested coordinates: 1259448
Valid coordinates: 31680/52800
Tested coordinates: 1512458
Valid coordinates: 36960/52800
Tested coordinates: 1765326
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2014977
Valid coordinates: 47520/52800
Tested coordinates: 2262711
Valid coordinates: 52800/52800
Tested coordinates: 2512467
Valid/Tested configurations: 52800/2512467
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0032796979129179923, 'T1_J': 0.8754827472197563, 'T2_J': 0.6777134315602307, 'U_J': 0.8832858191492803, 'U_I': 0.008583594590493548, 'I(T2_I^2)': 0.5795313722500123, 'T2_I': 0.8259133689658192, 'U1_I': 0.15609039709833833, 'I(U_I^2)': 0.4019098675595816, 'I(RT_I^2)': 0.00028740770722641664, 'I(T2_J^2)': 0.31765059808904345, 'I(U1_I^2)': 0.7762331696111333, 'RT_I': 5.974861882154303e-06, 'I(T1_I^2)': 0.477163882887223, 'I(T1_J^2)': 0.27283159337308305, 'I(U_J^2)': 0.17064558162794935, 'RT_J': 0.49216159118138414, 'T1_I': 0.9933177646377287}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'U_I', 'U1_I', 'I(U_J^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'I(U_I^2)', 'I(T1_I^2)', 'RT_J', 'I(T2_I^2)', 'T2_J', 'I(U1_I^2)', 'T2_I', 'T1_J', 'U_J', 'T1_I']
Variables within threshold: ['RT_I', 'RT_J', 'U_I']
Unique Variables: ['RT_I', 'RT_J', 'U_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0032796979129179923, 'T1_J': 0.8754827472197563, 'T2_J': 0.6777134315602307, 'U_J': 0.8832858191492803, 'U_I': 0.008583594590493548, 'I(T2_I^2)': 0.5795313722500123, 'T2_I': 0.8259133689658192, 'U1_I': 0.15609039709833833, 'I(U_I^2)': 0.4019098675595816, 'I(RT_I^2)': 0.00028740770722641664, 'I(T2_J^2)': 0.31765059808904345, 'I(U1_I^2)': 0.7762331696111333, 'RT_I': 5.974861882154303e-06, 'I(T1_I^2)': 0.477163882887223, 'I(T1_J^2)': 0.27283159337308305, 'I(U_J^2)': 0.17064558162794935, 'RT_J': 0.49216159118138414, 'T1_I': 0.9933177646377287}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(RT_J^2)', 'U_I', 'U1_I', 'I(U_J^2)', 'I(T1_J^2)', 'I(T2_J^2)', 'I(U_I^2)', 'I(T1_I^2)', 'RT_J', 'I(T2_I^2)', 'T2_J', 'I(U1_I^2)', 'T2_I', 'T1_J', 'U_J', 'T1_I']
Variables within threshold: ['RT_I', 'RT_J', 'U_I']
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
3118    9    4    9    9   22  14   0    2    1

Best From Design: [11, 7, 0, 11, 0, 29, 0, 3, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
5.782431
Design Best Point:
[11, 7, 0, 11, 0, 29, 0, 3, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.710547345917
Predicted Best Point:
[9, 4, 9, 9, 22, 14, 0, 2, 1]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[9, 4, 9, 9, 22, 14, 0, 2, 1]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		696
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1402
        Writes: 		197
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.198031
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.710547345917
Slowdown (Predicted Best): 0.725997595129
Budget: 44/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 11, 4, 11, 17, 0, 15, 2, 1]
Step 2
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 92893
Valid coordinates: 2400/12000
Tested coordinates: 187883
Valid coordinates: 3600/12000
Tested coordinates: 284618
Valid coordinates: 4800/12000
Tested coordinates: 383319
Valid coordinates: 6000/12000
Tested coordinates: 477254
Valid coordinates: 7200/12000
Tested coordinates: 572072
Valid coordinates: 8400/12000
Tested coordinates: 662823
Valid coordinates: 9600/12000
Tested coordinates: 756681
Valid coordinates: 10800/12000
Tested coordinates: 853288
Valid coordinates: 12000/12000
Tested coordinates: 946657
Valid/Tested configurations: 12000/946657
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 152800      9

Pruned data dimensions: [1] 12075     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J
Clean Info:
One-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Two-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Three-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J']
Clean 2 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)', 'U_J', 'U_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)', 'U_J', 'U_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 12075     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1433     4   11    6    0   29  14   0    2    1
2228     0    8   11    0    0  14   0    2    1
4346     5    6    0    7    0  14   0    2    1
4500     5    5    5    0   16  14   0    2    1
5223     6   11   11   11   14  14   0    2    1
6232     0    6    0   11   29  14   0    2    1
7172    11    0    0    0   20  14   0    2    1
7659    11   11    0    0    1  14   0    2    1
7923    11    2   11   11    0  14   0    2    1
8099     0    0    0    6   14  14   0    2    1
8327     5    0    5   11    0  14   0    2    1
8368     0    0    6    6    1  14   0    2    1
10173    4    0   11    0   29  14   0    2    1
10850   11    5   11    6   28  14   0    2    1
11477    0   11    5   11   13  14   0    2    1

D-Efficiency Approximation: [1] 0.3013742

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		697
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1402
        Writes: 		200
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.918691
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		660
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1328
        Writes: 		166
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.931316
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		669
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1349
        Writes: 		172
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.951128
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		681
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1369
        Writes: 		185
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.178228
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		682
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1372
        Writes: 		185
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.914737
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		690
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1405
        Writes: 		202
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.098696
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		533
        Multiplications: 	176
        Divisions: 		0
        Logical: 		0
        Reads: 			1023
        Writes: 		148
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.888106
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		666
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1339
        Writes: 		170
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.919815
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		669
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1349
        Writes: 		172
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.376136
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		666
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1354
        Writes: 		181
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.955155
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		660
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1328
        Writes: 		166
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.914592
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		666
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1339
        Writes: 		170
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.161465
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		545
        Multiplications: 	176
        Divisions: 		0
        Logical: 		0
        Reads: 			1048
        Writes: 		159
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.882154
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		702
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1414
        Writes: 		203
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.354743
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		678
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1363
        Writes: 		182
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.916292
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1433     4   11    6    0   29  14   0    2    1  3.918691
2228     0    8   11    0    0  14   0    2    1  3.931316
4346     5    6    0    7    0  14   0    2    1  3.951128
4500     5    5    5    0   16  14   0    2    1  4.178228
5223     6   11   11   11   14  14   0    2    1  3.914737
6232     0    6    0   11   29  14   0    2    1  4.098696
7172    11    0    0    0   20  14   0    2    1  3.888106
7659    11   11    0    0    1  14   0    2    1  3.919815
7923    11    2   11   11    0  14   0    2    1  4.376136
8099     0    0    0    6   14  14   0    2    1  3.955155
8327     5    0    5   11    0  14   0    2    1  3.914592
8368     0    0    6    6    1  14   0    2    1  4.161465
10173    4    0   11    0   29  14   0    2    1  3.882154
10850   11    5   11    6   28  14   0    2    1  4.354743
11477    0   11    5   11   13  14   0    2    1  3.916292

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1433     4   11    6    0   29  14   0    2    1  3.918691
2228     0    8   11    0    0  14   0    2    1  3.931316
4346     5    6    0    7    0  14   0    2    1  3.951128
4500     5    5    5    0   16  14   0    2    1  4.178228
5223     6   11   11   11   14  14   0    2    1  3.914737
6232     0    6    0   11   29  14   0    2    1  4.098696
7172    11    0    0    0   20  14   0    2    1  3.888106
7659    11   11    0    0    1  14   0    2    1  3.919815
7923    11    2   11   11    0  14   0    2    1  4.376136
8099     0    0    0    6   14  14   0    2    1  3.955155
8327     5    0    5   11    0  14   0    2    1  3.914592
8368     0    0    6    6    1  14   0    2    1  4.161465
10173    4    0   11    0   29  14   0    2    1  3.882154
10850   11    5   11    6   28  14   0    2    1  4.354743
11477    0   11    5   11   13  14   0    2    1  3.916292

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie U_Je
1433  -0.3333333  0.8333333  0.0000000 -1.0000000  0.93333333 -0.06666667   -1
2228  -1.0000000  0.3333333  0.8333333 -1.0000000 -1.00000000 -0.06666667   -1
4346  -0.1666667  0.0000000 -1.0000000  0.1666667 -1.00000000 -0.06666667   -1
4500  -0.1666667 -0.1666667 -0.1666667 -1.0000000  0.06666667 -0.06666667   -1
5223   0.0000000  0.8333333  0.8333333  0.8333333 -0.06666667 -0.06666667   -1
6232  -1.0000000  0.0000000 -1.0000000  0.8333333  0.93333333 -0.06666667   -1
7172   0.8333333 -1.0000000 -1.0000000 -1.0000000  0.33333333 -0.06666667   -1
7659   0.8333333  0.8333333 -1.0000000 -1.0000000 -0.93333333 -0.06666667   -1
7923   0.8333333 -0.6666667  0.8333333  0.8333333 -1.00000000 -0.06666667   -1
8099  -1.0000000 -1.0000000 -1.0000000  0.0000000 -0.06666667 -0.06666667   -1
8327  -0.1666667 -1.0000000 -0.1666667  0.8333333 -1.00000000 -0.06666667   -1
8368  -1.0000000 -1.0000000  0.0000000  0.0000000 -0.93333333 -0.06666667   -1
10173 -0.3333333 -1.0000000  0.8333333 -1.0000000  0.93333333 -0.06666667   -1
10850  0.8333333 -0.1666667  0.8333333  0.0000000  0.86666667 -0.06666667   -1
11477 -1.0000000  0.8333333 -0.1666667  0.8333333 -0.13333333 -0.06666667   -1
           RT_Ie      RT_Je cost_mean
1433  -0.3333333 -0.6666667  3.918691
2228  -0.3333333 -0.6666667  3.931316
4346  -0.3333333 -0.6666667  3.951128
4500  -0.3333333 -0.6666667  4.178228
5223  -0.3333333 -0.6666667  3.914737
6232  -0.3333333 -0.6666667  4.098696
7172  -0.3333333 -0.6666667  3.888106
7659  -0.3333333 -0.6666667  3.919815
7923  -0.3333333 -0.6666667  4.376136
8099  -0.3333333 -0.6666667  3.955155
8327  -0.3333333 -0.6666667  3.914592
8368  -0.3333333 -0.6666667  4.161465
10173 -0.3333333 -0.6666667  3.882154
10850 -0.3333333 -0.6666667  4.354743
11477 -0.3333333 -0.6666667  3.916292

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    T1_I + T1_J + T2_I + T2_J + U1_I

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Heteroscedasticity Test p-value: 0.358917199386
Heteroscedasticity transform NOT required.
Regression Step:            Df  Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1 0.05603 0.05603   3.773  0.124  
I(T1_J^2)    1 0.04712 0.04712   3.173  0.149  
I(T2_I^2)    1 0.02906 0.02906   1.957  0.234  
I(T2_J^2)    1 0.01944 0.01944   1.309  0.316  
I(U1_I^2)    1 0.00205 0.00205   0.138  0.729  
T1_I         1 0.01787 0.01787   1.204  0.334  
T1_J         1 0.07775 0.07775   5.236  0.084 .
T2_I         1 0.06660 0.06660   4.485  0.102  
T2_J         1 0.02073 0.02073   1.396  0.303  
U1_I         1 0.00029 0.00029   0.019  0.896  
Residuals    4 0.05940 0.01485                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1433   3.918691
2228   3.931316
4346   3.951128
4500   4.178228
5223   3.914737
6232   4.098696
7172   3.888106
7659   3.919815
7923   4.376136
8099   3.955155
8327   3.914592
8368   4.161465
10173  3.882154
10850  4.354743
11477  3.916292

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.33420018049585704, 'T1_J': 0.08402320454596839, 'I(T2_I^2)': 0.2344044666569595, 'U1_I': 0.8961581473461478, 'T2_J': 0.3028762474358031, 'T2_I': 0.10159097958967898, 'I(T2_J^2)': 0.3164188110530573, 'I(U1_I^2)': 0.7292402166373877, 'I(T1_I^2)': 0.12401927725848794, 'I(T1_J^2)': 0.14946394030865445}
Ordered Keys: 
['T1_J', 'T2_I', 'I(T1_I^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'T2_J', 'I(T2_J^2)', 'T1_I', 'I(U1_I^2)', 'U1_I']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + T1_I + T1_J + T2_I + T2_J + U1_I, 
    tau = 0.05, data = structure(list(T1_I = c(4, 0, 5, 5, 6, 
    0, 11, 11, 11, 0, 5, 0, 4, 11, 0), T1_J = c(11, 8, 6, 5, 
    11, 6, 0, 11, 2, 0, 0, 0, 0, 5, 11), T2_I = c(6, 11, 0, 5, 
    11, 0, 0, 0, 11, 0, 5, 6, 11, 11, 5), T2_J = c(0, 0, 7, 0, 
    11, 11, 0, 0, 11, 6, 11, 6, 0, 6, 11), U1_I = c(29, 0, 0, 
    16, 14, 29, 20, 1, 0, 14, 0, 1, 29, 28, 13), U_I = c(14, 
    14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14), 
        U_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), 
        RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), 
        RT_J = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), 
        cost_mean = c(3.918691, 3.931316, 3.951128, 4.178228, 
        3.914737, 4.098696, 3.888106, 3.919815, 4.376136, 3.955155, 
        3.914592, 4.161465, 3.882154, 4.354743, 3.916292)), .Names = c("T1_I", 
    "T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
    "cost_mean"), row.names = 45:59, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.852070e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     6.510000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.510000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)    -2.800000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -5.320000e-03 -1.797693e+308  1.797693e+308
I(U1_I^2)     8.400000e-04 -1.797693e+308  1.797693e+308
T1_I         -6.179000e-02 -1.797693e+308  1.797693e+308
T1_J          1.467000e-02 -1.797693e+308  1.797693e+308
T2_I          3.611000e-02 -1.797693e+308  1.797693e+308
T2_J          6.745000e-02 -1.797693e+308  1.797693e+308
U1_I         -2.043000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 9540
Valid coordinates: 7200/36000
Tested coordinates: 19021
Valid coordinates: 10800/36000
Tested coordinates: 28456
Valid coordinates: 14400/36000
Tested coordinates: 37919
Valid coordinates: 18000/36000
Tested coordinates: 47275
Valid coordinates: 21600/36000
Tested coordinates: 56673
Valid coordinates: 25200/36000
Tested coordinates: 66103
Valid coordinates: 28800/36000
Tested coordinates: 75354
Valid coordinates: 32400/36000
Tested coordinates: 84869
Valid coordinates: 36000/36000
Tested coordinates: 94253
Valid/Tested configurations: 36000/94253
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 188800      9

Pruned data dimensions: [1] 48075     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.33420018049585704, 'T1_J': 0.08402320454596839, 'I(T2_I^2)': 0.2344044666569595, 'U1_I': 0.8961581473461478, 'T2_J': 0.3028762474358031, 'T2_I': 0.10159097958967898, 'I(T2_J^2)': 0.3164188110530573, 'I(U1_I^2)': 0.7292402166373877, 'I(T1_I^2)': 0.12401927725848794, 'I(T1_J^2)': 0.14946394030865445}
Ordered Keys: 
['T1_J', 'T2_I', 'I(T1_I^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'T2_J', 'I(T2_J^2)', 'T1_I', 'I(U1_I^2)', 'U1_I']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.33420018049585704, 'T1_J': 0.08402320454596839, 'I(T2_I^2)': 0.2344044666569595, 'U1_I': 0.8961581473461478, 'T2_J': 0.3028762474358031, 'T2_I': 0.10159097958967898, 'I(T2_J^2)': 0.3164188110530573, 'I(U1_I^2)': 0.7292402166373877, 'I(T1_I^2)': 0.12401927725848794, 'I(T1_J^2)': 0.14946394030865445}
Ordered Keys: 
['T1_J', 'T2_I', 'I(T1_I^2)', 'I(T1_J^2)', 'I(T2_I^2)', 'T2_J', 'I(T2_J^2)', 'T1_I', 'I(U1_I^2)', 'U1_I']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
18343    3    7    9    9    2  25   0    1    3

Best From Design: [4, 0, 11, 0, 29, 14, 0, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
5.782431
Design Best Point:
[4, 0, 11, 0, 29, 14, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.671370570613
Predicted Best Point:
[3, 7, 9, 9, 2, 25, 0, 1, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[3, 7, 9, 9, 2, 25, 0, 1, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		3324
        Multiplications: 	1044
        Divisions: 		0
        Logical: 		0
        Reads: 			5411
        Writes: 		592
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.149064
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.671370570613
Slowdown (Predicted Best): 0.717529357462
Budget: 59/1000
Best point from design was better than predicted point
Updating Global Best: 3.882154
Current Best Point: 
[4, 0, 11, 0, 29, 14, 0, 2, 1]
Step 3
Generating valid search space of size 10400 (does not spend evaluations)
Valid coordinates: 1040/10400
Tested coordinates: 2756
Valid coordinates: 2080/10400
Tested coordinates: 5508
Valid coordinates: 3120/10400
Tested coordinates: 8166
Valid coordinates: 4160/10400
Tested coordinates: 10940
Valid coordinates: 5200/10400
Tested coordinates: 13634
Valid coordinates: 6240/10400
Tested coordinates: 16374
Valid coordinates: 7280/10400
Tested coordinates: 19117
Valid coordinates: 8320/10400
Tested coordinates: 21760
Valid coordinates: 9360/10400
Tested coordinates: 24513
Valid coordinates: 10400/10400
Tested coordinates: 27200
Valid/Tested configurations: 10400/27200
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 199200      9

Pruned data dimensions: [1] 58475     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Clean Info:
One-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I']
Clean 2 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 13 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 58475     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1708     0    3    0   11   29  14   0    2    1
10196    5   11    6   11    0  14   0    2    1
12322    0    0    4    6   29  14   0    2    1
14313    6    6    6    6   18  14   0    2    1
16354    6    0    7   11   29  14   0    2    1
21059    5    6   11    0   29  14   0    2    1
23995   11    5    0   11   14  14   0    2    1
28333   11   11    0    0   29  14   0    2    1
43853    0    4    6    0    0  14   0    2    1
49239    5    6    0    6    0  14   0    2    1
49333   11    0   11    4    0  14   0    2    1
52369    5    0    0    0   12  14   0    2    1
55266    0   11   11   11   15  14   0    2    1

D-Efficiency Approximation: [1] 0.3046478

Measuring design of size 13
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		690
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1405
        Writes: 		202
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.131753
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		663
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1335
        Writes: 		168
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.912413
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		694
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1395
        Writes: 		198
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.942637
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		683
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1373
        Writes: 		187
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.015809
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		697
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1402
        Writes: 		200
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.974697
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		697
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1402
        Writes: 		200
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.945359
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		688
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1386
        Writes: 		189
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.969926
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		694
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1395
        Writes: 		198
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.917184
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		660
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1328
        Writes: 		166
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.035406
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		660
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1328
        Writes: 		166
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.942914
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		660
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1328
        Writes: 		166
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.032402
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		525
        Multiplications: 	176
        Divisions: 		0
        Logical: 		0
        Reads: 			1007
        Writes: 		140
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.881786
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		680
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1367
        Writes: 		184
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.914333
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1708     0    3    0   11   29  14   0    2    1  4.131753
10196    5   11    6   11    0  14   0    2    1  3.912413
12322    0    0    4    6   29  14   0    2    1  3.942637
14313    6    6    6    6   18  14   0    2    1  4.015809
16354    6    0    7   11   29  14   0    2    1  3.974697
21059    5    6   11    0   29  14   0    2    1  3.945359
23995   11    5    0   11   14  14   0    2    1  3.969926
28333   11   11    0    0   29  14   0    2    1  3.917184
43853    0    4    6    0    0  14   0    2    1  4.035406
49239    5    6    0    6    0  14   0    2    1  3.942914
49333   11    0   11    4    0  14   0    2    1  4.032402
52369    5    0    0    0   12  14   0    2    1  3.881786
55266    0   11   11   11   15  14   0    2    1  3.914333

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1708     0    3    0   11   29  14   0    2    1  4.131753
10196    5   11    6   11    0  14   0    2    1  3.912413
12322    0    0    4    6   29  14   0    2    1  3.942637
14313    6    6    6    6   18  14   0    2    1  4.015809
16354    6    0    7   11   29  14   0    2    1  3.974697
21059    5    6   11    0   29  14   0    2    1  3.945359
23995   11    5    0   11   14  14   0    2    1  3.969926
28333   11   11    0    0   29  14   0    2    1  3.917184
43853    0    4    6    0    0  14   0    2    1  4.035406
49239    5    6    0    6    0  14   0    2    1  3.942914
49333   11    0   11    4    0  14   0    2    1  4.032402
52369    5    0    0    0   12  14   0    2    1  3.881786
55266    0   11   11   11   15  14   0    2    1  3.914333

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie U_Je
1708  -1.0000000 -0.5000000 -1.0000000  0.8333333  0.93333333 -0.06666667   -1
10196 -0.1666667  0.8333333  0.0000000  0.8333333 -1.00000000 -0.06666667   -1
12322 -1.0000000 -1.0000000 -0.3333333  0.0000000  0.93333333 -0.06666667   -1
14313  0.0000000  0.0000000  0.0000000  0.0000000  0.20000000 -0.06666667   -1
16354  0.0000000 -1.0000000  0.1666667  0.8333333  0.93333333 -0.06666667   -1
21059 -0.1666667  0.0000000  0.8333333 -1.0000000  0.93333333 -0.06666667   -1
23995  0.8333333 -0.1666667 -1.0000000  0.8333333 -0.06666667 -0.06666667   -1
28333  0.8333333  0.8333333 -1.0000000 -1.0000000  0.93333333 -0.06666667   -1
43853 -1.0000000 -0.3333333  0.0000000 -1.0000000 -1.00000000 -0.06666667   -1
49239 -0.1666667  0.0000000 -1.0000000  0.0000000 -1.00000000 -0.06666667   -1
49333  0.8333333 -1.0000000  0.8333333 -0.3333333 -1.00000000 -0.06666667   -1
52369 -0.1666667 -1.0000000 -1.0000000 -1.0000000 -0.20000000 -0.06666667   -1
55266 -1.0000000  0.8333333  0.8333333  0.8333333  0.00000000 -0.06666667   -1
           RT_Ie      RT_Je cost_mean
1708  -0.3333333 -0.6666667  4.131753
10196 -0.3333333 -0.6666667  3.912413
12322 -0.3333333 -0.6666667  3.942637
14313 -0.3333333 -0.6666667  4.015809
16354 -0.3333333 -0.6666667  3.974697
21059 -0.3333333 -0.6666667  3.945359
23995 -0.3333333 -0.6666667  3.969926
28333 -0.3333333 -0.6666667  3.917184
43853 -0.3333333 -0.6666667  4.035406
49239 -0.3333333 -0.6666667  3.942914
49333 -0.3333333 -0.6666667  4.032402
52369 -0.3333333 -0.6666667  3.881786
55266 -0.3333333 -0.6666667  3.914333

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    T1_I + T1_J + T2_I + T2_J + U1_I

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 72 10

Pruned data dimensions: [1] 28 10

Heteroscedasticity Test p-value: 0.00973423681995
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
45    4   11    6    0   29  14   0    2    1  3.918691
46    0    8   11    0    0  14   0    2    1  3.931316
47    5    6    0    7    0  14   0    2    1  3.951128
48    5    5    5    0   16  14   0    2    1  4.178228
49    6   11   11   11   14  14   0    2    1  3.914737
50    0    6    0   11   29  14   0    2    1  4.098696
51   11    0    0    0   20  14   0    2    1  3.888106
52   11   11    0    0    1  14   0    2    1  3.919815
53   11    2   11   11    0  14   0    2    1  4.376136
54    0    0    0    6   14  14   0    2    1  3.955155
55    5    0    5   11    0  14   0    2    1  3.914592
56    0    0    6    6    1  14   0    2    1  4.161465
57    4    0   11    0   29  14   0    2    1  3.882154
58   11    5   11    6   28  14   0    2    1  4.354743
59    0   11    5   11   13  14   0    2    1  3.916292
60    0    3    0   11   29  14   0    2    1  4.131753
61    5   11    6   11    0  14   0    2    1  3.912413
62    0    0    4    6   29  14   0    2    1  3.942637
63    6    6    6    6   18  14   0    2    1  4.015809
64    6    0    7   11   29  14   0    2    1  3.974697
65    5    6   11    0   29  14   0    2    1  3.945359
66   11    5    0   11   14  14   0    2    1  3.969926
67   11   11    0    0   29  14   0    2    1  3.917184
68    0    4    6    0    0  14   0    2    1  4.035406
69    5    6    0    6    0  14   0    2    1  3.942914
70   11    0   11    4    0  14   0    2    1  4.032402
71    5    0    0    0   12  14   0    2    1  3.881786
72    0   11   11   11   15  14   0    2    1  3.914333

Power Transform Unsuccessful
Regression Step:            Df  Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1 0.02924 0.02924   2.657 0.1215  
I(T1_J^2)    1 0.05667 0.05667   5.150 0.0366 *
I(T2_I^2)    1 0.02745 0.02745   2.495 0.1327  
I(T2_J^2)    1 0.02240 0.02240   2.035 0.1718  
I(U1_I^2)    1 0.00076 0.00076   0.069 0.7959  
T1_I         1 0.02535 0.02535   2.303 0.1475  
T1_J         1 0.07702 0.07702   6.999 0.0170 *
T2_I         1 0.03813 0.03813   3.465 0.0801 .
T2_J         1 0.00653 0.00653   0.594 0.4515  
U1_I         1 0.00121 0.00121   0.110 0.7443  
Residuals   17 0.18708 0.01100                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1708   4.131753
10196  3.912413
12322  3.942637
14313  4.015809
16354  3.974697
21059  3.945359
23995  3.969926
28333  3.917184
43853  4.035406
49239  3.942914
49333  4.032402
52369  3.881786
55266  3.914333

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.1474774713390544, 'T1_J': 0.016996759721578405, 'I(T2_I^2)': 0.13266254559551885, 'U1_I': 0.7443187831781809, 'T2_J': 0.4515425013189711, 'T2_I': 0.08006640782704776, 'I(T2_J^2)': 0.17180465911308743, 'I(U1_I^2)': 0.7959017844662306, 'I(T1_I^2)': 0.12145117385811852, 'I(T1_J^2)': 0.03655063336912087}
Ordered Keys: 
['T1_J', 'I(T1_J^2)', 'T2_I', 'I(T1_I^2)', 'I(T2_I^2)', 'T1_I', 'I(T2_J^2)', 'T2_J', 'U1_I', 'I(U1_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 72 10

Pruned data dimensions: [1] 28 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + T1_I + T1_J + T2_I + T2_J + U1_I, 
    tau = 0.05, data = structure(list(T1_I = c(4, 0, 5, 5, 6, 
    0, 11, 11, 11, 0, 5, 0, 4, 11, 0, 0, 5, 0, 6, 6, 5, 11, 11, 
    0, 5, 11, 5, 0), T1_J = c(11, 8, 6, 5, 11, 6, 0, 11, 2, 0, 
    0, 0, 0, 5, 11, 3, 11, 0, 6, 0, 6, 5, 11, 4, 6, 0, 0, 11), 
        T2_I = c(6, 11, 0, 5, 11, 0, 0, 0, 11, 0, 5, 6, 11, 11, 
        5, 0, 6, 4, 6, 7, 11, 0, 0, 6, 0, 11, 0, 11), T2_J = c(0, 
        0, 7, 0, 11, 11, 0, 0, 11, 6, 11, 6, 0, 6, 11, 11, 11, 
        6, 6, 11, 0, 11, 0, 0, 6, 4, 0, 11), U1_I = c(29, 0, 
        0, 16, 14, 29, 20, 1, 0, 14, 0, 1, 29, 28, 13, 29, 0, 
        29, 18, 29, 29, 14, 29, 0, 0, 0, 12, 15), U_I = c(14, 
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14), 
        U_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_I = c(2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1), cost_mean = c(3.918691, 3.931316, 3.951128, 
        4.178228, 3.914737, 4.098696, 3.888106, 3.919815, 4.376136, 
        3.955155, 3.914592, 4.161465, 3.882154, 4.354743, 3.916292, 
        4.131753, 3.912413, 3.942637, 4.015809, 3.974697, 3.945359, 
        3.969926, 3.917184, 4.035406, 3.942914, 4.032402, 3.881786, 
        3.914333)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", 
    "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 45:72, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.828380e+00 -1.797693e+308   5.278030e+00
I(T1_I^2)     9.300000e-04 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.950000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)    -1.080000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -1.510000e-03 -1.797693e+308  1.797693e+308
I(U1_I^2)    -1.000000e-05 -1.797693e+308  1.797693e+308
T1_I         -5.360000e-03 -1.797693e+308  1.797693e+308
T1_J          2.176000e-02 -1.797693e+308  1.797693e+308
T2_I          1.680000e-02 -1.797693e+308  1.797693e+308
T2_J          1.874000e-02 -1.797693e+308  1.797693e+308
U1_I          5.400000e-04 -1.797693e+308  1.797693e+308

Generating valid search space of size 31200 (does not spend evaluations)
Valid coordinates: 3120/31200
Tested coordinates: 8138
Valid coordinates: 6240/31200
Tested coordinates: 16271
Valid coordinates: 9360/31200
Tested coordinates: 24246
Valid coordinates: 12480/31200
Tested coordinates: 32281
Valid coordinates: 15600/31200
Tested coordinates: 40349
Valid coordinates: 18720/31200
Tested coordinates: 48639
Valid coordinates: 21840/31200
Tested coordinates: 56915
Valid coordinates: 24960/31200
Tested coordinates: 64966
Valid coordinates: 28080/31200
Tested coordinates: 73071
Valid coordinates: 31200/31200
Tested coordinates: 81250
Valid/Tested configurations: 31200/81250
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 230400      9

Pruned data dimensions: [1] 89675     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.1474774713390544, 'T1_J': 0.016996759721578405, 'I(T2_I^2)': 0.13266254559551885, 'U1_I': 0.7443187831781809, 'T2_J': 0.4515425013189711, 'T2_I': 0.08006640782704776, 'I(T2_J^2)': 0.17180465911308743, 'I(U1_I^2)': 0.7959017844662306, 'I(T1_I^2)': 0.12145117385811852, 'I(T1_J^2)': 0.03655063336912087}
Ordered Keys: 
['T1_J', 'I(T1_J^2)', 'T2_I', 'I(T1_I^2)', 'I(T2_I^2)', 'T1_I', 'I(T2_J^2)', 'T2_J', 'U1_I', 'I(U1_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.1474774713390544, 'T1_J': 0.016996759721578405, 'I(T2_I^2)': 0.13266254559551885, 'U1_I': 0.7443187831781809, 'T2_J': 0.4515425013189711, 'T2_I': 0.08006640782704776, 'I(T2_J^2)': 0.17180465911308743, 'I(U1_I^2)': 0.7959017844662306, 'I(T1_I^2)': 0.12145117385811852, 'I(T1_J^2)': 0.03655063336912087}
Ordered Keys: 
['T1_J', 'I(T1_J^2)', 'T2_I', 'I(T1_I^2)', 'I(T2_I^2)', 'T1_I', 'I(T2_J^2)', 'T2_J', 'U1_I', 'I(U1_I^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
55296    6    0    7    3   14   9   0    1    5

Best From Design: [5, 0, 0, 0, 12, 14, 0, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
5.782431
Design Best Point:
[5, 0, 0, 0, 12, 14, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.67130692956
Predicted Best Point:
[6, 0, 7, 3, 14, 9, 0, 1, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[6, 0, 7, 3, 14, 9, 0, 1, 5]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		5463
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			8742
        Writes: 		918
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.214007
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 14, 'RT_J': 1, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.67130692956
Slowdown (Predicted Best): 0.728760446947
Budget: 72/1000
Best point from design was better than predicted point
Updating Global Best: 3.881786
Current Best Point: 
[5, 0, 0, 0, 12, 14, 0, 2, 1]
Final Best Point: 
[5, 0, 0, 0, 12, 14, 0, 2, 1]
Ending DLMT
Best Point: [5, 0, 0, 0, 12, 14, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.48963157681
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.48963157681
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [5, 0, 0, 0, 12, 14, 0, 2, 1]={'T1_I': 32, 'T1_J': 1, 'U_J': 1, 'U_I': 15, 'T2_I': 1, 'T2_J': 1, 'U1_I': 13, 'RT_I': 4, 'RT_J': 2}, cost=3.881786e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-9637.90, runs=77
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 32
 T1_J = 1
 T2_I = 1
 T2_J = 1
 U1_I = 13
 U_I = 15
 U_J = 1
 cost_mean = 3.881786
 points = 77
 speedup = 1.48963157681
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		525
        Multiplications: 	176
        Divisions: 		0
        Logical: 		0
        Reads: 			1007
        Writes: 		140
        Comparisons:		10
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
