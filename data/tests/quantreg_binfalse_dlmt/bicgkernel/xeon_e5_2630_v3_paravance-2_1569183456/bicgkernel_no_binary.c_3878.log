
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84104
Valid coordinates: 3520/17600
Tested coordinates: 164981
Valid coordinates: 5280/17600
Tested coordinates: 250568
Valid coordinates: 7040/17600
Tested coordinates: 333447
Valid coordinates: 8800/17600
Tested coordinates: 416937
Valid coordinates: 10560/17600
Tested coordinates: 502794
Valid coordinates: 12320/17600
Tested coordinates: 584437
Valid coordinates: 14080/17600
Tested coordinates: 668535
Valid coordinates: 15840/17600
Tested coordinates: 751745
Valid coordinates: 17600/17600
Tested coordinates: 838394
Valid/Tested configurations: 17600/838394
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1867     1    0   11    0   29   0   0    5    2
2513     0    0    0    8   27  11   0    2    5
3861     5    5    0    6    0  15   0    5    2
4051    11    8   11   10    2   0   0    2    3
4075     1    5    0   11   11   0  29    2    0
5679     7    5    7    5   19   0   0    3    1
5822     0   11    3   11   17   0  10    2    5
6217    11    3   11    5   14   0  28    0    5
6299     7    4   11    0   11  29   0    2    5
7091     6   11   11   11   11  16   0    0    3
8787     3   11    0    0   22   0   2    0    0
9931     5    0   11    5    0   0  16    2    0
10000    7    4    7   11    1   0   0    0    5
10573    0    1    6    4   15   0  18    0    3
13097    6    5    0   11   29   0  20    2    2
13130   11    0    0    0   11   0   9    5    2
13442    1    0    4   11    3  29   0    5    1
13612    0    6    8    0    0  17   0    0    1
14802    0    7   11    8   26   0   8    5    0
15438   10    1   10   11   27  13   0    0    0
15764    8   11    8    0   29   0  29    4    3
16865   11    8    0    9   27  29   0    0    2

D-Efficiency Approximation: [1] 0.2228259

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		1981
        Multiplications: 	656
        Divisions: 		0
        Logical: 		0
        Reads: 			3402
        Writes: 		380
        Comparisons:		9
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.659083
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		7270
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11394
        Writes: 		1193
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.956287
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2940
        Multiplications: 	980
        Divisions: 		0
        Logical: 		0
        Reads: 			5051
        Writes: 		543
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.83895
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		532
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			995
        Writes: 		122
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.666758
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1879
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3221
        Writes: 		351
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.681203
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		311
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			655
        Writes: 		99
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.16651
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2642
        Multiplications: 	880
        Divisions: 		0
        Logical: 		0
        Reads: 			4533
        Writes: 		487
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.953214
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		594
        Multiplications: 	248
        Divisions: 		0
        Logical: 		0
        Reads: 			1335
        Writes: 		159
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.590879
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		15424
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23296
        Writes: 		2387
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.700266
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		2071
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3382
        Writes: 		379
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.46689
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		78
        Multiplications: 	16
        Divisions: 		0
        Logical: 		0
        Reads: 			177
        Writes: 		47
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582622
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		1080
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1883
        Writes: 		205
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.683161
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		312
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			718
        Writes: 		86
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580273
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		289
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			657
        Writes: 		92
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.133977
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1580
        Multiplications: 	520
        Divisions: 		0
        Logical: 		0
        Reads: 			2771
        Writes: 		323
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.391404
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		6235
        Multiplications: 	1936
        Divisions: 		0
        Logical: 		0
        Reads: 			9767
        Writes: 		1002
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.778759
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2062
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3960
        Writes: 		447
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580788
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		633
        Multiplications: 	228
        Divisions: 		0
        Logical: 		0
        Reads: 			1246
        Writes: 		154
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.349463
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		4274
        Multiplications: 	1320
        Divisions: 		0
        Logical: 		0
        Reads: 			6751
        Writes: 		716
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.898226
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		206
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			461
        Writes: 		96
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.734158
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		8726
        Multiplications: 	2652
        Divisions: 		0
        Logical: 		0
        Reads: 			13417
        Writes: 		1385
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.399303
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1915
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3307
        Writes: 		396
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.435569
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1867     1    0   11    0   29   0   0    5    2  4.659083
2513     0    0    0    8   27  11   0    2    5  3.956287
3861     5    5    0    6    0  15   0    5    2  6.838950
4051    11    8   11   10    2   0   0    2    3  3.666758
4075     1    5    0   11   11   0  29    2    0  4.681203
5679     7    5    7    5   19   0   0    3    1  3.166510
5822     0   11    3   11   17   0  10    2    5  3.953214
6217    11    3   11    5   14   0  28    0    5  5.590879
6299     7    4   11    0   11  29   0    2    5  3.700266
7091     6   11   11   11   11  16   0    0    3  3.466890
8787     3   11    0    0   22   0   2    0    0  4.582622
9931     5    0   11    5    0   0  16    2    0  3.683161
10000    7    4    7   11    1   0   0    0    5  4.580273
10573    0    1    6    4   15   0  18    0    3  9.133977
13097    6    5    0   11   29   0  20    2    2  3.391404
13130   11    0    0    0   11   0   9    5    2  6.778759
13442    1    0    4   11    3  29   0    5    1  4.580788
13612    0    6    8    0    0  17   0    0    1  3.349463
14802    0    7   11    8   26   0   8    5    0  6.898226
15438   10    1   10   11   27  13   0    0    0  3.734158
15764    8   11    8    0   29   0  29    4    3  3.399303
16865   11    8    0    9   27  29   0    0    2  6.435569

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1867     1    0   11    0   29   0   0    5    2  4.659083
2513     0    0    0    8   27  11   0    2    5  3.956287
3861     5    5    0    6    0  15   0    5    2  6.838950
4051    11    8   11   10    2   0   0    2    3  3.666758
4075     1    5    0   11   11   0  29    2    0  4.681203
5679     7    5    7    5   19   0   0    3    1  3.166510
5822     0   11    3   11   17   0  10    2    5  3.953214
6217    11    3   11    5   14   0  28    0    5  5.590879
6299     7    4   11    0   11  29   0    2    5  3.700266
7091     6   11   11   11   11  16   0    0    3  3.466890
8787     3   11    0    0   22   0   2    0    0  4.582622
9931     5    0   11    5    0   0  16    2    0  3.683161
10000    7    4    7   11    1   0   0    0    5  4.580273
10573    0    1    6    4   15   0  18    0    3  9.133977
13097    6    5    0   11   29   0  20    2    2  3.391404
13130   11    0    0    0   11   0   9    5    2  6.778759
13442    1    0    4   11    3  29   0    5    1  4.580788
13612    0    6    8    0    0  17   0    0    1  3.349463
14802    0    7   11    8   26   0   8    5    0  6.898226
15438   10    1   10   11   27  13   0    0    0  3.734158
15764    8   11    8    0   29   0  29    4    3  3.399303
16865   11    8    0    9   27  29   0    0    2  6.435569

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
1867  -0.8333333 -1.0000000  0.8333333 -1.0000000  0.93333333 -1.00000000
2513  -1.0000000 -1.0000000 -1.0000000  0.3333333  0.80000000 -0.26666667
3861  -0.1666667 -0.1666667 -1.0000000  0.0000000 -1.00000000  0.00000000
4051   0.8333333  0.3333333  0.8333333  0.6666667 -0.86666667 -1.00000000
4075  -0.8333333 -0.1666667 -1.0000000  0.8333333 -0.26666667 -1.00000000
5679   0.1666667 -0.1666667  0.1666667 -0.1666667  0.26666667 -1.00000000
5822  -1.0000000  0.8333333 -0.5000000  0.8333333  0.13333333 -1.00000000
6217   0.8333333 -0.5000000  0.8333333 -0.1666667 -0.06666667 -1.00000000
6299   0.1666667 -0.3333333  0.8333333 -1.0000000 -0.26666667  0.93333333
7091   0.0000000  0.8333333  0.8333333  0.8333333 -0.26666667  0.06666667
8787  -0.5000000  0.8333333 -1.0000000 -1.0000000  0.46666667 -1.00000000
9931  -0.1666667 -1.0000000  0.8333333 -0.1666667 -1.00000000 -1.00000000
10000  0.1666667 -0.3333333  0.1666667  0.8333333 -0.93333333 -1.00000000
10573 -1.0000000 -0.8333333  0.0000000 -0.3333333  0.00000000 -1.00000000
13097  0.0000000 -0.1666667 -1.0000000  0.8333333  0.93333333 -1.00000000
13130  0.8333333 -1.0000000 -1.0000000 -1.0000000 -0.26666667 -1.00000000
13442 -0.8333333 -1.0000000 -0.3333333  0.8333333 -0.80000000  0.93333333
13612 -1.0000000  0.0000000  0.3333333 -1.0000000 -1.00000000  0.13333333
14802 -1.0000000  0.1666667  0.8333333  0.3333333  0.73333333 -1.00000000
15438  0.6666667 -0.8333333  0.6666667  0.8333333  0.80000000 -0.13333333
15764  0.3333333  0.8333333  0.3333333 -1.0000000  0.93333333 -1.00000000
16865  0.8333333  0.3333333 -1.0000000  0.5000000  0.80000000  0.93333333
             U_Je      RT_Ie      RT_Je cost_mean
1867  -1.00000000  0.6666667 -0.3333333  4.659083
2513  -1.00000000 -0.3333333  0.6666667  3.956287
3861  -1.00000000  0.6666667 -0.3333333  6.838950
4051  -1.00000000 -0.3333333  0.0000000  3.666758
4075   0.93333333 -0.3333333 -1.0000000  4.681203
5679  -1.00000000  0.0000000 -0.6666667  3.166510
5822  -0.33333333 -0.3333333  0.6666667  3.953214
6217   0.86666667 -1.0000000  0.6666667  5.590879
6299  -1.00000000 -0.3333333  0.6666667  3.700266
7091  -1.00000000 -1.0000000  0.0000000  3.466890
8787  -0.86666667 -1.0000000 -1.0000000  4.582622
9931   0.06666667 -0.3333333 -1.0000000  3.683161
10000 -1.00000000 -1.0000000  0.6666667  4.580273
10573  0.20000000 -1.0000000  0.0000000  9.133977
13097  0.33333333 -0.3333333 -0.3333333  3.391404
13130 -0.40000000  0.6666667 -0.3333333  6.778759
13442 -1.00000000  0.6666667 -0.6666667  4.580788
13612 -1.00000000 -1.0000000 -0.6666667  3.349463
14802 -0.46666667  0.6666667 -1.0000000  6.898226
15438 -1.00000000 -1.0000000 -1.0000000  3.734158
15764  0.93333333  0.3333333  0.0000000  3.399303
16865 -1.00000000 -1.0000000 -0.3333333  6.435569

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.168154282785
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1  0.027   0.027   0.010  0.926
I(T1_J^2)    1  3.166   3.166   1.193  0.355
I(T2_I^2)    1  3.149   3.149   1.187  0.356
I(T2_J^2)    1  2.649   2.649   0.999  0.391
I(U1_I^2)    1  0.176   0.176   0.066  0.814
I(U_I^2)     1  0.082   0.082   0.031  0.872
I(U_J^2)     1  0.012   0.012   0.005  0.950
I(RT_I^2)    1  2.024   2.024   0.763  0.447
I(RT_J^2)    1  0.002   0.002   0.001  0.982
T1_I         1  6.600   6.600   2.487  0.213
T1_J         1  0.483   0.483   0.182  0.698
T2_I         1  0.261   0.261   0.098  0.775
T2_J         1  5.150   5.150   1.941  0.258
U1_I         1  1.884   1.884   0.710  0.461
U_I          1  0.275   0.275   0.104  0.769
U_J          1  2.217   2.217   0.836  0.428
RT_I         1 14.160  14.160   5.337  0.104
RT_J         1  1.175   1.175   0.443  0.553
Residuals    3  7.960   2.653               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1867   4.659083
2513   3.956287
3861   6.838950
4051   3.666758
4075   4.681203
5679   3.166510
5822   3.953214
6217   5.590879
6299   3.700266
7091   3.466890
8787   4.582622
9931   3.683161
10000  4.580273
10573  9.133977
13097  3.391404
13130  6.778759
13442  4.580788
13612  3.349463
14802  6.898226
15438  3.734158
15764  3.399303
16865  6.435569

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.9816703200602678, 'T1_J': 0.698292453688976, 'T2_J': 0.25785178249222585, 'U_J': 0.428050909945817, 'U_I': 0.7685645870864192, 'I(T2_I^2)': 0.35562794037740186, 'T2_I': 0.7745158042855738, 'U1_I': 0.46124932861397083, 'I(U_I^2)': 0.8718784914130109, 'I(RT_I^2)': 0.4467753469379613, 'I(T2_J^2)': 0.3913057712627562, 'I(U1_I^2)': 0.8135116806762521, 'RT_I': 0.1040172395770265, 'I(T1_I^2)': 0.9256707691511931, 'I(T1_J^2)': 0.3545610988031497, 'I(U_J^2)': 0.9504923244592387, 'RT_J': 0.5532948720364943, 'T1_I': 0.21285895549438127}
Ordered Keys: 
['RT_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'U_J', 'I(RT_I^2)', 'U1_I', 'RT_J', 'T1_J', 'U_I', 'T2_I', 'I(U1_I^2)', 'I(U_I^2)', 'I(T1_I^2)', 'I(U_J^2)', 'I(RT_J^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.1, data = structure(list(T1_I = c(1, 
0, 5, 11, 1, 7, 0, 11, 7, 6, 3, 5, 7, 0, 6, 11, 1, 0, 0, 10, 
8, 11), T1_J = c(0, 0, 5, 8, 5, 5, 11, 3, 4, 11, 11, 0, 4, 1, 
5, 0, 0, 6, 7, 1, 11, 8), T2_I = c(11, 0, 0, 11, 0, 7, 3, 11, 
11, 11, 0, 11, 7, 6, 0, 0, 4, 8, 11, 10, 8, 0), T2_J = c(0, 8, 
6, 10, 11, 5, 11, 5, 0, 11, 0, 5, 11, 4, 11, 0, 11, 0, 8, 11, 
0, 9), U1_I = c(29, 27, 0, 2, 11, 19, 17, 14, 11, 11, 22, 0, 
1, 15, 29, 11, 3, 0, 26, 27, 29, 27), U_I = c(0, 11, 15, 0, 0, 
0, 0, 0, 29, 16, 0, 0, 0, 0, 0, 0, 29, 17, 0, 13, 0, 29), U_J = c(0, 
0, 0, 0, 29, 0, 10, 28, 0, 0, 2, 16, 0, 18, 20, 9, 0, 0, 8, 0, 
29, 0), RT_I = c(5, 2, 5, 2, 2, 3, 2, 0, 2, 0, 0, 2, 0, 0, 2, 
5, 5, 0, 5, 0, 4, 0), RT_J = c(2, 5, 2, 3, 0, 1, 5, 5, 5, 3, 
0, 0, 5, 3, 2, 2, 1, 1, 0, 0, 3, 2), cost_mean = c(4.659083, 
3.956287, 6.83895, 3.666758, 4.681203, 3.16651, 3.953214, 5.590879, 
3.700266, 3.46689, 4.582622, 3.683161, 4.580273, 9.133977, 3.391404, 
6.778759, 4.580788, 3.349463, 6.898226, 3.734158, 3.399303, 6.435569
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("1867", "2513", 
"3861", "4051", "4075", "5679", "5822", "6217", "6299", "7091", 
"8787", "9931", "10000", "10573", "13097", "13130", "13442", 
"13612", "14802", "15438", "15764", "16865"), class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.787170e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     1.324000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)    -6.640000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     1.514000e-02 -1.797693e+308  1.797693e+308
I(T2_J^2)    -3.622000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)     2.440000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)      1.750000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)     -6.540000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     3.449800e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     1.017000e-01 -1.797693e+308  1.797693e+308
T1_I         -4.187000e-02 -1.797693e+308  1.797693e+308
T1_J          1.448600e-01 -1.797693e+308  1.797693e+308
T2_I         -2.228600e-01 -1.797693e+308  1.797693e+308
T2_J          3.773700e-01 -1.797693e+308  1.797693e+308
U1_I         -6.626000e-02 -1.797693e+308  1.797693e+308
U_I          -3.340000e-02 -1.797693e+308  1.797693e+308
U_J           1.580500e-01 -1.797693e+308  1.797693e+308
RT_I         -1.410910e+00 -1.797693e+308  1.797693e+308
RT_J         -2.929200e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 252779
Valid coordinates: 10560/52800
Tested coordinates: 509720
Valid coordinates: 15840/52800
Tested coordinates: 764071
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1018279
Valid coordinates: 26400/52800
Tested coordinates: 1271538
Valid coordinates: 31680/52800
Tested coordinates: 1523871
Valid coordinates: 36960/52800
Tested coordinates: 1778102
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2036845
Valid coordinates: 47520/52800
Tested coordinates: 2294635
Valid coordinates: 52800/52800
Tested coordinates: 2550740
Valid/Tested configurations: 52800/2550740
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9816703200602678, 'T1_J': 0.698292453688976, 'T2_J': 0.25785178249222585, 'U_J': 0.428050909945817, 'U_I': 0.7685645870864192, 'I(T2_I^2)': 0.35562794037740186, 'T2_I': 0.7745158042855738, 'U1_I': 0.46124932861397083, 'I(U_I^2)': 0.8718784914130109, 'I(RT_I^2)': 0.4467753469379613, 'I(T2_J^2)': 0.3913057712627562, 'I(U1_I^2)': 0.8135116806762521, 'RT_I': 0.1040172395770265, 'I(T1_I^2)': 0.9256707691511931, 'I(T1_J^2)': 0.3545610988031497, 'I(U_J^2)': 0.9504923244592387, 'RT_J': 0.5532948720364943, 'T1_I': 0.21285895549438127}
Ordered Keys: 
['RT_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'U_J', 'I(RT_I^2)', 'U1_I', 'RT_J', 'T1_J', 'U_I', 'T2_I', 'I(U1_I^2)', 'I(U_I^2)', 'I(T1_I^2)', 'I(U_J^2)', 'I(RT_J^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9816703200602678, 'T1_J': 0.698292453688976, 'T2_J': 0.25785178249222585, 'U_J': 0.428050909945817, 'U_I': 0.7685645870864192, 'I(T2_I^2)': 0.35562794037740186, 'T2_I': 0.7745158042855738, 'U1_I': 0.46124932861397083, 'I(U_I^2)': 0.8718784914130109, 'I(RT_I^2)': 0.4467753469379613, 'I(T2_J^2)': 0.3913057712627562, 'I(U1_I^2)': 0.8135116806762521, 'RT_I': 0.1040172395770265, 'I(T1_I^2)': 0.9256707691511931, 'I(T1_J^2)': 0.3545610988031497, 'I(U_J^2)': 0.9504923244592387, 'RT_J': 0.5532948720364943, 'T1_I': 0.21285895549438127}
Ordered Keys: 
['RT_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'I(T2_I^2)', 'I(T2_J^2)', 'U_J', 'I(RT_I^2)', 'U1_I', 'RT_J', 'T1_J', 'U_I', 'T2_I', 'I(U1_I^2)', 'I(U_I^2)', 'I(T1_I^2)', 'I(U_J^2)', 'I(RT_J^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
49285    0    0   10   11   11   0  29    2    1

Best From Design: [7, 5, 7, 5, 19, 0, 0, 3, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.748472
Baseline Point:
4.748472
Design Best Point:
[7, 5, 7, 5, 19, 0, 0, 3, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.666848198747
Predicted Best Point:
[0, 0, 10, 11, 11, 0, 29, 2, 1]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 0, 10, 11, 11, 0, 29, 2, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1976
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3421
        Writes: 		371
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.180965
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.666848198747
Slowdown (Predicted Best): 0.669892335892
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.16651
Current Best Point: 
[7, 5, 7, 5, 19, 0, 0, 3, 1]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 85388
Valid coordinates: 3520/17600
Tested coordinates: 166958
Valid coordinates: 5280/17600
Tested coordinates: 252342
Valid coordinates: 7040/17600
Tested coordinates: 336948
Valid coordinates: 8800/17600
Tested coordinates: 423538
Valid coordinates: 10560/17600
Tested coordinates: 508071
Valid coordinates: 12320/17600
Tested coordinates: 593330
Valid coordinates: 14080/17600
Tested coordinates: 676174
Valid coordinates: 15840/17600
Tested coordinates: 762869
Valid coordinates: 17600/17600
Tested coordinates: 847349
Valid/Tested configurations: 17600/847349
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1589     6    2   11    6   29   0   1    0    2
3629     1   11    6    0    9  18   0    0    5
4673     6    4    6    6   18   0  29    2    0
8278     4    0    5   11   29  29   0    2    5
18715    0    0   11    7    1   0  23    2    5
21811    1   11    0    0   29   0  20    2    0
29078    5    8    0   11    0  12   0    3    3
32088   11    6   11    0   29  19   0    5    0
34031    0    2    0   11    5   0  28    0    0
35214    5    2    0    6    8  29   0    5    0
40389    2   11    6   11    1   1   0    5    1
46485    7    0    0    0   12   0  22    4    3
48342   11    5    0    0   18   0   0    2    5
50876    0    7   11    0    5  29   0    2    2
58643    5    4    7    0    0   0  16    1    0
63210    3    8   11    0    0   0  29    5    2
68241    0    1    5    5   29   0  12    5    2
71764    3    0   11   11   14   0   0    4    0
73197   11    0   11    3    0  21   0    0    0
73881    0    0    7   11   15  12   0    2    2
78855   11   11   11   11   16   0  14    1    2
86595    2    6   11   11   19   0  15    0    5

D-Efficiency Approximation: [1] 0.2249559

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	6
        Additions: 		117
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			272
        Writes: 		66
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.855194
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		8783
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			13342
        Writes: 		1375
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583119
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1886
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3235
        Writes: 		358
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.784953
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		15442
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23332
        Writes: 		2405
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.066903
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3406
        Multiplications: 	1140
        Divisions: 		0
        Logical: 		0
        Reads: 			5801
        Writes: 		601
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.995055
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1351
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2343
        Writes: 		275
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581885
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2489
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4105
        Writes: 		446
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.429431
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		554
        Multiplications: 	212
        Divisions: 		0
        Logical: 		0
        Reads: 			1244
        Writes: 		183
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.53315
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		295
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			663
        Writes: 		82
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.586832
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		642
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1443
        Writes: 		198
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.658879
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1136
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2220
        Writes: 		249
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.726506
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		6875
        Multiplications: 	2080
        Divisions: 		0
        Logical: 		0
        Reads: 			10489
        Writes: 		1075
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.475713
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1982
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3413
        Writes: 		374
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.047119
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2115
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3677
        Writes: 		419
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.31305
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		596
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1163
        Writes: 		133
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.634618
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		15383
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23197
        Writes: 		2339
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582847
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		7736
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			12051
        Writes: 		1251
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.146788
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		186
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			438
        Writes: 		72
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.609894
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		248
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			560
        Writes: 		86
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.923174
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1088
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1963
        Writes: 		242
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.29415
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		671
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1331
        Writes: 		166
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.408118
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	6
        Additions: 		485
        Multiplications: 	196
        Divisions: 		0
        Logical: 		0
        Reads: 			1092
        Writes: 		140
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.672959
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1589     6    2   11    6   29   0   1    0    2  4.855194
3629     1   11    6    0    9  18   0    0    5  4.583119
4673     6    4    6    6   18   0  29    2    0  3.784953
8278     4    0    5   11   29  29   0    2    5  4.066903
18715    0    0   11    7    1   0  23    2    5  3.995055
21811    1   11    0    0   29   0  20    2    0  4.581885
29078    5    8    0   11    0  12   0    3    3  3.429431
32088   11    6   11    0   29  19   0    5    0  5.533150
34031    0    2    0   11    5   0  28    0    0  4.586832
35214    5    2    0    6    8  29   0    5    0  5.658879
40389    2   11    6   11    1   1   0    5    1  3.726506
46485    7    0    0    0   12   0  22    4    3  3.475713
48342   11    5    0    0   18   0   0    2    5  4.047119
50876    0    7   11    0    5  29   0    2    2  3.313050
58643    5    4    7    0    0   0  16    1    0  3.634618
63210    3    8   11    0    0   0  29    5    2  4.582847
68241    0    1    5    5   29   0  12    5    2  7.146788
71764    3    0   11   11   14   0   0    4    0  4.609894
73197   11    0   11    3    0  21   0    0    0  3.923174
73881    0    0    7   11   15  12   0    2    2  3.294150
78855   11   11   11   11   16   0  14    1    2  3.408118
86595    2    6   11   11   19   0  15    0    5  4.672959

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1589     6    2   11    6   29   0   1    0    2  4.855194
3629     1   11    6    0    9  18   0    0    5  4.583119
4673     6    4    6    6   18   0  29    2    0  3.784953
8278     4    0    5   11   29  29   0    2    5  4.066903
18715    0    0   11    7    1   0  23    2    5  3.995055
21811    1   11    0    0   29   0  20    2    0  4.581885
29078    5    8    0   11    0  12   0    3    3  3.429431
32088   11    6   11    0   29  19   0    5    0  5.533150
34031    0    2    0   11    5   0  28    0    0  4.586832
35214    5    2    0    6    8  29   0    5    0  5.658879
40389    2   11    6   11    1   1   0    5    1  3.726506
46485    7    0    0    0   12   0  22    4    3  3.475713
48342   11    5    0    0   18   0   0    2    5  4.047119
50876    0    7   11    0    5  29   0    2    2  3.313050
58643    5    4    7    0    0   0  16    1    0  3.634618
63210    3    8   11    0    0   0  29    5    2  4.582847
68241    0    1    5    5   29   0  12    5    2  7.146788
71764    3    0   11   11   14   0   0    4    0  4.609894
73197   11    0   11    3    0  21   0    0    0  3.923174
73881    0    0    7   11   15  12   0    2    2  3.294150
78855   11   11   11   11   16   0  14    1    2  3.408118
86595    2    6   11   11   19   0  15    0    5  4.672959

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
1589   0.0000000 -0.6666667  0.8333333  0.0000000  0.93333333 -1.0000000
3629  -0.8333333  0.8333333  0.0000000 -1.0000000 -0.40000000  0.2000000
4673   0.0000000 -0.3333333  0.0000000  0.0000000  0.20000000 -1.0000000
8278  -0.3333333 -1.0000000 -0.1666667  0.8333333  0.93333333  0.9333333
18715 -1.0000000 -1.0000000  0.8333333  0.1666667 -0.93333333 -1.0000000
21811 -0.8333333  0.8333333 -1.0000000 -1.0000000  0.93333333 -1.0000000
29078 -0.1666667  0.3333333 -1.0000000  0.8333333 -1.00000000 -0.2000000
32088  0.8333333  0.0000000  0.8333333 -1.0000000  0.93333333  0.2666667
34031 -1.0000000 -0.6666667 -1.0000000  0.8333333 -0.66666667 -1.0000000
35214 -0.1666667 -0.6666667 -1.0000000  0.0000000 -0.46666667  0.9333333
40389 -0.6666667  0.8333333  0.0000000  0.8333333 -0.93333333 -0.9333333
46485  0.1666667 -1.0000000 -1.0000000 -1.0000000 -0.20000000 -1.0000000
48342  0.8333333 -0.1666667 -1.0000000 -1.0000000  0.20000000 -1.0000000
50876 -1.0000000  0.1666667  0.8333333 -1.0000000 -0.66666667  0.9333333
58643 -0.1666667 -0.3333333  0.1666667 -1.0000000 -1.00000000 -1.0000000
63210 -0.5000000  0.3333333  0.8333333 -1.0000000 -1.00000000 -1.0000000
68241 -1.0000000 -0.8333333 -0.1666667 -0.1666667  0.93333333 -1.0000000
71764 -0.5000000 -1.0000000  0.8333333  0.8333333 -0.06666667 -1.0000000
73197  0.8333333 -1.0000000  0.8333333 -0.5000000 -1.00000000  0.4000000
73881 -1.0000000 -1.0000000  0.1666667  0.8333333  0.00000000 -0.2000000
78855  0.8333333  0.8333333  0.8333333  0.8333333  0.06666667 -1.0000000
86595 -0.6666667  0.0000000  0.8333333  0.8333333  0.26666667 -1.0000000
             U_Je      RT_Ie      RT_Je cost_mean
1589  -0.93333333 -1.0000000 -0.3333333  4.855194
3629  -1.00000000 -1.0000000  0.6666667  4.583119
4673   0.93333333 -0.3333333 -1.0000000  3.784953
8278  -1.00000000 -0.3333333  0.6666667  4.066903
18715  0.53333333 -0.3333333  0.6666667  3.995055
21811  0.33333333 -0.3333333 -1.0000000  4.581885
29078 -1.00000000  0.0000000  0.0000000  3.429431
32088 -1.00000000  0.6666667 -1.0000000  5.533150
34031  0.86666667 -1.0000000 -1.0000000  4.586832
35214 -1.00000000  0.6666667 -1.0000000  5.658879
40389 -1.00000000  0.6666667 -0.6666667  3.726506
46485  0.46666667  0.3333333  0.0000000  3.475713
48342 -1.00000000 -0.3333333  0.6666667  4.047119
50876 -1.00000000 -0.3333333 -0.3333333  3.313050
58643  0.06666667 -0.6666667 -1.0000000  3.634618
63210  0.93333333  0.6666667 -0.3333333  4.582847
68241 -0.20000000  0.6666667 -0.3333333  7.146788
71764 -1.00000000  0.3333333 -1.0000000  4.609894
73197 -1.00000000 -1.0000000 -1.0000000  3.923174
73881 -1.00000000 -0.3333333 -0.3333333  3.294150
78855 -0.06666667 -0.6666667 -0.3333333  3.408118
86595  0.00000000 -1.0000000  0.6666667  4.672959

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.0167375077285
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1     1    0   11    0   29   0   0    5    2  4.659083
2     0    0    0    8   27  11   0    2    5  3.956287
3     5    5    0    6    0  15   0    5    2  6.838950
4    11    8   11   10    2   0   0    2    3  3.666758
5     1    5    0   11   11   0  29    2    0  4.681203
6     7    5    7    5   19   0   0    3    1  3.166510
7     0   11    3   11   17   0  10    2    5  3.953214
8    11    3   11    5   14   0  28    0    5  5.590879
9     7    4   11    0   11  29   0    2    5  3.700266
10    6   11   11   11   11  16   0    0    3  3.466890
11    3   11    0    0   22   0   2    0    0  4.582622
12    5    0   11    5    0   0  16    2    0  3.683161
13    7    4    7   11    1   0   0    0    5  4.580273
14    0    1    6    4   15   0  18    0    3  9.133977
15    6    5    0   11   29   0  20    2    2  3.391404
16   11    0    0    0   11   0   9    5    2  6.778759
17    1    0    4   11    3  29   0    5    1  4.580788
18    0    6    8    0    0  17   0    0    1  3.349463
19    0    7   11    8   26   0   8    5    0  6.898226
20   10    1   10   11   27  13   0    0    0  3.734158
21    8   11    8    0   29   0  29    4    3  3.399303
22   11    8    0    9   27  29   0    0    2  6.435569
23    6    2   11    6   29   0   1    0    2  4.855194
24    1   11    6    0    9  18   0    0    5  4.583119
25    6    4    6    6   18   0  29    2    0  3.784953
26    4    0    5   11   29  29   0    2    5  4.066903
27    0    0   11    7    1   0  23    2    5  3.995055
28    1   11    0    0   29   0  20    2    0  4.581885
29    5    8    0   11    0  12   0    3    3  3.429431
30   11    6   11    0   29  19   0    5    0  5.533150
31    0    2    0   11    5   0  28    0    0  4.586832
32    5    2    0    6    8  29   0    5    0  5.658879
33    2   11    6   11    1   1   0    5    1  3.726506
34    7    0    0    0   12   0  22    4    3  3.475713
35   11    5    0    0   18   0   0    2    5  4.047119
36    0    7   11    0    5  29   0    2    2  3.313050
37    5    4    7    0    0   0  16    1    0  3.634618
38    3    8   11    0    0   0  29    5    2  4.582847
39    0    1    5    5   29   0  12    5    2  7.146788
40    3    0   11   11   14   0   0    4    0  4.609894
41   11    0   11    3    0  21   0    0    0  3.923174
42    0    0    7   11   15  12   0    2    2  3.294150
43   11   11   11   11   16   0  14    1    2  3.408118
44    2    6   11   11   19   0  15    0    5  4.672959

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value  Pr(>F)    
I(T1_I^2)    1 0.0000002 0.0000002   0.002 0.96184    
I(T1_J^2)    1 0.0003300 0.0003300   4.031 0.05559 .  
I(T2_I^2)    1 0.0001684 0.0001684   2.057 0.16392    
I(T2_J^2)    1 0.0001839 0.0001839   2.246 0.14646    
I(U1_I^2)    1 0.0002387 0.0002387   2.916 0.10010    
I(U_I^2)     1 0.0000001 0.0000001   0.001 0.97329    
I(U_J^2)     1 0.0000001 0.0000001   0.001 0.97412    
I(RT_I^2)    1 0.0007100 0.0007100   8.674 0.00689 ** 
I(RT_J^2)    1 0.0001172 0.0001172   1.432 0.24266    
T1_I         1 0.0005041 0.0005041   6.159 0.02015 *  
T1_J         1 0.0000852 0.0000852   1.041 0.31735    
T2_I         1 0.0001676 0.0001676   2.048 0.16483    
T2_J         1 0.0006047 0.0006047   7.387 0.01176 *  
U1_I         1 0.0000404 0.0000404   0.494 0.48869    
U_I          1 0.0001179 0.0001179   1.440 0.24133    
U_J          1 0.0000269 0.0000269   0.329 0.57136    
RT_I         1 0.0026083 0.0026083  31.865 7.1e-06 ***
RT_J         1 0.0002254 0.0002254   2.754 0.10950    
Residuals   25 0.0020464 0.0000819                    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1589   4.855194
3629   4.583119
4673   3.784953
8278   4.066903
18715  3.995055
21811  4.581885
29078  3.429431
32088  5.533150
34031  4.586832
35214  5.658879
40389  3.726506
46485  3.475713
48342  4.047119
50876  3.313050
58643  3.634618
63210  4.582847
68241  7.146788
71764  4.609894
73197  3.923174
73881  3.294150
78855  3.408118
86595  4.672959

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.24266190772137797, 'T1_J': 0.3173531864989749, 'T2_J': 0.011759728480566443, 'U_J': 0.5713612767530063, 'U_I': 0.24132650792990357, 'I(T2_I^2)': 0.16392180256234315, 'T2_I': 0.16482775349564543, 'U1_I': 0.4886862434362508, 'I(U_I^2)': 0.9732948711690883, 'I(RT_I^2)': 0.006886380320930432, 'I(T2_J^2)': 0.14646432857186178, 'I(U1_I^2)': 0.10010385403636263, 'RT_I': 7.099978984420265e-06, 'I(T1_I^2)': 0.961842867465408, 'I(T1_J^2)': 0.0555863513337274, 'I(U_J^2)': 0.9741164044026801, 'RT_J': 0.10949826406974891, 'T1_I': 0.02015347501120825}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'T2_J', 'T1_I', 'I(T1_J^2)', 'I(U1_I^2)', 'RT_J', 'I(T2_J^2)', 'I(T2_I^2)', 'T2_I', 'U_I', 'I(RT_J^2)', 'T1_J', 'U1_I', 'U_J', 'I(T1_I^2)', 'I(U_I^2)', 'I(U_J^2)']
Variables within threshold: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)']
Predicting Best Values for: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)']
Using Model: cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2), 
    tau = 0.1, data = structure(list(T1_I = c(1, 0, 5, 11, 1, 
    7, 0, 11, 7, 6, 3, 5, 7, 0, 6, 11, 1, 0, 0, 10, 8, 11, 6, 
    1, 6, 4, 0, 1, 5, 11, 0, 5, 2, 7, 11, 0, 5, 3, 0, 3, 11, 
    0, 11, 2), T1_J = c(0, 0, 5, 8, 5, 5, 11, 3, 4, 11, 11, 0, 
    4, 1, 5, 0, 0, 6, 7, 1, 11, 8, 2, 11, 4, 0, 0, 11, 8, 6, 
    2, 2, 11, 0, 5, 7, 4, 8, 1, 0, 0, 0, 11, 6), T2_I = c(11, 
    0, 0, 11, 0, 7, 3, 11, 11, 11, 0, 11, 7, 6, 0, 0, 4, 8, 11, 
    10, 8, 0, 11, 6, 6, 5, 11, 0, 0, 11, 0, 0, 6, 0, 0, 11, 7, 
    11, 5, 11, 11, 7, 11, 11), T2_J = c(0, 8, 6, 10, 11, 5, 11, 
    5, 0, 11, 0, 5, 11, 4, 11, 0, 11, 0, 8, 11, 0, 9, 6, 0, 6, 
    11, 7, 0, 11, 0, 11, 6, 11, 0, 0, 0, 0, 0, 5, 11, 3, 11, 
    11, 11), U1_I = c(29, 27, 0, 2, 11, 19, 17, 14, 11, 11, 22, 
    0, 1, 15, 29, 11, 3, 0, 26, 27, 29, 27, 29, 9, 18, 29, 1, 
    29, 0, 29, 5, 8, 1, 12, 18, 5, 0, 0, 29, 14, 0, 15, 16, 19
    ), U_I = c(0, 11, 15, 0, 0, 0, 0, 0, 29, 16, 0, 0, 0, 0, 
    0, 0, 29, 17, 0, 13, 0, 29, 0, 18, 0, 29, 0, 0, 12, 19, 0, 
    29, 1, 0, 0, 29, 0, 0, 0, 0, 21, 12, 0, 0), U_J = c(0, 0, 
    0, 0, 29, 0, 10, 28, 0, 0, 2, 16, 0, 18, 20, 9, 0, 0, 8, 
    0, 29, 0, 1, 0, 29, 0, 23, 20, 0, 0, 28, 0, 0, 22, 0, 0, 
    16, 29, 12, 0, 0, 0, 14, 15), RT_I = c(5, 2, 5, 2, 2, 3, 
    2, 0, 2, 0, 0, 2, 0, 0, 2, 5, 5, 0, 5, 0, 4, 0, 0, 0, 2, 
    2, 2, 2, 3, 5, 0, 5, 5, 4, 2, 2, 1, 5, 5, 4, 0, 2, 1, 0), 
        RT_J = c(2, 5, 2, 3, 0, 1, 5, 5, 5, 3, 0, 0, 5, 3, 2, 
        2, 1, 1, 0, 0, 3, 2, 2, 5, 0, 5, 5, 0, 3, 0, 0, 0, 1, 
        3, 5, 2, 0, 2, 2, 0, 0, 2, 2, 5), cost_mean = c(4.659083, 
        3.956287, 6.83895, 3.666758, 4.681203, 3.16651, 3.953214, 
        5.590879, 3.700266, 3.46689, 4.582622, 3.683161, 4.580273, 
        9.133977, 3.391404, 6.778759, 4.580788, 3.349463, 6.898226, 
        3.734158, 3.399303, 6.435569, 4.855194, 4.583119, 3.784953, 
        4.066903, 3.995055, 4.581885, 3.429431, 5.53315, 4.586832, 
        5.658879, 3.726506, 3.475713, 4.047119, 3.31305, 3.634618, 
        4.582847, 7.146788, 4.609894, 3.923174, 3.29415, 3.408118, 
        4.672959)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", 
    "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
    -44L), class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.466890e+00 -1.797693e+308   3.785940e+00
RT_I         -1.966600e-01  -6.135900e-01  -7.717000e-02
I(RT_I^2)     4.972000e-02   1.412000e-02   2.427600e-01

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 249812
Valid coordinates: 10560/52800
Tested coordinates: 504527
Valid coordinates: 15840/52800
Tested coordinates: 757835
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1012187
Valid coordinates: 26400/52800
Tested coordinates: 1259812
Valid coordinates: 31680/52800
Tested coordinates: 1512769
Valid coordinates: 36960/52800
Tested coordinates: 1761411
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2017316
Valid coordinates: 47520/52800
Tested coordinates: 2270306
Valid coordinates: 52800/52800
Tested coordinates: 2521702
Valid/Tested configurations: 52800/2521702
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.24266190772137797, 'T1_J': 0.3173531864989749, 'T2_J': 0.011759728480566443, 'U_J': 0.5713612767530063, 'U_I': 0.24132650792990357, 'I(T2_I^2)': 0.16392180256234315, 'T2_I': 0.16482775349564543, 'U1_I': 0.4886862434362508, 'I(U_I^2)': 0.9732948711690883, 'I(RT_I^2)': 0.006886380320930432, 'I(T2_J^2)': 0.14646432857186178, 'I(U1_I^2)': 0.10010385403636263, 'RT_I': 7.099978984420265e-06, 'I(T1_I^2)': 0.961842867465408, 'I(T1_J^2)': 0.0555863513337274, 'I(U_J^2)': 0.9741164044026801, 'RT_J': 0.10949826406974891, 'T1_I': 0.02015347501120825}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'T2_J', 'T1_I', 'I(T1_J^2)', 'I(U1_I^2)', 'RT_J', 'I(T2_J^2)', 'I(T2_I^2)', 'T2_I', 'U_I', 'I(RT_J^2)', 'T1_J', 'U1_I', 'U_J', 'I(T1_I^2)', 'I(U_I^2)', 'I(U_J^2)']
Variables within threshold: ['RT_I']
Unique Variables: ['RT_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.24266190772137797, 'T1_J': 0.3173531864989749, 'T2_J': 0.011759728480566443, 'U_J': 0.5713612767530063, 'U_I': 0.24132650792990357, 'I(T2_I^2)': 0.16392180256234315, 'T2_I': 0.16482775349564543, 'U1_I': 0.4886862434362508, 'I(U_I^2)': 0.9732948711690883, 'I(RT_I^2)': 0.006886380320930432, 'I(T2_J^2)': 0.14646432857186178, 'I(U1_I^2)': 0.10010385403636263, 'RT_I': 7.099978984420265e-06, 'I(T1_I^2)': 0.961842867465408, 'I(T1_J^2)': 0.0555863513337274, 'I(U_J^2)': 0.9741164044026801, 'RT_J': 0.10949826406974891, 'T1_I': 0.02015347501120825}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'T2_J', 'T1_I', 'I(T1_J^2)', 'I(U1_I^2)', 'RT_J', 'I(T2_J^2)', 'I(T2_I^2)', 'T2_I', 'U_I', 'I(RT_J^2)', 'T1_J', 'U1_I', 'U_J', 'I(T1_I^2)', 'I(U_I^2)', 'I(U_J^2)']
Variables within threshold: ['RT_I']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
20    8    2    9    9   25   0  13    2    5

Best From Design: [0, 0, 7, 11, 15, 12, 0, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.748472
Design Best Point:
[0, 0, 7, 11, 15, 12, 0, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.693728424638
Predicted Best Point:
[8, 2, 9, 9, 25, 0, 13, 2, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[8, 2, 9, 9, 25, 0, 13, 2, 5]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2839
        Multiplications: 	940
        Divisions: 		0
        Logical: 		0
        Reads: 			4870
        Writes: 		531
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.888165
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.693728424638
Slowdown (Predicted Best): 1.0294185161
Budget: 44/1000
Best point from design was better than predicted point
Current Best Point: 
[7, 5, 7, 5, 19, 0, 0, 3, 1]
Step 2
Generating valid search space of size 15200 (does not spend evaluations)
Valid coordinates: 1520/15200
Tested coordinates: 60307
Valid coordinates: 3040/15200
Tested coordinates: 123219
Valid coordinates: 4560/15200
Tested coordinates: 182720
Valid coordinates: 6080/15200
Tested coordinates: 245981
Valid coordinates: 7600/15200
Tested coordinates: 303868
Valid coordinates: 9120/15200
Tested coordinates: 366153
Valid coordinates: 10640/15200
Tested coordinates: 425208
Valid coordinates: 12160/15200
Tested coordinates: 487489
Valid coordinates: 13680/15200
Tested coordinates: 547911
Valid coordinates: 15200/15200
Tested coordinates: 608307
Valid/Tested configurations: 15200/608307
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 156000      9

Pruned data dimensions: [1] 43304     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['RT_I']
Two-Level Factors: ['RT_I']
Three-Level Factors: ['RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 19 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 43304     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
3455     0   11    5    0   15   0  29    2    2
4462     0    0    4    0   17  13   0    2    5
10132   11    3   11    0    2   0  29    2    3
11559   11    6    0    6   16   2   0    2    5
11693    5    3    5   11   29   2   0    2    2
13788    5    0    5    4   12   0  16    2    2
15613    4   11    8   11    0   0  14    2    5
18954    4    0    0    6    0  15   0    2    3
20712    0    0   11    3   25  29   0    2    4
26645    3    0    0   10   16   0  29    2    0
27691    0    6   11   11   14   0  13    2    3
32523    5    7    0    0   29   0  18    2    5
33143   11   11    0   11   29  28   0    2    3
33896    0    7    0    0    0   0   2    2    0
35820    5   11   11    0   24   0   0    2    4
36327   11    0   11    0   28   0  21    2    0
36355    0    4    7    7   27   0  29    2    5
39551    4    7   11    7   29  13   0    2    0
42701    7    6    7    0    6  29   0    2    0

D-Efficiency Approximation: [1] 0.2401234

Measuring design of size 19
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2100
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3629
        Writes: 		395
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.295563
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		8036
        Multiplications: 	2448
        Divisions: 		0
        Logical: 		0
        Reads: 			12375
        Writes: 		1280
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.94224
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2327
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4003
        Writes: 		422
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.749552
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3195
        Multiplications: 	1056
        Divisions: 		0
        Logical: 		0
        Reads: 			5425
        Writes: 		581
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.109241
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		501
        Multiplications: 	160
        Divisions: 		0
        Logical: 		0
        Reads: 			992
        Writes: 		152
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.48965
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1317
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2323
        Writes: 		262
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.4696
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		2863
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4897
        Writes: 		509
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.071056
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		2367
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3910
        Writes: 		425
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.370982
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		7835
        Multiplications: 	2380
        Divisions: 		0
        Logical: 		0
        Reads: 			12117
        Writes: 		1279
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.709836
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1878
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3217
        Writes: 		352
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.664398
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1385
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2441
        Writes: 		278
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.633412
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3134
        Multiplications: 	1040
        Divisions: 		0
        Logical: 		0
        Reads: 			5357
        Writes: 		579
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.974663
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3922
        Multiplications: 	1224
        Divisions: 		0
        Logical: 		0
        Reads: 			6343
        Writes: 		704
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.435914
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		232
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			468
        Writes: 		61
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.676545
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1031
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1832
        Writes: 		222
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.664943
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		1388
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2419
        Writes: 		280
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.755774
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3798
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6467
        Writes: 		691
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.91324
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		245
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			559
        Writes: 		111
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.608234
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		379
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			858
        Writes: 		134
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.622074
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
3455     0   11    5    0   15   0  29    2    2  3.295563
4462     0    0    4    0   17  13   0    2    5  3.942240
10132   11    3   11    0    2   0  29    2    3  3.749552
11559   11    6    0    6   16   2   0    2    5  4.109241
11693    5    3    5   11   29   2   0    2    2  3.489650
13788    5    0    5    4   12   0  16    2    2  3.469600
15613    4   11    8   11    0   0  14    2    5  4.071056
18954    4    0    0    6    0  15   0    2    3  3.370982
20712    0    0   11    3   25  29   0    2    4  3.709836
26645    3    0    0   10   16   0  29    2    0  3.664398
27691    0    6   11   11   14   0  13    2    3  3.633412
32523    5    7    0    0   29   0  18    2    5  3.974663
33143   11   11    0   11   29  28   0    2    3  3.435914
33896    0    7    0    0    0   0   2    2    0  3.676545
35820    5   11   11    0   24   0   0    2    4  3.664943
36327   11    0   11    0   28   0  21    2    0  3.755774
36355    0    4    7    7   27   0  29    2    5  3.913240
39551    4    7   11    7   29  13   0    2    0  3.608234
42701    7    6    7    0    6  29   0    2    0  3.622074

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
3455     0   11    5    0   15   0  29    2    2  3.295563
4462     0    0    4    0   17  13   0    2    5  3.942240
10132   11    3   11    0    2   0  29    2    3  3.749552
11559   11    6    0    6   16   2   0    2    5  4.109241
11693    5    3    5   11   29   2   0    2    2  3.489650
13788    5    0    5    4   12   0  16    2    2  3.469600
15613    4   11    8   11    0   0  14    2    5  4.071056
18954    4    0    0    6    0  15   0    2    3  3.370982
20712    0    0   11    3   25  29   0    2    4  3.709836
26645    3    0    0   10   16   0  29    2    0  3.664398
27691    0    6   11   11   14   0  13    2    3  3.633412
32523    5    7    0    0   29   0  18    2    5  3.974663
33143   11   11    0   11   29  28   0    2    3  3.435914
33896    0    7    0    0    0   0   2    2    0  3.676545
35820    5   11   11    0   24   0   0    2    4  3.664943
36327   11    0   11    0   28   0  21    2    0  3.755774
36355    0    4    7    7   27   0  29    2    5  3.913240
39551    4    7   11    7   29  13   0    2    0  3.608234
42701    7    6    7    0    6  29   0    2    0  3.622074

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
3455  -1.0000000  0.8333333 -0.1666667 -1.0000000  0.00000000 -1.0000000
4462  -1.0000000 -1.0000000 -0.3333333 -1.0000000  0.13333333 -0.1333333
10132  0.8333333 -0.5000000  0.8333333 -1.0000000 -0.86666667 -1.0000000
11559  0.8333333  0.0000000 -1.0000000  0.0000000  0.06666667 -0.8666667
11693 -0.1666667 -0.5000000 -0.1666667  0.8333333  0.93333333 -0.8666667
13788 -0.1666667 -1.0000000 -0.1666667 -0.3333333 -0.20000000 -1.0000000
15613 -0.3333333  0.8333333  0.3333333  0.8333333 -1.00000000 -1.0000000
18954 -0.3333333 -1.0000000 -1.0000000  0.0000000 -1.00000000  0.0000000
20712 -1.0000000 -1.0000000  0.8333333 -0.5000000  0.66666667  0.9333333
26645 -0.5000000 -1.0000000 -1.0000000  0.6666667  0.06666667 -1.0000000
27691 -1.0000000  0.0000000  0.8333333  0.8333333 -0.06666667 -1.0000000
32523 -0.1666667  0.1666667 -1.0000000 -1.0000000  0.93333333 -1.0000000
33143  0.8333333  0.8333333 -1.0000000  0.8333333  0.93333333  0.8666667
33896 -1.0000000  0.1666667 -1.0000000 -1.0000000 -1.00000000 -1.0000000
35820 -0.1666667  0.8333333  0.8333333 -1.0000000  0.60000000 -1.0000000
36327  0.8333333 -1.0000000  0.8333333 -1.0000000  0.86666667 -1.0000000
36355 -1.0000000 -0.3333333  0.1666667  0.1666667  0.80000000 -1.0000000
39551 -0.3333333  0.1666667  0.8333333  0.1666667  0.93333333 -0.1333333
42701  0.1666667  0.0000000  0.1666667 -1.0000000 -0.60000000  0.9333333
             U_Je      RT_Ie      RT_Je cost_mean
3455   0.93333333 -0.3333333 -0.3333333  3.295563
4462  -1.00000000 -0.3333333  0.6666667  3.942240
10132  0.93333333 -0.3333333  0.0000000  3.749552
11559 -1.00000000 -0.3333333  0.6666667  4.109241
11693 -1.00000000 -0.3333333 -0.3333333  3.489650
13788  0.06666667 -0.3333333 -0.3333333  3.469600
15613 -0.06666667 -0.3333333  0.6666667  4.071056
18954 -1.00000000 -0.3333333  0.0000000  3.370982
20712 -1.00000000 -0.3333333  0.3333333  3.709836
26645  0.93333333 -0.3333333 -1.0000000  3.664398
27691 -0.13333333 -0.3333333  0.0000000  3.633412
32523  0.20000000 -0.3333333  0.6666667  3.974663
33143 -1.00000000 -0.3333333  0.0000000  3.435914
33896 -0.86666667 -0.3333333 -1.0000000  3.676545
35820 -1.00000000 -0.3333333  0.3333333  3.664943
36327  0.40000000 -0.3333333 -1.0000000  3.755774
36355  0.93333333 -0.3333333  0.6666667  3.913240
39551 -1.00000000 -0.3333333 -1.0000000  3.608234
42701 -1.00000000 -0.3333333 -1.0000000  3.622074

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U1_I + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 63 10

Pruned data dimensions: [1] 33 10

Heteroscedasticity Test p-value: 0.00722796156011
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2     0    0    0    8   27  11   0    2    5  3.956287
4    11    8   11   10    2   0   0    2    3  3.666758
5     1    5    0   11   11   0  29    2    0  4.681203
7     0   11    3   11   17   0  10    2    5  3.953214
9     7    4   11    0   11  29   0    2    5  3.700266
12    5    0   11    5    0   0  16    2    0  3.683161
15    6    5    0   11   29   0  20    2    2  3.391404
25    6    4    6    6   18   0  29    2    0  3.784953
26    4    0    5   11   29  29   0    2    5  4.066903
27    0    0   11    7    1   0  23    2    5  3.995055
28    1   11    0    0   29   0  20    2    0  4.581885
35   11    5    0    0   18   0   0    2    5  4.047119
36    0    7   11    0    5  29   0    2    2  3.313050
42    0    0    7   11   15  12   0    2    2  3.294150
45    0   11    5    0   15   0  29    2    2  3.295563
46    0    0    4    0   17  13   0    2    5  3.942240
47   11    3   11    0    2   0  29    2    3  3.749552
48   11    6    0    6   16   2   0    2    5  4.109241
49    5    3    5   11   29   2   0    2    2  3.489650
50    5    0    5    4   12   0  16    2    2  3.469600
51    4   11    8   11    0   0  14    2    5  4.071056
52    4    0    0    6    0  15   0    2    3  3.370982
53    0    0   11    3   25  29   0    2    4  3.709836
54    3    0    0   10   16   0  29    2    0  3.664398
55    0    6   11   11   14   0  13    2    3  3.633412
56    5    7    0    0   29   0  18    2    5  3.974663
57   11   11    0   11   29  28   0    2    3  3.435914
58    0    7    0    0    0   0   2    2    0  3.676545
59    5   11   11    0   24   0   0    2    4  3.664943
60   11    0   11    0   28   0  21    2    0  3.755774
61    0    4    7    7   27   0  29    2    5  3.913240
62    4    7   11    7   29  13   0    2    0  3.608234
63    7    6    7    0    6  29   0    2    0  3.622074

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 9.400e-10 9.400e-10   0.169 0.686298    
I(T1_J^2)    1 5.000e-11 5.000e-11   0.008 0.928937    
I(T2_I^2)    1 5.970e-09 5.970e-09   1.076 0.314956    
I(T2_J^2)    1 1.130e-09 1.130e-09   0.203 0.658326    
I(U1_I^2)    1 2.860e-09 2.860e-09   0.515 0.483283    
I(U_I^2)     1 1.588e-08 1.588e-08   2.860 0.110181    
I(U_J^2)     1 1.880e-09 1.880e-09   0.338 0.568987    
I(RT_J^2)    1 8.312e-08 8.312e-08  14.973 0.001358 ** 
T1_I         1 2.600e-10 2.600e-10   0.048 0.829829    
T1_J         1 2.750e-09 2.750e-09   0.496 0.491474    
T2_I         1 1.080e-08 1.080e-08   1.945 0.182189    
T2_J         1 1.700e-10 1.700e-10   0.030 0.865162    
U1_I         1 5.100e-10 5.100e-10   0.092 0.764967    
U_I          1 1.178e-08 1.178e-08   2.122 0.164532    
U_J          1 4.000e-11 4.000e-11   0.008 0.930249    
RT_J         1 1.262e-07 1.262e-07  22.736 0.000209 ***
Residuals   16 8.882e-08 5.550e-09                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
3455   3.295563
4462   3.942240
10132  3.749552
11559  4.109241
11693  3.489650
13788  3.469600
15613  4.071056
18954  3.370982
20712  3.709836
26645  3.664398
27691  3.633412
32523  3.974663
33143  3.435914
33896  3.676545
35820  3.664943
36327  3.755774
36355  3.913240
39551  3.608234
42701  3.622074

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.0013581597332310196, 'T1_J': 0.49147400563114263, 'T2_J': 0.8651617993626542, 'U_J': 0.9302488308702669, 'U_I': 0.16453186321913724, 'I(T2_I^2)': 0.3149560294584478, 'U1_I': 0.7649672215816432, 'I(U_I^2)': 0.1101813906812961, 'T2_I': 0.1821889217599383, 'I(T2_J^2)': 0.6583258148436111, 'I(U1_I^2)': 0.48328319620075755, 'I(T1_I^2)': 0.6862980542275414, 'I(T1_J^2)': 0.9289369617050482, 'I(U_J^2)': 0.5689874774384447, 'RT_J': 0.0002094594811344065, 'T1_I': 0.8298286311431811}
Ordered Keys: 
['RT_J', 'I(RT_J^2)', 'I(U_I^2)', 'U_I', 'T2_I', 'I(T2_I^2)', 'I(U1_I^2)', 'T1_J', 'I(U_J^2)', 'I(T2_J^2)', 'I(T1_I^2)', 'U1_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'U_J']
Variables within threshold: ['RT_J', 'I(RT_J^2)', 'RT_J', 'I(RT_J^2)']
Predicting Best Values for: ['RT_J', 'I(RT_J^2)', 'RT_J', 'I(RT_J^2)']
Using Model: cost_mean ~ RT_J + I(RT_J^2) + RT_J + I(RT_J^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 63 10

Pruned data dimensions: [1] 33 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_J + I(RT_J^2) + RT_J + I(RT_J^2), 
    tau = 0.1, data = structure(list(T1_I = c(0, 11, 1, 0, 7, 
    5, 6, 6, 4, 0, 1, 11, 0, 0, 0, 0, 11, 11, 5, 5, 4, 4, 0, 
    3, 0, 5, 11, 0, 5, 11, 0, 4, 7), T1_J = c(0, 8, 5, 11, 4, 
    0, 5, 4, 0, 0, 11, 5, 7, 0, 11, 0, 3, 6, 3, 0, 11, 0, 0, 
    0, 6, 7, 11, 7, 11, 0, 4, 7, 6), T2_I = c(0, 11, 0, 3, 11, 
    11, 0, 6, 5, 11, 0, 0, 11, 7, 5, 4, 11, 0, 5, 5, 8, 0, 11, 
    0, 11, 0, 0, 0, 11, 11, 7, 11, 7), T2_J = c(8, 10, 11, 11, 
    0, 5, 11, 6, 11, 7, 0, 0, 0, 11, 0, 0, 0, 6, 11, 4, 11, 6, 
    3, 10, 11, 0, 11, 0, 0, 0, 7, 7, 0), U1_I = c(27, 2, 11, 
    17, 11, 0, 29, 18, 29, 1, 29, 18, 5, 15, 15, 17, 2, 16, 29, 
    12, 0, 0, 25, 16, 14, 29, 29, 0, 24, 28, 27, 29, 6), U_I = c(11, 
    0, 0, 0, 29, 0, 0, 0, 29, 0, 0, 0, 29, 12, 0, 13, 0, 2, 2, 
    0, 0, 15, 29, 0, 0, 0, 28, 0, 0, 0, 0, 13, 29), U_J = c(0, 
    0, 29, 10, 0, 16, 20, 29, 0, 23, 20, 0, 0, 0, 29, 0, 29, 
    0, 0, 16, 14, 0, 0, 29, 13, 18, 0, 2, 0, 21, 29, 0, 0), RT_I = c(2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(5, 3, 0, 
    5, 5, 0, 2, 0, 5, 5, 0, 5, 2, 2, 2, 5, 3, 5, 2, 2, 5, 3, 
    4, 0, 3, 5, 3, 0, 4, 0, 5, 0, 0), cost_mean = c(3.956287, 
    3.666758, 4.681203, 3.953214, 3.700266, 3.683161, 3.391404, 
    3.784953, 4.066903, 3.995055, 4.581885, 4.047119, 3.31305, 
    3.29415, 3.295563, 3.94224, 3.749552, 4.109241, 3.48965, 
    3.4696, 4.071056, 3.370982, 3.709836, 3.664398, 3.633412, 
    3.974663, 3.435914, 3.676545, 3.664943, 3.755774, 3.91324, 
    3.608234, 3.622074)), .Names = c("T1_I", "T1_J", "T2_I", 
    "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
    ), row.names = c(2L, 4L, 5L, 7L, 9L, 12L, 15L, 25L, 26L, 
    27L, 28L, 35L, 36L, 42L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 
    52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L
    ), class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.608230e+00 -1.797693e+308   3.634750e+00
RT_J         -3.012300e-01 -1.797693e+308   1.554100e-01
I(RT_J^2)     7.245000e-02   4.696000e-02  1.797693e+308

Generating valid search space of size 45600 (does not spend evaluations)
Valid coordinates: 4560/45600
Tested coordinates: 182287
Valid coordinates: 9120/45600
Tested coordinates: 363659
Valid coordinates: 13680/45600
Tested coordinates: 544194
Valid coordinates: 18240/45600
Tested coordinates: 724630
Valid coordinates: 22800/45600
Tested coordinates: 906302
Tested coordinates: 1000000
Valid coordinates: 27360/45600
Tested coordinates: 1089474
Valid coordinates: 31920/45600
Tested coordinates: 1271237
Valid coordinates: 36480/45600
Tested coordinates: 1453681
Valid coordinates: 41040/45600
Tested coordinates: 1634388
Valid coordinates: 45600/45600
Tested coordinates: 1816010
Valid/Tested configurations: 45600/1816010
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 201600      9

Pruned data dimensions: [1] 88904     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0013581597332310196, 'T1_J': 0.49147400563114263, 'T2_J': 0.8651617993626542, 'U_J': 0.9302488308702669, 'U_I': 0.16453186321913724, 'I(T2_I^2)': 0.3149560294584478, 'U1_I': 0.7649672215816432, 'I(U_I^2)': 0.1101813906812961, 'T2_I': 0.1821889217599383, 'I(T2_J^2)': 0.6583258148436111, 'I(U1_I^2)': 0.48328319620075755, 'I(T1_I^2)': 0.6862980542275414, 'I(T1_J^2)': 0.9289369617050482, 'I(U_J^2)': 0.5689874774384447, 'RT_J': 0.0002094594811344065, 'T1_I': 0.8298286311431811}
Ordered Keys: 
['RT_J', 'I(RT_J^2)', 'I(U_I^2)', 'U_I', 'T2_I', 'I(T2_I^2)', 'I(U1_I^2)', 'T1_J', 'I(U_J^2)', 'I(T2_J^2)', 'I(T1_I^2)', 'U1_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'U_J']
Variables within threshold: ['RT_J']
Unique Variables: ['RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0013581597332310196, 'T1_J': 0.49147400563114263, 'T2_J': 0.8651617993626542, 'U_J': 0.9302488308702669, 'U_I': 0.16453186321913724, 'I(T2_I^2)': 0.3149560294584478, 'U1_I': 0.7649672215816432, 'I(U_I^2)': 0.1101813906812961, 'T2_I': 0.1821889217599383, 'I(T2_J^2)': 0.6583258148436111, 'I(U1_I^2)': 0.48328319620075755, 'I(T1_I^2)': 0.6862980542275414, 'I(T1_J^2)': 0.9289369617050482, 'I(U_J^2)': 0.5689874774384447, 'RT_J': 0.0002094594811344065, 'T1_I': 0.8298286311431811}
Ordered Keys: 
['RT_J', 'I(RT_J^2)', 'I(U_I^2)', 'U_I', 'T2_I', 'I(T2_I^2)', 'I(U1_I^2)', 'T1_J', 'I(U_J^2)', 'I(T2_J^2)', 'I(T1_I^2)', 'U1_I', 'T1_I', 'T2_J', 'I(T1_J^2)', 'U_J']
Variables within threshold: ['RT_J']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
11    0    9    1   11   14  22   0    3    3

Best From Design: [0, 11, 5, 0, 15, 0, 29, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 3, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.748472
Design Best Point:
[0, 11, 5, 0, 15, 0, 29, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.694025994046
Predicted Best Point:
[0, 9, 1, 11, 14, 22, 0, 3, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 9, 1, 11, 14, 22, 0, 3, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		3678
        Multiplications: 	1152
        Divisions: 		0
        Logical: 		0
        Reads: 			5962
        Writes: 		653
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684171
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 3, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.694025994046
Slowdown (Predicted Best): 0.986458591311
Budget: 63/1000
Best point from design was better than predicted point
Current Best Point: 
[7, 5, 7, 5, 19, 0, 0, 3, 1]
Step 3
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 54808
Valid coordinates: 2720/13600
Tested coordinates: 107692
Valid coordinates: 4080/13600
Tested coordinates: 160986
Valid coordinates: 5440/13600
Tested coordinates: 215410
Valid coordinates: 6800/13600
Tested coordinates: 269165
Valid coordinates: 8160/13600
Tested coordinates: 323631
Valid coordinates: 9520/13600
Tested coordinates: 377336
Valid coordinates: 10880/13600
Tested coordinates: 435227
Valid coordinates: 12240/13600
Tested coordinates: 488737
Valid coordinates: 13600/13600
Tested coordinates: 542491
Valid/Tested configurations: 13600/542491
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 215200      9

Pruned data dimensions: [1] 28570     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Clean Info:
One-Level Factors: ['RT_I', 'RT_J']
Two-Level Factors: ['RT_I', 'RT_J']
Three-Level Factors: ['RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 3, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 3, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 28570     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
661      5    0   11    8    0   0  17    2    3
1373     4    7    5   11    0  17   0    2    3
4150    11   11   11    0   11   0  16    2    3
5386     0    5    5    5   29   0  12    2    3
5563    11   11    0   11   29  28   0    2    3
5566    11    0    0    4   17  16   0    2    3
8177     6    1    0    0   29   2   0    2    3
10229    1   11   11   11   28  14   0    2    3
11694    3   11    0    0    1   0  26    2    3
11887    7    4    0   11   16   0  16    2    3
13608    0    1   11   11    7   0  29    2    3
16869   11    6   11    0    0  14   0    2    3
19077    5    7   11    7   15  29   0    2    3
20732    9    5    9    5   27   0  29    2    3
23736    0    0    4    0    2  29   0    2    3
24944    6   11    6   11   12   0   1    2    3
26158    0    7    0    8    0   0   0    2    3

D-Efficiency Approximation: [1] 0.2538434

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1603
        Multiplications: 	540
        Divisions: 		0
        Logical: 		0
        Reads: 			2797
        Writes: 		299
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.344026
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		2613
        Multiplications: 	828
        Divisions: 		0
        Logical: 		0
        Reads: 			4302
        Writes: 		471
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.453661
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1556
        Multiplications: 	520
        Divisions: 		0
        Logical: 		0
        Reads: 			2721
        Writes: 		301
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.333803
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1334
        Multiplications: 	440
        Divisions: 		0
        Logical: 		0
        Reads: 			2357
        Writes: 		279
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.443816
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2506
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4135
        Writes: 		464
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.496453
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		880
        Multiplications: 	288
        Divisions: 		0
        Logical: 		0
        Reads: 			1611
        Writes: 		210
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.469711
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2286
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3800
        Writes: 		439
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581761
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2146
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3701
        Writes: 		391
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.439866
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1567
        Multiplications: 	520
        Divisions: 		0
        Logical: 		0
        Reads: 			2745
        Writes: 		310
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.87497
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2338
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4027
        Writes: 		431
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.940961
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		2250
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3728
        Writes: 		406
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest78.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.383866
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		4028
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6504
        Writes: 		711
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest79.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.349033
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2352
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4053
        Writes: 		447
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest80.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.43313
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		3725
        Multiplications: 	1136
        Divisions: 		0
        Logical: 		0
        Reads: 			5817
        Writes: 		625
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest81.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.325968
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		657
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1223
        Writes: 		152
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest82.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.452527
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		520
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			974
        Writes: 		115
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest83.exe __orio_perftest83.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest83.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.591991
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
661      5    0   11    8    0   0  17    2    3  3.344026
1373     4    7    5   11    0  17   0    2    3  3.453661
4150    11   11   11    0   11   0  16    2    3  3.333803
5386     0    5    5    5   29   0  12    2    3  3.443816
5563    11   11    0   11   29  28   0    2    3  3.435914
5566    11    0    0    4   17  16   0    2    3  3.496453
8177     6    1    0    0   29   2   0    2    3  4.469711
10229    1   11   11   11   28  14   0    2    3  4.581761
11694    3   11    0    0    1   0  26    2    3  3.439866
11887    7    4    0   11   16   0  16    2    3  3.874970
13608    0    1   11   11    7   0  29    2    3  5.940961
16869   11    6   11    0    0  14   0    2    3  3.383866
19077    5    7   11    7   15  29   0    2    3  3.349033
20732    9    5    9    5   27   0  29    2    3  3.433130
23736    0    0    4    0    2  29   0    2    3  3.325968
24944    6   11    6   11   12   0   1    2    3  3.452527
26158    0    7    0    8    0   0   0    2    3  3.591991

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
661      5    0   11    8    0   0  17    2    3  3.344026
1373     4    7    5   11    0  17   0    2    3  3.453661
4150    11   11   11    0   11   0  16    2    3  3.333803
5386     0    5    5    5   29   0  12    2    3  3.443816
5563    11   11    0   11   29  28   0    2    3  3.435914
5566    11    0    0    4   17  16   0    2    3  3.496453
8177     6    1    0    0   29   2   0    2    3  4.469711
10229    1   11   11   11   28  14   0    2    3  4.581761
11694    3   11    0    0    1   0  26    2    3  3.439866
11887    7    4    0   11   16   0  16    2    3  3.874970
13608    0    1   11   11    7   0  29    2    3  5.940961
16869   11    6   11    0    0  14   0    2    3  3.383866
19077    5    7   11    7   15  29   0    2    3  3.349033
20732    9    5    9    5   27   0  29    2    3  3.433130
23736    0    0    4    0    2  29   0    2    3  3.325968
24944    6   11    6   11   12   0   1    2    3  3.452527
26158    0    7    0    8    0   0   0    2    3  3.591991

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
661   -0.1666667 -1.0000000  0.8333333  0.3333333 -1.00000000 -1.00000000
1373  -0.3333333  0.1666667 -0.1666667  0.8333333 -1.00000000  0.13333333
4150   0.8333333  0.8333333  0.8333333 -1.0000000 -0.26666667 -1.00000000
5386  -1.0000000 -0.1666667 -0.1666667 -0.1666667  0.93333333 -1.00000000
5563   0.8333333  0.8333333 -1.0000000  0.8333333  0.93333333  0.86666667
5566   0.8333333 -1.0000000 -1.0000000 -0.3333333  0.13333333  0.06666667
8177   0.0000000 -0.8333333 -1.0000000 -1.0000000  0.93333333 -0.86666667
10229 -0.8333333  0.8333333  0.8333333  0.8333333  0.86666667 -0.06666667
11694 -0.5000000  0.8333333 -1.0000000 -1.0000000 -0.93333333 -1.00000000
11887  0.1666667 -0.3333333 -1.0000000  0.8333333  0.06666667 -1.00000000
13608 -1.0000000 -0.8333333  0.8333333  0.8333333 -0.53333333 -1.00000000
16869  0.8333333  0.0000000  0.8333333 -1.0000000 -1.00000000 -0.06666667
19077 -0.1666667  0.1666667  0.8333333  0.1666667  0.00000000  0.93333333
20732  0.5000000 -0.1666667  0.5000000 -0.1666667  0.80000000 -1.00000000
23736 -1.0000000 -1.0000000 -0.3333333 -1.0000000 -0.86666667  0.93333333
24944  0.0000000  0.8333333  0.0000000  0.8333333 -0.20000000 -1.00000000
26158 -1.0000000  0.1666667 -1.0000000  0.3333333 -1.00000000 -1.00000000
             U_Je      RT_Ie RT_Je cost_mean
661    0.13333333 -0.3333333     0  3.344026
1373  -1.00000000 -0.3333333     0  3.453661
4150   0.06666667 -0.3333333     0  3.333803
5386  -0.20000000 -0.3333333     0  3.443816
5563  -1.00000000 -0.3333333     0  3.435914
5566  -1.00000000 -0.3333333     0  3.496453
8177  -1.00000000 -0.3333333     0  4.469711
10229 -1.00000000 -0.3333333     0  4.581761
11694  0.73333333 -0.3333333     0  3.439866
11887  0.06666667 -0.3333333     0  3.874970
13608  0.93333333 -0.3333333     0  5.940961
16869 -1.00000000 -0.3333333     0  3.383866
19077 -1.00000000 -0.3333333     0  3.349033
20732  0.93333333 -0.3333333     0  3.433130
23736 -1.00000000 -0.3333333     0  3.325968
24944 -0.93333333 -0.3333333     0  3.452527
26158 -1.00000000 -0.3333333     0  3.591991

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + 
    U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 80 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.00158627702593
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
4    11    8   11   10    2   0   0    2    3  3.666758
47   11    3   11    0    2   0  29    2    3  3.749552
52    4    0    0    6    0  15   0    2    3  3.370982
55    0    6   11   11   14   0  13    2    3  3.633412
57   11   11    0   11   29  28   0    2    3  3.435914
64    5    0   11    8    0   0  17    2    3  3.344026
65    4    7    5   11    0  17   0    2    3  3.453661
66   11   11   11    0   11   0  16    2    3  3.333803
67    0    5    5    5   29   0  12    2    3  3.443816
68   11   11    0   11   29  28   0    2    3  3.435914
69   11    0    0    4   17  16   0    2    3  3.496453
70    6    1    0    0   29   2   0    2    3  4.469711
71    1   11   11   11   28  14   0    2    3  4.581761
72    3   11    0    0    1   0  26    2    3  3.439866
73    7    4    0   11   16   0  16    2    3  3.874970
74    0    1   11   11    7   0  29    2    3  5.940961
75   11    6   11    0    0  14   0    2    3  3.383866
76    5    7   11    7   15  29   0    2    3  3.349033
77    9    5    9    5   27   0  29    2    3  3.433130
78    0    0    4    0    2  29   0    2    3  3.325968
79    6   11    6   11   12   0   1    2    3  3.452527
80    0    7    0    8    0   0   0    2    3  3.591991

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value  Pr(>F)   
I(T1_I^2)    1 2.524e-12 2.524e-12   2.280 0.17476   
I(T1_J^2)    1 8.240e-13 8.240e-13   0.745 0.41671   
I(T2_I^2)    1 1.365e-12 1.365e-12   1.233 0.30347   
I(T2_J^2)    1 1.308e-11 1.308e-11  11.815 0.01088 * 
I(U1_I^2)    1 6.610e-12 6.610e-12   5.972 0.04451 * 
I(U_I^2)     1 1.653e-11 1.653e-11  14.935 0.00617 **
I(U_J^2)     1 1.035e-12 1.035e-12   0.935 0.36569   
T1_I         1 2.156e-12 2.156e-12   1.948 0.20549   
T1_J         1 5.270e-13 5.270e-13   0.477 0.51223   
T2_I         1 8.624e-12 8.624e-12   7.792 0.02686 * 
T2_J         1 1.382e-11 1.382e-11  12.485 0.00955 **
U1_I         1 1.630e-13 1.630e-13   0.147 0.71283   
U_I          1 1.240e-12 1.240e-12   1.121 0.32493   
U_J          1 1.378e-11 1.378e-11  12.452 0.00961 **
Residuals    7 7.748e-12 1.107e-12                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 3, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
661    3.344026
1373   3.453661
4150   3.333803
5386   3.443816
5563   3.435914
5566   3.496453
8177   4.469711
10229  4.581761
11694  3.439866
11887  3.874970
13608  5.940961
16869  3.383866
19077  3.349033
20732  3.433130
23736  3.325968
24944  3.452527
26158  3.591991

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.2054894425699953, 'T1_J': 0.5122282446475235, 'T2_J': 0.009553669654325565, 'U_J': 0.009614258531618894, 'U_I': 0.32493336839723447, 'I(T2_I^2)': 0.3034700279960525, 'U1_I': 0.712834996062456, 'I(U_I^2)': 0.006174522152213698, 'T2_I': 0.026855263176697546, 'I(T2_J^2)': 0.010877700134136368, 'I(U1_I^2)': 0.044514020599783474, 'I(T1_I^2)': 0.1747628466567439, 'I(T1_J^2)': 0.41670763866515237, 'I(U_J^2)': 0.3656930140742026}
Ordered Keys: 
['I(U_I^2)', 'T2_J', 'U_J', 'I(T2_J^2)', 'T2_I', 'I(U1_I^2)', 'I(T1_I^2)', 'T1_I', 'I(T2_I^2)', 'U_I', 'I(U_J^2)', 'I(T1_J^2)', 'T1_J', 'U1_I']
Variables within threshold: ['I(U_I^2)', 'U_I', 'T2_J', 'I(T2_J^2)', 'U_J', 'I(U_J^2)']
Predicting Best Values for: ['I(U_I^2)', 'U_I', 'T2_J', 'I(T2_J^2)', 'U_J', 'I(U_J^2)']
Using Model: cost_mean ~ I(U_I^2) + U_I + T2_J + I(T2_J^2) + U_J + I(U_J^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 80 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(U_I^2) + U_I + T2_J + I(T2_J^2) + 
    U_J + I(U_J^2), tau = 0.1, data = structure(list(T1_I = c(11, 
11, 4, 0, 11, 5, 4, 11, 0, 11, 11, 6, 1, 3, 7, 0, 11, 5, 9, 0, 
6, 0), T1_J = c(8, 3, 0, 6, 11, 0, 7, 11, 5, 11, 0, 1, 11, 11, 
4, 1, 6, 7, 5, 0, 11, 7), T2_I = c(11, 11, 0, 11, 0, 11, 5, 11, 
5, 0, 0, 0, 11, 0, 0, 11, 11, 11, 9, 4, 6, 0), T2_J = c(10, 0, 
6, 11, 11, 8, 11, 0, 5, 11, 4, 0, 11, 0, 11, 11, 0, 7, 5, 0, 
11, 8), U1_I = c(2, 2, 0, 14, 29, 0, 0, 11, 29, 29, 17, 29, 28, 
1, 16, 7, 0, 15, 27, 2, 12, 0), U_I = c(0, 0, 15, 0, 28, 0, 17, 
0, 0, 28, 16, 2, 14, 0, 0, 0, 14, 29, 0, 29, 0, 0), U_J = c(0, 
29, 0, 13, 0, 17, 0, 16, 12, 0, 0, 0, 0, 26, 16, 29, 0, 0, 29, 
0, 1, 0), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3), cost_mean = c(3.666758, 
3.749552, 3.370982, 3.633412, 3.435914, 3.344026, 3.453661, 3.333803, 
3.443816, 3.435914, 3.496453, 4.469711, 4.581761, 3.439866, 3.87497, 
5.940961, 3.383866, 3.349033, 3.43313, 3.325968, 3.452527, 3.591991
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(4L, 47L, 52L, 
55L, 57L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 
75L, 76L, 77L, 78L, 79L, 80L), class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.385750e+00 -1.797693e+308   3.641910e+00
I(U_I^2)     -1.300000e-04 -1.797693e+308  1.797693e+308
U_I           1.660000e-03 -1.797693e+308  1.797693e+308
T2_J         -1.593000e-02 -1.797693e+308   4.854330e+00
I(T2_J^2)     2.080000e-03  -3.040000e-03  1.797693e+308
U_J          -1.042000e-02 -1.797693e+308  1.797693e+308
I(U_J^2)      4.500000e-04 -1.797693e+308  1.797693e+308

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 168431
Valid coordinates: 8160/40800
Tested coordinates: 331226
Valid coordinates: 12240/40800
Tested coordinates: 496944
Valid coordinates: 16320/40800
Tested coordinates: 660903
Valid coordinates: 20400/40800
Tested coordinates: 823272
Valid coordinates: 24480/40800
Tested coordinates: 983675
Tested coordinates: 1000000
Valid coordinates: 28560/40800
Tested coordinates: 1148852
Valid coordinates: 32640/40800
Tested coordinates: 1308738
Valid coordinates: 36720/40800
Tested coordinates: 1470313
Valid coordinates: 40800/40800
Tested coordinates: 1631352
Valid/Tested configurations: 40800/1631352
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 256000      9

Pruned data dimensions: [1] 69370     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.2054894425699953, 'T1_J': 0.5122282446475235, 'T2_J': 0.009553669654325565, 'U_J': 0.009614258531618894, 'U_I': 0.32493336839723447, 'I(T2_I^2)': 0.3034700279960525, 'U1_I': 0.712834996062456, 'I(U_I^2)': 0.006174522152213698, 'T2_I': 0.026855263176697546, 'I(T2_J^2)': 0.010877700134136368, 'I(U1_I^2)': 0.044514020599783474, 'I(T1_I^2)': 0.1747628466567439, 'I(T1_J^2)': 0.41670763866515237, 'I(U_J^2)': 0.3656930140742026}
Ordered Keys: 
['I(U_I^2)', 'T2_J', 'U_J', 'I(T2_J^2)', 'T2_I', 'I(U1_I^2)', 'I(T1_I^2)', 'T1_I', 'I(T2_I^2)', 'U_I', 'I(U_J^2)', 'I(T1_J^2)', 'T1_J', 'U1_I']
Variables within threshold: ['U_I', 'T2_J', 'U_J']
Unique Variables: ['U_I', 'T2_J', 'U_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 3, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.2054894425699953, 'T1_J': 0.5122282446475235, 'T2_J': 0.009553669654325565, 'U_J': 0.009614258531618894, 'U_I': 0.32493336839723447, 'I(T2_I^2)': 0.3034700279960525, 'U1_I': 0.712834996062456, 'I(U_I^2)': 0.006174522152213698, 'T2_I': 0.026855263176697546, 'I(T2_J^2)': 0.010877700134136368, 'I(U1_I^2)': 0.044514020599783474, 'I(T1_I^2)': 0.1747628466567439, 'I(T1_J^2)': 0.41670763866515237, 'I(U_J^2)': 0.3656930140742026}
Ordered Keys: 
['I(U_I^2)', 'T2_J', 'U_J', 'I(T2_J^2)', 'T2_I', 'I(U1_I^2)', 'I(T1_I^2)', 'T1_I', 'I(T2_I^2)', 'U_I', 'I(U_J^2)', 'I(T1_J^2)', 'T1_J', 'U1_I']
Variables within threshold: ['U_I', 'T2_J', 'U_J']
Best Predicted:     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
712    4    9    6    0   25   0  15    3    0

Best From Design: [0, 0, 4, 0, 2, 29, 0, 2, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_J': 0, 'U_I': 0, 'RT_J': 3, 'RT_I': 2, 'U_J': 15}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.748472
Design Best Point:
[0, 0, 4, 0, 2, 29, 0, 2, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.700429106458
Predicted Best Point:
[4, 9, 6, 0, 25, 0, 15, 3, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 9, 6, 0, 25, 0, 15, 3, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1962
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			3202
        Writes: 		359
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest84.exe __orio_perftest84.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest84.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.650112
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_J': 0, 'U_I': 0, 'RT_J': 3, 'RT_I': 2, 'U_J': 15}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.700429106458
Slowdown (Predicted Best): 0.768691907628
Budget: 80/1000
Best point from design was better than predicted point
Current Best Point: 
[7, 5, 7, 5, 19, 0, 0, 3, 1]
Final Best Point: 
[7, 5, 7, 5, 19, 0, 0, 3, 1]
Ending DLMT
Best Point: [7, 5, 7, 5, 19, 0, 0, 3, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.49959166401
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.49959166401
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [7, 5, 7, 5, 19, 0, 0, 3, 1]={'T1_I': 128, 'T1_J': 32, 'U_J': 1, 'U_I': 1, 'T2_I': 128, 'T2_J': 32, 'U1_I': 20, 'RT_I': 8, 'RT_J': 2}, cost=3.166510e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-9199.75, runs=84
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 8
 RT_J = 2
 T1_I = 128
 T1_J = 32
 T2_I = 128
 T2_J = 32
 U1_I = 20
 U_I = 1
 U_J = 1
 cost_mean = 3.16651
 points = 84
 speedup = 1.49959166401
 step = 4
 technique = DLMT
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		311
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			655
        Writes: 		99
        Comparisons:		11
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
