
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84488
Valid coordinates: 3520/17600
Tested coordinates: 167731
Valid coordinates: 5280/17600
Tested coordinates: 249668
Valid coordinates: 7040/17600
Tested coordinates: 338302
Valid coordinates: 8800/17600
Tested coordinates: 421470
Valid coordinates: 10560/17600
Tested coordinates: 503047
Valid coordinates: 12320/17600
Tested coordinates: 586693
Valid coordinates: 14080/17600
Tested coordinates: 668568
Valid coordinates: 15840/17600
Tested coordinates: 752820
Valid coordinates: 17600/17600
Tested coordinates: 835929
Valid/Tested configurations: 17600/835929
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
37      10   11    0    0    9  12   0    5    0
80       3    5    7    0   29   0  11    5    2
1727     5   11   11    0   18  29   0    0    3
2209     4    2    0    7    5   0  29    2    5
3291     4    3    0    0    1  28   0    5    0
4269     5    0    5    5   28  18   0    0    1
4302     2    0    0   11   29   0  17    3    0
5929     3    0    6    0    2   0   0    2    2
6840    11    6   11    6    0  29   0    3    2
7248     0    7    0    8   26   1   0    3    3
9157     6    0   11    2    0   0  10    5    1
9786     9    8    0   11    0   0   0    0    0
10489   10    4   10    0   29  25   0    2    5
10936    0    0    7   11   14  29   0    5    2
11352    0    5   10    0   15   9   0    0    0
12582   11    3    0    0   14   0  22    0    2
14068    0   11   10    0   29   0  29    0    0
14136    0   10    6   11    0   0   9    0    5
14796    8    5   10   11   16   0  29    5    0
16498    5    6   11   11    1  13   0    1    3
16811    5    8    6    8   11   0  13    2    0
16938    8    0   11    6   11   0   4    0    5

D-Efficiency Approximation: [1] 0.2190382

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		464
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1050
        Writes: 		142
        Comparisons:		12
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.636292
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		7281
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11384
        Writes: 		1183
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582412
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		3599
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5762
        Writes: 		633
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.84565
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3776
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6423
        Writes: 		669
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.662915
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		616
        Multiplications: 	248
        Divisions: 		0
        Logical: 		0
        Reads: 			1386
        Writes: 		182
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582892
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		699
        Multiplications: 	240
        Divisions: 		0
        Logical: 		0
        Reads: 			1373
        Writes: 		192
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.857554
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2195
        Multiplications: 	684
        Divisions: 		0
        Logical: 		0
        Reads: 			3563
        Writes: 		397
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580217
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		274
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			548
        Writes: 		73
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.499698
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		2345
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4058
        Writes: 		451
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.350693
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		1220
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2153
        Writes: 		264
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.453609
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		5891
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			9337
        Writes: 		953
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.17279
Length of requested configs: 1
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	5
        Additions: 		19
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			60
        Writes: 		16
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.851819
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		13627
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20677
        Writes: 		2135
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.688559
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3804
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6495
        Writes: 		708
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.834373
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		148
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			335
        Writes: 		68
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.306735
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		285
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			648
        Writes: 		89
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.857209
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		328
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			731
        Writes: 		108
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.682505
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		404
        Multiplications: 	172
        Divisions: 		0
        Logical: 		0
        Reads: 			918
        Writes: 		104
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.76886
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		13759
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20598
        Writes: 		2094
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.914741
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1919
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			3225
        Writes: 		363
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.397656
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		916
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1614
        Writes: 		189
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.645314
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		375
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			849
        Writes: 		108
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.664819
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
37      10   11    0    0    9  12   0    5    0  5.636292
80       3    5    7    0   29   0  11    5    2  4.582412
1727     5   11   11    0   18  29   0    0    3  7.845650
2209     4    2    0    7    5   0  29    2    5  4.662915
3291     4    3    0    0    1  28   0    5    0  4.582892
4269     5    0    5    5   28  18   0    0    1  3.857554
4302     2    0    0   11   29   0  17    3    0  4.580217
5929     3    0    6    0    2   0   0    2    2  3.499698
6840    11    6   11    6    0  29   0    3    2  3.350693
7248     0    7    0    8   26   1   0    3    3  3.453609
9157     6    0   11    2    0   0  10    5    1  6.172790
9786     9    8    0   11    0   0   0    0    0  4.851819
10489   10    4   10    0   29  25   0    2    5  3.688559
10936    0    0    7   11   14  29   0    5    2  6.834373
11352    0    5   10    0   15   9   0    0    0  3.306735
12582   11    3    0    0   14   0  22    0    2  4.857209
14068    0   11   10    0   29   0  29    0    0  4.682505
14136    0   10    6   11    0   0   9    0    5  4.768860
14796    8    5   10   11   16   0  29    5    0  6.914741
16498    5    6   11   11    1  13   0    1    3  3.397656
16811    5    8    6    8   11   0  13    2    0  3.645314
16938    8    0   11    6   11   0   4    0    5  4.664819

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
37      10   11    0    0    9  12   0    5    0  5.636292
80       3    5    7    0   29   0  11    5    2  4.582412
1727     5   11   11    0   18  29   0    0    3  7.845650
2209     4    2    0    7    5   0  29    2    5  4.662915
3291     4    3    0    0    1  28   0    5    0  4.582892
4269     5    0    5    5   28  18   0    0    1  3.857554
4302     2    0    0   11   29   0  17    3    0  4.580217
5929     3    0    6    0    2   0   0    2    2  3.499698
6840    11    6   11    6    0  29   0    3    2  3.350693
7248     0    7    0    8   26   1   0    3    3  3.453609
9157     6    0   11    2    0   0  10    5    1  6.172790
9786     9    8    0   11    0   0   0    0    0  4.851819
10489   10    4   10    0   29  25   0    2    5  3.688559
10936    0    0    7   11   14  29   0    5    2  6.834373
11352    0    5   10    0   15   9   0    0    0  3.306735
12582   11    3    0    0   14   0  22    0    2  4.857209
14068    0   11   10    0   29   0  29    0    0  4.682505
14136    0   10    6   11    0   0   9    0    5  4.768860
14796    8    5   10   11   16   0  29    5    0  6.914741
16498    5    6   11   11    1  13   0    1    3  3.397656
16811    5    8    6    8   11   0  13    2    0  3.645314
16938    8    0   11    6   11   0   4    0    5  4.664819

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
37     0.6666667  0.8333333 -1.0000000 -1.0000000 -0.40000000 -0.2000000
80    -0.5000000 -0.1666667  0.1666667 -1.0000000  0.93333333 -1.0000000
1727  -0.1666667  0.8333333  0.8333333 -1.0000000  0.20000000  0.9333333
2209  -0.3333333 -0.6666667 -1.0000000  0.1666667 -0.66666667 -1.0000000
3291  -0.3333333 -0.5000000 -1.0000000 -1.0000000 -0.93333333  0.8666667
4269  -0.1666667 -1.0000000 -0.1666667 -0.1666667  0.86666667  0.2000000
4302  -0.6666667 -1.0000000 -1.0000000  0.8333333  0.93333333 -1.0000000
5929  -0.5000000 -1.0000000  0.0000000 -1.0000000 -0.86666667 -1.0000000
6840   0.8333333  0.0000000  0.8333333  0.0000000 -1.00000000  0.9333333
7248  -1.0000000  0.1666667 -1.0000000  0.3333333  0.73333333 -0.9333333
9157   0.0000000 -1.0000000  0.8333333 -0.6666667 -1.00000000 -1.0000000
9786   0.5000000  0.3333333 -1.0000000  0.8333333 -1.00000000 -1.0000000
10489  0.6666667 -0.3333333  0.6666667 -1.0000000  0.93333333  0.6666667
10936 -1.0000000 -1.0000000  0.1666667  0.8333333 -0.06666667  0.9333333
11352 -1.0000000 -0.1666667  0.6666667 -1.0000000  0.00000000 -0.4000000
12582  0.8333333 -0.5000000 -1.0000000 -1.0000000 -0.06666667 -1.0000000
14068 -1.0000000  0.8333333  0.6666667 -1.0000000  0.93333333 -1.0000000
14136 -1.0000000  0.6666667  0.0000000  0.8333333 -1.00000000 -1.0000000
14796  0.3333333 -0.1666667  0.6666667  0.8333333  0.06666667 -1.0000000
16498 -0.1666667  0.0000000  0.8333333  0.8333333 -0.93333333 -0.1333333
16811 -0.1666667  0.3333333  0.0000000  0.3333333 -0.26666667 -1.0000000
16938  0.3333333 -1.0000000  0.8333333  0.0000000 -0.26666667 -1.0000000
            U_Je      RT_Ie      RT_Je cost_mean
37    -1.0000000  0.6666667 -1.0000000  5.636292
80    -0.2666667  0.6666667 -0.3333333  4.582412
1727  -1.0000000 -1.0000000  0.0000000  7.845650
2209   0.9333333 -0.3333333  0.6666667  4.662915
3291  -1.0000000  0.6666667 -1.0000000  4.582892
4269  -1.0000000 -1.0000000 -0.6666667  3.857554
4302   0.1333333  0.0000000 -1.0000000  4.580217
5929  -1.0000000 -0.3333333 -0.3333333  3.499698
6840  -1.0000000  0.0000000 -0.3333333  3.350693
7248  -1.0000000  0.0000000  0.0000000  3.453609
9157  -0.3333333  0.6666667 -0.6666667  6.172790
9786  -1.0000000 -1.0000000 -1.0000000  4.851819
10489 -1.0000000 -0.3333333  0.6666667  3.688559
10936 -1.0000000  0.6666667 -0.3333333  6.834373
11352 -1.0000000 -1.0000000 -1.0000000  3.306735
12582  0.4666667 -1.0000000 -0.3333333  4.857209
14068  0.9333333 -1.0000000 -1.0000000  4.682505
14136 -0.4000000 -1.0000000  0.6666667  4.768860
14796  0.9333333  0.6666667 -1.0000000  6.914741
16498 -1.0000000 -0.6666667  0.0000000  3.397656
16811 -0.1333333 -0.3333333 -1.0000000  3.645314
16938 -0.7333333 -1.0000000  0.6666667  4.664819

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.459190768733
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  0.011   0.011   0.013 0.9179  
I(T1_J^2)    1  1.886   1.886   2.113 0.2420  
I(T2_I^2)    1  0.523   0.523   0.586 0.4996  
I(T2_J^2)    1  0.621   0.621   0.695 0.4656  
I(U1_I^2)    1  0.258   0.258   0.288 0.6285  
I(U_I^2)     1  1.607   1.607   1.800 0.2723  
I(U_J^2)     1  3.797   3.797   4.253 0.1312  
I(RT_I^2)    1  5.895   5.895   6.603 0.0825 .
I(RT_J^2)    1  0.076   0.076   0.085 0.7891  
T1_I         1  1.203   1.203   1.347 0.3298  
T1_J         1  5.613   5.613   6.287 0.0871 .
T2_I         1  0.124   0.124   0.139 0.7337  
T2_J         1  1.487   1.487   1.666 0.2873  
U1_I         1  3.196   3.196   3.579 0.1549  
U_I          1  1.716   1.716   1.922 0.2597  
U_J          1  0.001   0.001   0.002 0.9700  
RT_I         1  2.425   2.425   2.717 0.1979  
RT_J         1  0.669   0.669   0.749 0.4503  
Residuals    3  2.678   0.893                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
37     5.636292
80     4.582412
1727   7.845650
2209   4.662915
3291   4.582892
4269   3.857554
4302   4.580217
5929   3.499698
6840   3.350693
7248   3.453609
9157   6.172790
9786   4.851819
10489  3.688559
10936  6.834373
11352  3.306735
12582  4.857209
14068  4.682505
14136  4.768860
14796  6.914741
16498  3.397656
16811  3.645314
16938  4.664819

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.7891338384626596, 'T1_J': 0.08713810581268293, 'T2_J': 0.2873013806246946, 'U_J': 0.9699583418782567, 'U_I': 0.2597094710870652, 'I(T2_I^2)': 0.49961747265814643, 'T2_I': 0.7337133262212823, 'U1_I': 0.1548676863732413, 'I(U_I^2)': 0.2722666946898837, 'I(RT_I^2)': 0.08252156977222637, 'I(T2_J^2)': 0.46561248272812217, 'I(U1_I^2)': 0.6284753296410147, 'RT_I': 0.1978709836256529, 'I(T1_I^2)': 0.9179049594089588, 'I(T1_J^2)': 0.24203832322351848, 'I(U_J^2)': 0.13120879195471183, 'RT_J': 0.45034869192645977, 'T1_I': 0.3297598716902912}
Ordered Keys: 
['I(RT_I^2)', 'T1_J', 'I(U_J^2)', 'U1_I', 'RT_I', 'I(T1_J^2)', 'U_I', 'I(U_I^2)', 'T2_J', 'T1_I', 'RT_J', 'I(T2_J^2)', 'I(T2_I^2)', 'I(U1_I^2)', 'T2_I', 'I(RT_J^2)', 'I(T1_I^2)', 'U_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.1, data = structure(list(T1_I = c(10, 
3, 5, 4, 4, 5, 2, 3, 11, 0, 6, 9, 10, 0, 0, 11, 0, 0, 8, 5, 5, 
8), T1_J = c(11, 5, 11, 2, 3, 0, 0, 0, 6, 7, 0, 8, 4, 0, 5, 3, 
11, 10, 5, 6, 8, 0), T2_I = c(0, 7, 11, 0, 0, 5, 0, 6, 11, 0, 
11, 0, 10, 7, 10, 0, 10, 6, 10, 11, 6, 11), T2_J = c(0, 0, 0, 
7, 0, 5, 11, 0, 6, 8, 2, 11, 0, 11, 0, 0, 0, 11, 11, 11, 8, 6
), U1_I = c(9, 29, 18, 5, 1, 28, 29, 2, 0, 26, 0, 0, 29, 14, 
15, 14, 29, 0, 16, 1, 11, 11), U_I = c(12, 0, 29, 0, 28, 18, 
0, 0, 29, 1, 0, 0, 25, 29, 9, 0, 0, 0, 0, 13, 0, 0), U_J = c(0, 
11, 0, 29, 0, 0, 17, 0, 0, 0, 10, 0, 0, 0, 0, 22, 29, 9, 29, 
0, 13, 4), RT_I = c(5, 5, 0, 2, 5, 0, 3, 2, 3, 3, 5, 0, 2, 5, 
0, 0, 0, 0, 5, 1, 2, 0), RT_J = c(0, 2, 3, 5, 0, 1, 0, 2, 2, 
3, 1, 0, 5, 2, 0, 2, 0, 5, 0, 3, 0, 5), cost_mean = c(5.636292, 
4.582412, 7.84565, 4.662915, 4.582892, 3.857554, 4.580217, 3.499698, 
3.350693, 3.453609, 6.17279, 4.851819, 3.688559, 6.834373, 3.306735, 
4.857209, 4.682505, 4.76886, 6.914741, 3.397656, 3.645314, 4.664819
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("37", "80", 
"1727", "2209", "3291", "4269", "4302", "5929", "6840", "7248", 
"9157", "9786", "10489", "10936", "11352", "12582", "14068", 
"14136", "14796", "16498", "16811", "16938"), class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   2.784250e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.560000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)     3.325000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)    -7.300000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)     2.596000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)    -2.720000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)      4.760000e-03 -1.797693e+308  1.797693e+308
I(U_J^2)      2.910000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     1.669800e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)    -3.274000e-02 -1.797693e+308  1.797693e+308
T1_I          2.684800e-01 -1.797693e+308  1.797693e+308
T1_J         -2.976100e-01 -1.797693e+308  1.797693e+308
T2_I          3.672000e-02 -1.797693e+308  1.797693e+308
T2_J         -1.793200e-01 -1.797693e+308  1.797693e+308
U1_I          9.956000e-02 -1.797693e+308  1.797693e+308
U_I          -1.172200e-01 -1.797693e+308  1.797693e+308
U_J          -5.291000e-02 -1.797693e+308  1.797693e+308
RT_I         -6.300700e-01 -1.797693e+308  1.797693e+308
RT_J          3.138600e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 258487
Valid coordinates: 10560/52800
Tested coordinates: 512251
Valid coordinates: 15840/52800
Tested coordinates: 773569
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1024644
Valid coordinates: 26400/52800
Tested coordinates: 1274490
Valid coordinates: 31680/52800
Tested coordinates: 1530007
Valid coordinates: 36960/52800
Tested coordinates: 1789201
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2039101
Valid coordinates: 47520/52800
Tested coordinates: 2287794
Valid coordinates: 52800/52800
Tested coordinates: 2542461
Valid/Tested configurations: 52800/2542461
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7891338384626596, 'T1_J': 0.08713810581268293, 'T2_J': 0.2873013806246946, 'U_J': 0.9699583418782567, 'U_I': 0.2597094710870652, 'I(T2_I^2)': 0.49961747265814643, 'T2_I': 0.7337133262212823, 'U1_I': 0.1548676863732413, 'I(U_I^2)': 0.2722666946898837, 'I(RT_I^2)': 0.08252156977222637, 'I(T2_J^2)': 0.46561248272812217, 'I(U1_I^2)': 0.6284753296410147, 'RT_I': 0.1978709836256529, 'I(T1_I^2)': 0.9179049594089588, 'I(T1_J^2)': 0.24203832322351848, 'I(U_J^2)': 0.13120879195471183, 'RT_J': 0.45034869192645977, 'T1_I': 0.3297598716902912}
Ordered Keys: 
['I(RT_I^2)', 'T1_J', 'I(U_J^2)', 'U1_I', 'RT_I', 'I(T1_J^2)', 'U_I', 'I(U_I^2)', 'T2_J', 'T1_I', 'RT_J', 'I(T2_J^2)', 'I(T2_I^2)', 'I(U1_I^2)', 'T2_I', 'I(RT_J^2)', 'I(T1_I^2)', 'U_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7891338384626596, 'T1_J': 0.08713810581268293, 'T2_J': 0.2873013806246946, 'U_J': 0.9699583418782567, 'U_I': 0.2597094710870652, 'I(T2_I^2)': 0.49961747265814643, 'T2_I': 0.7337133262212823, 'U1_I': 0.1548676863732413, 'I(U_I^2)': 0.2722666946898837, 'I(RT_I^2)': 0.08252156977222637, 'I(T2_J^2)': 0.46561248272812217, 'I(U1_I^2)': 0.6284753296410147, 'RT_I': 0.1978709836256529, 'I(T1_I^2)': 0.9179049594089588, 'I(T1_J^2)': 0.24203832322351848, 'I(U_J^2)': 0.13120879195471183, 'RT_J': 0.45034869192645977, 'T1_I': 0.3297598716902912}
Ordered Keys: 
['I(RT_I^2)', 'T1_J', 'I(U_J^2)', 'U1_I', 'RT_I', 'I(T1_J^2)', 'U_I', 'I(U_I^2)', 'T2_J', 'T1_I', 'RT_J', 'I(T2_J^2)', 'I(T2_I^2)', 'I(U1_I^2)', 'T2_I', 'I(RT_J^2)', 'I(T1_I^2)', 'U_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
65173    0    4   11    5    0  17   0    2    0

Best From Design: [0, 5, 10, 0, 15, 9, 0, 0, 0]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.750765
Baseline Point:
4.750765
Design Best Point:
[0, 5, 10, 0, 15, 9, 0, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.696042637344
Predicted Best Point:
[0, 4, 11, 5, 0, 17, 0, 2, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 4, 11, 5, 0, 17, 0, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		257
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			594
        Writes: 		95
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.669183
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.696042637344
Slowdown (Predicted Best): 0.772335192332
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.306735
Current Best Point: 
[0, 5, 10, 0, 15, 9, 0, 0, 0]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 84177
Valid coordinates: 3520/17600
Tested coordinates: 168084
Valid coordinates: 5280/17600
Tested coordinates: 253211
Valid coordinates: 7040/17600
Tested coordinates: 336912
Valid coordinates: 8800/17600
Tested coordinates: 423020
Valid coordinates: 10560/17600
Tested coordinates: 506557
Valid coordinates: 12320/17600
Tested coordinates: 589356
Valid coordinates: 14080/17600
Tested coordinates: 670198
Valid coordinates: 15840/17600
Tested coordinates: 756064
Valid coordinates: 17600/17600
Tested coordinates: 838878
Valid/Tested configurations: 17600/838878
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
7875     0    4    0    6   29   0   8    2    5
8263     0    0    7   11    2   0  15    1    3
9366     6    5    7   11   29  16   0    1    2
14068    0   11   10    0   29   0  29    0    0
14796    8    5   10   11   16   0  29    5    0
19761    8   11    8    0   16   0  14    0    5
20590    0   11   10   11    3   1   0    3    2
21429    5   11    0   11   29   0  13    5    2
23887    0    7    4   11   17   0  14    0    0
28958    4    5    0    0   14  29   0    0    1
34207    0    0    1    0    0  11   0    5    0
34795    6    3   11    4    0   0  16    2    0
38676    5    9    5    9    1  29   0    2    5
50289    0    5    4    6   17  27   0    5    2
54026   11   11    0   11   17  18   0    2    0
60842    5    0    0    0   17   0  29    2    5
61386   11    1    0    6    1   0  27    0    1
67537   11    0   11   10   29  29   0    1    0
79412    5    0   11    7   11  13   0    0    5
86725   11    4   11    0   17   0   4    3    3
87405    6    0    6    5   16   0   0    2    0
87953    9    4    0   11    0   0   0    0    5

D-Efficiency Approximation: [1] 0.230952

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		2535
        Multiplications: 	840
        Divisions: 		0
        Logical: 		0
        Reads: 			4363
        Writes: 		481
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.867736
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		817
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1603
        Writes: 		182
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.361389
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		1238
        Multiplications: 	400
        Divisions: 		0
        Logical: 		0
        Reads: 			2227
        Writes: 		288
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.574659
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		467
        Multiplications: 	192
        Divisions: 		0
        Logical: 		0
        Reads: 			1052
        Writes: 		131
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.875688
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		645
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1217
        Writes: 		149
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.34304
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		8182
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12697
        Writes: 		1313
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.959342
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		184
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			414
        Writes: 		68
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.68373
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1048
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			2027
        Writes: 		255
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580539
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		431
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			980
        Writes: 		121
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58455
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	6
        Additions: 		1086
        Multiplications: 	360
        Divisions: 		0
        Logical: 		0
        Reads: 			1897
        Writes: 		209
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.95265
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		15411
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23269
        Writes: 		2375
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.962578
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		3694
        Multiplications: 	1220
        Divisions: 		0
        Logical: 		0
        Reads: 			6318
        Writes: 		695
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580546
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		280
        Multiplications: 	96
        Divisions: 		0
        Logical: 		0
        Reads: 			638
        Writes: 		112
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.718851
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		3481
        Multiplications: 	1136
        Divisions: 		0
        Logical: 		0
        Reads: 			5779
        Writes: 		608
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.955778
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		302
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			689
        Writes: 		84
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.081992
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		384
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			864
        Writes: 		153
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.677543
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		6520
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10036
        Writes: 		1042
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.226104
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1566
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2653
        Writes: 		299
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.458886
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		77
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			195
        Writes: 		48
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.642764
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		306
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			707
        Writes: 		82
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.668914
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
7875     0    4    0    6   29   0   8    2    5  3.867736
8263     0    0    7   11    2   0  15    1    3  3.361389
9366     6    5    7   11   29  16   0    1    2  3.574659
14068    0   11   10    0   29   0  29    0    0  4.682505
14796    8    5   10   11   16   0  29    5    0  6.914741
19761    8   11    8    0   16   0  14    0    5  4.875688
20590    0   11   10   11    3   1   0    3    2  3.343040
21429    5   11    0   11   29   0  13    5    2  6.959342
23887    0    7    4   11   17   0  14    0    0  4.683730
28958    4    5    0    0   14  29   0    0    1  4.580539
34207    0    0    1    0    0  11   0    5    0  4.584550
34795    6    3   11    4    0   0  16    2    0  3.952650
38676    5    9    5    9    1  29   0    2    5  3.962578
50289    0    5    4    6   17  27   0    5    2  4.580546
54026   11   11    0   11   17  18   0    2    0  3.718851
60842    5    0    0    0   17   0  29    2    5  3.955778
61386   11    1    0    6    1   0  27    0    1  7.081992
67537   11    0   11   10   29  29   0    1    0  3.677543
79412    5    0   11    7   11  13   0    0    5  4.226104
86725   11    4   11    0   17   0   4    3    3  3.458886
87405    6    0    6    5   16   0   0    2    0  3.642764
87953    9    4    0   11    0   0   0    0    5  4.668914

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
7875     0    4    0    6   29   0   8    2    5  3.867736
8263     0    0    7   11    2   0  15    1    3  3.361389
9366     6    5    7   11   29  16   0    1    2  3.574659
14068    0   11   10    0   29   0  29    0    0  4.682505
14796    8    5   10   11   16   0  29    5    0  6.914741
19761    8   11    8    0   16   0  14    0    5  4.875688
20590    0   11   10   11    3   1   0    3    2  3.343040
21429    5   11    0   11   29   0  13    5    2  6.959342
23887    0    7    4   11   17   0  14    0    0  4.683730
28958    4    5    0    0   14  29   0    0    1  4.580539
34207    0    0    1    0    0  11   0    5    0  4.584550
34795    6    3   11    4    0   0  16    2    0  3.952650
38676    5    9    5    9    1  29   0    2    5  3.962578
50289    0    5    4    6   17  27   0    5    2  4.580546
54026   11   11    0   11   17  18   0    2    0  3.718851
60842    5    0    0    0   17   0  29    2    5  3.955778
61386   11    1    0    6    1   0  27    0    1  7.081992
67537   11    0   11   10   29  29   0    1    0  3.677543
79412    5    0   11    7   11  13   0    0    5  4.226104
86725   11    4   11    0   17   0   4    3    3  3.458886
87405    6    0    6    5   16   0   0    2    0  3.642764
87953    9    4    0   11    0   0   0    0    5  4.668914

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
7875  -1.0000000 -0.3333333 -1.0000000  0.0000000  0.93333333 -1.00000000
8263  -1.0000000 -1.0000000  0.1666667  0.8333333 -0.86666667 -1.00000000
9366   0.0000000 -0.1666667  0.1666667  0.8333333  0.93333333  0.06666667
14068 -1.0000000  0.8333333  0.6666667 -1.0000000  0.93333333 -1.00000000
14796  0.3333333 -0.1666667  0.6666667  0.8333333  0.06666667 -1.00000000
19761  0.3333333  0.8333333  0.3333333 -1.0000000  0.06666667 -1.00000000
20590 -1.0000000  0.8333333  0.6666667  0.8333333 -0.80000000 -0.93333333
21429 -0.1666667  0.8333333 -1.0000000  0.8333333  0.93333333 -1.00000000
23887 -1.0000000  0.1666667 -0.3333333  0.8333333  0.13333333 -1.00000000
28958 -0.3333333 -0.1666667 -1.0000000 -1.0000000 -0.06666667  0.93333333
34207 -1.0000000 -1.0000000 -0.8333333 -1.0000000 -1.00000000 -0.26666667
34795  0.0000000 -0.5000000  0.8333333 -0.3333333 -1.00000000 -1.00000000
38676 -0.1666667  0.5000000 -0.1666667  0.5000000 -0.93333333  0.93333333
50289 -1.0000000 -0.1666667 -0.3333333  0.0000000  0.13333333  0.80000000
54026  0.8333333  0.8333333 -1.0000000  0.8333333  0.13333333  0.20000000
60842 -0.1666667 -1.0000000 -1.0000000 -1.0000000  0.13333333 -1.00000000
61386  0.8333333 -0.8333333 -1.0000000  0.0000000 -0.93333333 -1.00000000
67537  0.8333333 -1.0000000  0.8333333  0.6666667  0.93333333  0.93333333
79412 -0.1666667 -1.0000000  0.8333333  0.1666667 -0.26666667 -0.13333333
86725  0.8333333 -0.3333333  0.8333333 -1.0000000  0.13333333 -1.00000000
87405  0.0000000 -1.0000000  0.0000000 -0.1666667  0.06666667 -1.00000000
87953  0.5000000 -0.3333333 -1.0000000  0.8333333 -1.00000000 -1.00000000
             U_Je      RT_Ie      RT_Je cost_mean
7875  -0.46666667 -0.3333333  0.6666667  3.867736
8263   0.00000000 -0.6666667  0.0000000  3.361389
9366  -1.00000000 -0.6666667 -0.3333333  3.574659
14068  0.93333333 -1.0000000 -1.0000000  4.682505
14796  0.93333333  0.6666667 -1.0000000  6.914741
19761 -0.06666667 -1.0000000  0.6666667  4.875688
20590 -1.00000000  0.0000000 -0.3333333  3.343040
21429 -0.13333333  0.6666667 -0.3333333  6.959342
23887 -0.06666667 -1.0000000 -1.0000000  4.683730
28958 -1.00000000 -1.0000000 -0.6666667  4.580539
34207 -1.00000000  0.6666667 -1.0000000  4.584550
34795  0.06666667 -0.3333333 -1.0000000  3.952650
38676 -1.00000000 -0.3333333  0.6666667  3.962578
50289 -1.00000000  0.6666667 -0.3333333  4.580546
54026 -1.00000000 -0.3333333 -1.0000000  3.718851
60842  0.93333333 -0.3333333  0.6666667  3.955778
61386  0.80000000 -1.0000000 -0.6666667  7.081992
67537 -1.00000000 -0.6666667 -1.0000000  3.677543
79412 -1.00000000 -1.0000000  0.6666667  4.226104
86725 -0.73333333  0.0000000  0.0000000  3.458886
87405 -1.00000000 -0.3333333 -1.0000000  3.642764
87953 -1.00000000 -1.0000000  0.6666667  4.668914

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.0530222215503
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value   Pr(>F)    
I(T1_I^2)    1  0.358   0.358   0.625 0.436640    
I(T1_J^2)    1  1.861   1.861   3.251 0.083442 .  
I(T2_I^2)    1  0.082   0.082   0.143 0.708192    
I(T2_J^2)    1  0.181   0.181   0.316 0.578770    
I(U1_I^2)    1  0.196   0.196   0.343 0.563303    
I(U_I^2)     1  0.113   0.113   0.198 0.660405    
I(U_J^2)     1 10.582  10.582  18.487 0.000229 ***
I(RT_I^2)    1 10.839  10.839  18.936 0.000200 ***
I(RT_J^2)    1  0.031   0.031   0.055 0.816983    
T1_I         1  1.795   1.795   3.135 0.088803 .  
T1_J         1  1.722   1.722   3.008 0.095158 .  
T2_I         1  0.483   0.483   0.844 0.367030    
T2_J         1  0.056   0.056   0.097 0.757512    
U1_I         1  0.705   0.705   1.232 0.277516    
U_I          1  1.813   1.813   3.167 0.087280 .  
U_J          1  0.622   0.622   1.087 0.307063    
RT_I         1 14.604  14.604  25.514 3.27e-05 ***
RT_J         1  0.857   0.857   1.498 0.232404    
Residuals   25 14.310   0.572                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
7875   3.867736
8263   3.361389
9366   3.574659
14068  4.682505
14796  6.914741
19761  4.875688
20590  3.343040
21429  6.959342
23887  4.683730
28958  4.580539
34207  4.584550
34795  3.952650
38676  3.962578
50289  4.580546
54026  3.718851
60842  3.955778
61386  7.081992
67537  3.677543
79412  4.226104
86725  3.458886
87405  3.642764
87953  4.668914

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.8169829686865854, 'T1_J': 0.09515848220270764, 'T2_J': 0.7575123355935885, 'U_J': 0.3070627320780563, 'U_I': 0.08728029199134142, 'I(T2_I^2)': 0.7081918322938616, 'T2_I': 0.36702950429715775, 'U1_I': 0.2775162922263129, 'I(U_I^2)': 0.6604047072085351, 'I(RT_I^2)': 0.00020006463597631712, 'I(T2_J^2)': 0.5787700306341304, 'I(U1_I^2)': 0.5633034994396979, 'RT_I': 3.2653064895063844e-05, 'I(T1_I^2)': 0.43664043196926294, 'I(T1_J^2)': 0.08344214992178095, 'I(U_J^2)': 0.00022882715284888117, 'RT_J': 0.23240418103207283, 'T1_I': 0.08880304738515848}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(U_J^2)', 'I(T1_J^2)', 'U_I', 'T1_I', 'T1_J', 'RT_J', 'U1_I', 'U_J', 'T2_I', 'I(T1_I^2)', 'I(U1_I^2)', 'I(T2_J^2)', 'I(U_I^2)', 'I(T2_I^2)', 'T2_J', 'I(RT_J^2)']
Variables within threshold: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'I(U_J^2)', 'U_J']
Predicting Best Values for: ['RT_I', 'I(RT_I^2)', 'RT_I', 'I(RT_I^2)', 'I(U_J^2)', 'U_J']
Using Model: cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2) + I(U_J^2) + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_I^2) + RT_I + I(RT_I^2) + 
    I(U_J^2) + U_J, tau = 0.1, data = structure(list(T1_I = c(10, 
3, 5, 4, 4, 5, 2, 3, 11, 0, 6, 9, 10, 0, 0, 11, 0, 0, 8, 5, 5, 
8, 0, 0, 6, 0, 8, 8, 0, 5, 0, 4, 0, 6, 5, 0, 11, 5, 11, 11, 5, 
11, 6, 9), T1_J = c(11, 5, 11, 2, 3, 0, 0, 0, 6, 7, 0, 8, 4, 
0, 5, 3, 11, 10, 5, 6, 8, 0, 4, 0, 5, 11, 5, 11, 11, 11, 7, 5, 
0, 3, 9, 5, 11, 0, 1, 0, 0, 4, 0, 4), T2_I = c(0, 7, 11, 0, 0, 
5, 0, 6, 11, 0, 11, 0, 10, 7, 10, 0, 10, 6, 10, 11, 6, 11, 0, 
7, 7, 10, 10, 8, 10, 0, 4, 0, 1, 11, 5, 4, 0, 0, 0, 11, 11, 11, 
6, 0), T2_J = c(0, 0, 0, 7, 0, 5, 11, 0, 6, 8, 2, 11, 0, 11, 
0, 0, 0, 11, 11, 11, 8, 6, 6, 11, 11, 0, 11, 0, 11, 11, 11, 0, 
0, 4, 9, 6, 11, 0, 6, 10, 7, 0, 5, 11), U1_I = c(9, 29, 18, 5, 
1, 28, 29, 2, 0, 26, 0, 0, 29, 14, 15, 14, 29, 0, 16, 1, 11, 
11, 29, 2, 29, 29, 16, 16, 3, 29, 17, 14, 0, 0, 1, 17, 17, 17, 
1, 29, 11, 17, 16, 0), U_I = c(12, 0, 29, 0, 28, 18, 0, 0, 29, 
1, 0, 0, 25, 29, 9, 0, 0, 0, 0, 13, 0, 0, 0, 0, 16, 0, 0, 0, 
1, 0, 0, 29, 11, 0, 29, 27, 18, 0, 0, 29, 13, 0, 0, 0), U_J = c(0, 
11, 0, 29, 0, 0, 17, 0, 0, 0, 10, 0, 0, 0, 0, 22, 29, 9, 29, 
0, 13, 4, 8, 15, 0, 29, 29, 14, 0, 13, 14, 0, 0, 16, 0, 0, 0, 
29, 27, 0, 0, 4, 0, 0), RT_I = c(5, 5, 0, 2, 5, 0, 3, 2, 3, 3, 
5, 0, 2, 5, 0, 0, 0, 0, 5, 1, 2, 0, 2, 1, 1, 0, 5, 0, 3, 5, 0, 
0, 5, 2, 2, 5, 2, 2, 0, 1, 0, 3, 2, 0), RT_J = c(0, 2, 3, 5, 
0, 1, 0, 2, 2, 3, 1, 0, 5, 2, 0, 2, 0, 5, 0, 3, 0, 5, 5, 3, 2, 
0, 0, 5, 2, 2, 0, 1, 0, 0, 5, 2, 0, 5, 1, 0, 5, 3, 0, 5), cost_mean = c(5.636292, 
4.582412, 7.84565, 4.662915, 4.582892, 3.857554, 4.580217, 3.499698, 
3.350693, 3.453609, 6.17279, 4.851819, 3.688559, 6.834373, 3.306735, 
4.857209, 4.682505, 4.76886, 6.914741, 3.397656, 3.645314, 4.664819, 
3.867736, 3.361389, 3.574659, 4.682505, 6.914741, 4.875688, 3.34304, 
6.959342, 4.68373, 4.580539, 4.58455, 3.95265, 3.962578, 4.580546, 
3.718851, 3.955778, 7.081992, 3.677543, 4.226104, 3.458886, 3.642764, 
4.668914)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
-44L), class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.857550e+00   2.949350e+00   3.937520e+00
RT_I         -6.456600e-01  -7.770600e-01  -2.952100e-01
I(RT_I^2)     1.580500e-01   9.745000e-02   1.843800e-01
I(U_J^2)      1.440000e-03  -5.200000e-04  1.797693e+308
U_J          -1.569000e-02 -1.797693e+308   4.860000e-02

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 253902
Valid coordinates: 10560/52800
Tested coordinates: 507970
Valid coordinates: 15840/52800
Tested coordinates: 762322
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1010357
Valid coordinates: 26400/52800
Tested coordinates: 1267089
Valid coordinates: 31680/52800
Tested coordinates: 1522505
Valid coordinates: 36960/52800
Tested coordinates: 1781247
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2032073
Valid coordinates: 47520/52800
Tested coordinates: 2292796
Valid coordinates: 52800/52800
Tested coordinates: 2545942
Valid/Tested configurations: 52800/2545942
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.8169829686865854, 'T1_J': 0.09515848220270764, 'T2_J': 0.7575123355935885, 'U_J': 0.3070627320780563, 'U_I': 0.08728029199134142, 'I(T2_I^2)': 0.7081918322938616, 'T2_I': 0.36702950429715775, 'U1_I': 0.2775162922263129, 'I(U_I^2)': 0.6604047072085351, 'I(RT_I^2)': 0.00020006463597631712, 'I(T2_J^2)': 0.5787700306341304, 'I(U1_I^2)': 0.5633034994396979, 'RT_I': 3.2653064895063844e-05, 'I(T1_I^2)': 0.43664043196926294, 'I(T1_J^2)': 0.08344214992178095, 'I(U_J^2)': 0.00022882715284888117, 'RT_J': 0.23240418103207283, 'T1_I': 0.08880304738515848}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(U_J^2)', 'I(T1_J^2)', 'U_I', 'T1_I', 'T1_J', 'RT_J', 'U1_I', 'U_J', 'T2_I', 'I(T1_I^2)', 'I(U1_I^2)', 'I(T2_J^2)', 'I(U_I^2)', 'I(T2_I^2)', 'T2_J', 'I(RT_J^2)']
Variables within threshold: ['RT_I', 'U_J']
Unique Variables: ['RT_I', 'U_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.8169829686865854, 'T1_J': 0.09515848220270764, 'T2_J': 0.7575123355935885, 'U_J': 0.3070627320780563, 'U_I': 0.08728029199134142, 'I(T2_I^2)': 0.7081918322938616, 'T2_I': 0.36702950429715775, 'U1_I': 0.2775162922263129, 'I(U_I^2)': 0.6604047072085351, 'I(RT_I^2)': 0.00020006463597631712, 'I(T2_J^2)': 0.5787700306341304, 'I(U1_I^2)': 0.5633034994396979, 'RT_I': 3.2653064895063844e-05, 'I(T1_I^2)': 0.43664043196926294, 'I(T1_J^2)': 0.08344214992178095, 'I(U_J^2)': 0.00022882715284888117, 'RT_J': 0.23240418103207283, 'T1_I': 0.08880304738515848}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(U_J^2)', 'I(T1_J^2)', 'U_I', 'T1_I', 'T1_J', 'RT_J', 'U1_I', 'U_J', 'T2_I', 'I(T1_I^2)', 'I(U1_I^2)', 'I(T2_J^2)', 'I(U_I^2)', 'I(T2_I^2)', 'T2_J', 'I(RT_J^2)']
Variables within threshold: ['RT_I', 'U_J']
Best Predicted:     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
510    9    2    0    7   18   0   5    2    4

Best From Design: [0, 11, 10, 11, 3, 1, 0, 3, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.750765
Design Best Point:
[0, 11, 10, 11, 3, 1, 0, 3, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.703684564486
Predicted Best Point:
[9, 2, 0, 7, 18, 0, 5, 2, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[9, 2, 0, 7, 18, 0, 5, 2, 4]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1389
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2449
        Writes: 		282
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.840449
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.703684564486
Slowdown (Predicted Best): 1.01887780179
Budget: 44/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 5, 10, 0, 15, 9, 0, 0, 0]
Step 2
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 103768
Valid coordinates: 2720/13600
Tested coordinates: 209313
Valid coordinates: 4080/13600
Tested coordinates: 318792
Valid coordinates: 5440/13600
Tested coordinates: 427146
Valid coordinates: 6800/13600
Tested coordinates: 537359
Valid coordinates: 8160/13600
Tested coordinates: 644272
Valid coordinates: 9520/13600
Tested coordinates: 750628
Valid coordinates: 10880/13600
Tested coordinates: 857347
Valid coordinates: 12240/13600
Tested coordinates: 961901
Tested coordinates: 1000000
Valid coordinates: 13600/13600
Tested coordinates: 1069867
Valid/Tested configurations: 13600/1069867
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 154400      9

Pruned data dimensions: [1] 14090     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + RT_J
Clean Info:
One-Level Factors: ['U_I', 'U_J', 'RT_I']
Two-Level Factors: ['U_I', 'U_J', 'RT_I']
Three-Level Factors: ['U_I', 'U_J', 'RT_I']
One-Level Terms: ['(Intercept)', 'I(U_I^2)', 'U_I']
Two-Level Terms: ['(Intercept)', 'I(U_I^2)', 'U_I']
Three-Level Terms: ['(Intercept)', 'I(U_I^2)', 'U_I']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'RT_J']
Clean 2 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)', 'U_I', 'U_I']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)', 'U_I', 'U_I']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 14090     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
737      0    5   11    6   11   0   5    2    5
756      4    0    0    5   20   0   5    2    0
829      0    1    0    0    0   0   5    2    3
1821    11    2   11   11   12   0   5    2    0
2402    11    0   11    6   29   0   5    2    3
2466     0    0    5   11   16   0   5    2    2
3141     0    4    5    0   27   0   5    2    5
3722    11    1    0    3    0   0   5    2    5
5233     0   11    5    0   29   0   5    2    0
6135     4    6    0   11   29   0   5    2    4
8501     6    0   10    0    1   0   5    2    5
8826     0   11    0   11    2   0   5    2    5
8933     5   11    5   11   15   0   5    2    5
11235   11    7    0    0   12   0   5    2    2
12561    5   11   11    0   15   0   5    2    3
12625    5    7    6    7    0   0   5    2    2
12718    0    7   11    9    0   0   5    2    0

D-Efficiency Approximation: [1] 0.2720837

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2342
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4035
        Writes: 		435
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.209714
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		442
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			825
        Writes: 		116
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.69411
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	3
        Additions: 		875
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1582
        Writes: 		175
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.730055
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		440
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			823
        Writes: 		112
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.17507
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		914
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1657
        Writes: 		209
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.3801
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		661
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1231
        Writes: 		156
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.375813
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2352
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4053
        Writes: 		447
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.861716
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2326
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4004
        Writes: 		421
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.840047
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		451
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			843
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.642912
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1400
        Multiplications: 	460
        Divisions: 		0
        Logical: 		0
        Reads: 			2471
        Writes: 		293
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.951453
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		2244
        Multiplications: 	752
        Divisions: 		0
        Logical: 		0
        Reads: 			3834
        Writes: 		402
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.956045
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		2322
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			3995
        Writes: 		420
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.959224
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2340
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4029
        Writes: 		435
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.061924
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		657
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1223
        Writes: 		152
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.312403
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		903
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1636
        Writes: 		197
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.432798
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		643
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1197
        Writes: 		139
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.317932
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		423
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			790
        Writes: 		97
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.662678
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
737      0    5   11    6   11   0   5    2    5  4.209714
756      4    0    0    5   20   0   5    2    0  3.694110
829      0    1    0    0    0   0   5    2    3  5.730055
1821    11    2   11   11   12   0   5    2    0  4.175070
2402    11    0   11    6   29   0   5    2    3  3.380100
2466     0    0    5   11   16   0   5    2    2  3.375813
3141     0    4    5    0   27   0   5    2    5  3.861716
3722    11    1    0    3    0   0   5    2    5  5.840047
5233     0   11    5    0   29   0   5    2    0  3.642912
6135     4    6    0   11   29   0   5    2    4  3.951453
8501     6    0   10    0    1   0   5    2    5  3.956045
8826     0   11    0   11    2   0   5    2    5  3.959224
8933     5   11    5   11   15   0   5    2    5  4.061924
11235   11    7    0    0   12   0   5    2    2  3.312403
12561    5   11   11    0   15   0   5    2    3  3.432798
12625    5    7    6    7    0   0   5    2    2  3.317932
12718    0    7   11    9    0   0   5    2    0  3.662678

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
737      0    5   11    6   11   0   5    2    5  4.209714
756      4    0    0    5   20   0   5    2    0  3.694110
829      0    1    0    0    0   0   5    2    3  5.730055
1821    11    2   11   11   12   0   5    2    0  4.175070
2402    11    0   11    6   29   0   5    2    3  3.380100
2466     0    0    5   11   16   0   5    2    2  3.375813
3141     0    4    5    0   27   0   5    2    5  3.861716
3722    11    1    0    3    0   0   5    2    5  5.840047
5233     0   11    5    0   29   0   5    2    0  3.642912
6135     4    6    0   11   29   0   5    2    4  3.951453
8501     6    0   10    0    1   0   5    2    5  3.956045
8826     0   11    0   11    2   0   5    2    5  3.959224
8933     5   11    5   11   15   0   5    2    5  4.061924
11235   11    7    0    0   12   0   5    2    2  3.312403
12561    5   11   11    0   15   0   5    2    3  3.432798
12625    5    7    6    7    0   0   5    2    2  3.317932
12718    0    7   11    9    0   0   5    2    0  3.662678

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie U_Ie       U_Je
737   -1.0000000 -0.1666667  0.8333333  0.0000000 -0.26666667   -1 -0.6666667
756   -0.3333333 -1.0000000 -1.0000000 -0.1666667  0.33333333   -1 -0.6666667
829   -1.0000000 -0.8333333 -1.0000000 -1.0000000 -1.00000000   -1 -0.6666667
1821   0.8333333 -0.6666667  0.8333333  0.8333333 -0.20000000   -1 -0.6666667
2402   0.8333333 -1.0000000  0.8333333  0.0000000  0.93333333   -1 -0.6666667
2466  -1.0000000 -1.0000000 -0.1666667  0.8333333  0.06666667   -1 -0.6666667
3141  -1.0000000 -0.3333333 -0.1666667 -1.0000000  0.80000000   -1 -0.6666667
3722   0.8333333 -0.8333333 -1.0000000 -0.5000000 -1.00000000   -1 -0.6666667
5233  -1.0000000  0.8333333 -0.1666667 -1.0000000  0.93333333   -1 -0.6666667
6135  -0.3333333  0.0000000 -1.0000000  0.8333333  0.93333333   -1 -0.6666667
8501   0.0000000 -1.0000000  0.6666667 -1.0000000 -0.93333333   -1 -0.6666667
8826  -1.0000000  0.8333333 -1.0000000  0.8333333 -0.86666667   -1 -0.6666667
8933  -0.1666667  0.8333333 -0.1666667  0.8333333  0.00000000   -1 -0.6666667
11235  0.8333333  0.1666667 -1.0000000 -1.0000000 -0.20000000   -1 -0.6666667
12561 -0.1666667  0.8333333  0.8333333 -1.0000000  0.00000000   -1 -0.6666667
12625 -0.1666667  0.1666667  0.0000000  0.1666667 -1.00000000   -1 -0.6666667
12718 -1.0000000  0.1666667  0.8333333  0.5000000 -1.00000000   -1 -0.6666667
           RT_Ie      RT_Je cost_mean
737   -0.3333333  0.6666667  4.209714
756   -0.3333333 -1.0000000  3.694110
829   -0.3333333  0.0000000  5.730055
1821  -0.3333333 -1.0000000  4.175070
2402  -0.3333333  0.0000000  3.380100
2466  -0.3333333 -0.3333333  3.375813
3141  -0.3333333  0.6666667  3.861716
3722  -0.3333333  0.6666667  5.840047
5233  -0.3333333 -1.0000000  3.642912
6135  -0.3333333  0.3333333  3.951453
8501  -0.3333333  0.6666667  3.956045
8826  -0.3333333  0.6666667  3.959224
8933  -0.3333333  0.6666667  4.061924
11235 -0.3333333 -0.3333333  3.312403
12561 -0.3333333  0.0000000  3.432798
12625 -0.3333333 -0.3333333  3.317932
12718 -0.3333333 -1.0000000  3.662678

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 17 10

Heteroscedasticity Test p-value: 0.0298677021245
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
45    0    5   11    6   11   0   5    2    5  4.209714
46    4    0    0    5   20   0   5    2    0  3.694110
47    0    1    0    0    0   0   5    2    3  5.730055
48   11    2   11   11   12   0   5    2    0  4.175070
49   11    0   11    6   29   0   5    2    3  3.380100
50    0    0    5   11   16   0   5    2    2  3.375813
51    0    4    5    0   27   0   5    2    5  3.861716
52   11    1    0    3    0   0   5    2    5  5.840047
53    0   11    5    0   29   0   5    2    0  3.642912
54    4    6    0   11   29   0   5    2    4  3.951453
55    6    0   10    0    1   0   5    2    5  3.956045
56    0   11    0   11    2   0   5    2    5  3.959224
57    5   11    5   11   15   0   5    2    5  4.061924
58   11    7    0    0   12   0   5    2    2  3.312403
59    5   11   11    0   15   0   5    2    3  3.432798
60    5    7    6    7    0   0   5    2    2  3.317932
61    0    7   11    9    0   0   5    2    0  3.662678

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value Pr(>F)
I(T1_I^2)    1 5.120e-10 5.120e-10   0.153  0.716
I(T1_J^2)    1 1.776e-09 1.776e-09   0.531  0.507
I(T2_I^2)    1 6.650e-10 6.650e-10   0.199  0.679
I(T2_J^2)    1 2.380e-10 2.380e-10   0.071  0.803
I(U1_I^2)    1 1.866e-09 1.866e-09   0.558  0.497
I(RT_J^2)    1 1.155e-08 1.155e-08   3.452  0.137
T1_I         1 1.221e-09 1.221e-09   0.365  0.578
T1_J         1 2.130e-10 2.130e-10   0.064  0.813
T2_I         1 3.515e-09 3.515e-09   1.050  0.363
T2_J         1 7.220e-10 7.220e-10   0.216  0.666
U1_I         1 7.570e-10 7.570e-10   0.226  0.659
RT_J         1 9.595e-09 9.595e-09   2.867  0.166
Residuals    4 1.339e-08 3.347e-09               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
737    4.209714
756    3.694110
829    5.730055
1821   4.175070
2402   3.380100
2466   3.375813
3141   3.861716
3722   5.840047
5233   3.642912
6135   3.951453
8501   3.956045
8826   3.959224
8933   4.061924
11235  3.312403
12561  3.432798
12625  3.317932
12718  3.662678

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(T2_J^2)': 0.8030129466203915, 'T1_J': 0.8132749891793742, 'I(T2_I^2)': 0.6788216645744359, 'U1_I': 0.6592610022770717, 'T2_J': 0.6664914908053042, 'T2_I': 0.3633467313566472, 'I(RT_J^2)': 0.1367442985606828, 'I(U1_I^2)': 0.4967085156856479, 'I(T1_I^2)': 0.715712144681711, 'I(T1_J^2)': 0.5066528924657211, 'RT_J': 0.1656688837047402, 'T1_I': 0.5784026658372423}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_I', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_I', 'U1_I', 'T2_J', 'I(T2_I^2)', 'I(T1_I^2)', 'I(T2_J^2)', 'T1_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 61 10

Pruned data dimensions: [1] 17 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(RT_J^2) + T1_I + T1_J + T2_I + 
    T2_J + U1_I + RT_J, tau = 0.1, data = structure(list(T1_I = c(0, 
4, 0, 11, 11, 0, 0, 11, 0, 4, 6, 0, 5, 11, 5, 5, 0), T1_J = c(5, 
0, 1, 2, 0, 0, 4, 1, 11, 6, 0, 11, 11, 7, 11, 7, 7), T2_I = c(11, 
0, 0, 11, 11, 5, 5, 0, 5, 0, 10, 0, 5, 0, 11, 6, 11), T2_J = c(6, 
5, 0, 11, 6, 11, 0, 3, 0, 11, 0, 11, 11, 0, 0, 7, 9), U1_I = c(11, 
20, 0, 12, 29, 16, 27, 0, 29, 29, 1, 2, 15, 12, 15, 0, 0), U_I = c(0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), U_J = c(5, 5, 
5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5), RT_I = c(2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(5, 0, 
3, 0, 3, 2, 5, 5, 0, 4, 5, 5, 5, 2, 3, 2, 0), cost_mean = c(4.209714, 
3.69411, 5.730055, 4.17507, 3.3801, 3.375813, 3.861716, 5.840047, 
3.642912, 3.951453, 3.956045, 3.959224, 4.061924, 3.312403, 3.432798, 
3.317932, 3.662678)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", 
"U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 45:61, class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.361840e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -4.860000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)    -5.560000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     5.510000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)     1.180000e-03 -1.797693e+308  1.797693e+308
I(U1_I^2)    -6.000000e-04 -1.797693e+308  1.797693e+308
I(RT_J^2)     6.841000e-02 -1.797693e+308  1.797693e+308
T1_I          5.007000e-02 -1.797693e+308  1.797693e+308
T1_J          4.972000e-02 -1.797693e+308  1.797693e+308
T2_I         -5.558000e-02 -1.797693e+308  1.797693e+308
T2_J          8.190000e-03 -1.797693e+308  1.797693e+308
U1_I          1.893000e-02 -1.797693e+308  1.797693e+308
RT_J         -2.510900e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 10694
Valid coordinates: 8160/40800
Tested coordinates: 21430
Valid coordinates: 12240/40800
Tested coordinates: 32030
Valid coordinates: 16320/40800
Tested coordinates: 42678
Valid coordinates: 20400/40800
Tested coordinates: 53258
Valid coordinates: 24480/40800
Tested coordinates: 63927
Valid coordinates: 28560/40800
Tested coordinates: 74669
Valid coordinates: 32640/40800
Tested coordinates: 85430
Valid coordinates: 36720/40800
Tested coordinates: 96281
Valid coordinates: 40800/40800
Tested coordinates: 106988
Valid/Tested configurations: 40800/106988
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 195200      9

Pruned data dimensions: [1] 54890     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.8030129466203915, 'T1_J': 0.8132749891793742, 'I(T2_I^2)': 0.6788216645744359, 'U1_I': 0.6592610022770717, 'T2_J': 0.6664914908053042, 'T2_I': 0.3633467313566472, 'I(RT_J^2)': 0.1367442985606828, 'I(U1_I^2)': 0.4967085156856479, 'I(T1_I^2)': 0.715712144681711, 'I(T1_J^2)': 0.5066528924657211, 'RT_J': 0.1656688837047402, 'T1_I': 0.5784026658372423}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_I', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_I', 'U1_I', 'T2_J', 'I(T2_I^2)', 'I(T1_I^2)', 'I(T2_J^2)', 'T1_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.8030129466203915, 'T1_J': 0.8132749891793742, 'I(T2_I^2)': 0.6788216645744359, 'U1_I': 0.6592610022770717, 'T2_J': 0.6664914908053042, 'T2_I': 0.3633467313566472, 'I(RT_J^2)': 0.1367442985606828, 'I(U1_I^2)': 0.4967085156856479, 'I(T1_I^2)': 0.715712144681711, 'I(T1_J^2)': 0.5066528924657211, 'RT_J': 0.1656688837047402, 'T1_I': 0.5784026658372423}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T2_I', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_I', 'U1_I', 'T2_J', 'I(T2_I^2)', 'I(T1_I^2)', 'I(T2_J^2)', 'T1_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
10706    3    5    9    0    9   0  12    2    1

Best From Design: [11, 7, 0, 0, 12, 0, 5, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.750765
Design Best Point:
[11, 7, 0, 0, 12, 0, 5, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.697235708354
Predicted Best Point:
[3, 5, 9, 0, 9, 0, 12, 2, 1]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[3, 5, 9, 0, 9, 0, 12, 2, 1]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		957
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1724
        Writes: 		201
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.2601
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.697235708354
Slowdown (Predicted Best): 0.68622632355
Budget: 61/1000
Updating Global Best: 3.2601
Current Best Point: 
[3, 5, 9, 0, 9, 0, 12, 2, 1]
Step 3
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 3150
Valid coordinates: 2400/12000
Tested coordinates: 6286
Valid coordinates: 3600/12000
Tested coordinates: 9359
Valid coordinates: 4800/12000
Tested coordinates: 12591
Valid coordinates: 6000/12000
Tested coordinates: 15788
Valid coordinates: 7200/12000
Tested coordinates: 18806
Valid coordinates: 8400/12000
Tested coordinates: 21980
Valid coordinates: 9600/12000
Tested coordinates: 25038
Valid coordinates: 10800/12000
Tested coordinates: 28275
Valid coordinates: 12000/12000
Tested coordinates: 31313
Valid/Tested configurations: 12000/31313
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 207200      9

Pruned data dimensions: [1] 66890     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Clean Info:
One-Level Factors: ['U_I', 'U_J', 'RT_I']
Two-Level Factors: ['U_I', 'U_J', 'RT_I']
Three-Level Factors: ['U_I', 'U_J', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J']
Clean 2 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 66890     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
2402    11    0   11    6   29   0   5    2    3
4381     5    0    0   11    1   0   5    2    3
5932    11    5   11   11    9   0   5    2    5
8571     6    1    6    5   15   0   5    2    5
10776    0    0    5    0    8   0   5    2    0
11264    0    0   11   11   17   0   5    2    0
12561    5   11   11    0   15   0   5    2    3
15352    6    0    0    0   29   0   5    2    5
21512    0   11    6   11    0   0   5    2    5
22150    7    5    7   11   29   0   5    2    2
28114    0    5   11    0   29   0   5    2    5
40182   11   10    0   10   29   0   5    2    0
53528    0    5    0    7   16   0   5    2    2
56235    4    5   11    5    0   0   5    2    0
65096   11    3    0    0    0   0   5    2    3

D-Efficiency Approximation: [1] 0.2782533

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		886
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1601
        Writes: 		181
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.331966
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2340
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4031
        Writes: 		433
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.078675
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		2346
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4043
        Writes: 		439
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.75546
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		408
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			779
        Writes: 		100
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.653999
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		439
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			819
        Writes: 		113
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.651618
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		2269
        Multiplications: 	752
        Divisions: 		0
        Logical: 		0
        Reads: 			3883
        Writes: 		428
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.073242
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		2320
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			3990
        Writes: 		417
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.057656
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		680
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1271
        Writes: 		173
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.394543
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2354
        Multiplications: 	780
        Divisions: 		0
        Logical: 		0
        Reads: 			4057
        Writes: 		449
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.081328
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		451
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			843
        Writes: 		125
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.651692
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		662
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1237
        Writes: 		158
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.405785
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		420
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			783
        Writes: 		95
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.693152
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		880
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1590
        Writes: 		177
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.734115
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2402    11    0   11    6   29   0   5    2    3  3.380100
4381     5    0    0   11    1   0   5    2    3  3.331966
5932    11    5   11   11    9   0   5    2    5  4.078675
8571     6    1    6    5   15   0   5    2    5  5.755460
10776    0    0    5    0    8   0   5    2    0  3.653999
11264    0    0   11   11   17   0   5    2    0  3.651618
12561    5   11   11    0   15   0   5    2    3  3.432798
15352    6    0    0    0   29   0   5    2    5  4.073242
21512    0   11    6   11    0   0   5    2    5  4.057656
22150    7    5    7   11   29   0   5    2    2  3.394543
28114    0    5   11    0   29   0   5    2    5  4.081328
40182   11   10    0   10   29   0   5    2    0  3.651692
53528    0    5    0    7   16   0   5    2    2  3.405785
56235    4    5   11    5    0   0   5    2    0  3.693152
65096   11    3    0    0    0   0   5    2    3  3.734115

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2402    11    0   11    6   29   0   5    2    3  3.380100
4381     5    0    0   11    1   0   5    2    3  3.331966
5932    11    5   11   11    9   0   5    2    5  4.078675
8571     6    1    6    5   15   0   5    2    5  5.755460
10776    0    0    5    0    8   0   5    2    0  3.653999
11264    0    0   11   11   17   0   5    2    0  3.651618
12561    5   11   11    0   15   0   5    2    3  3.432798
15352    6    0    0    0   29   0   5    2    5  4.073242
21512    0   11    6   11    0   0   5    2    5  4.057656
22150    7    5    7   11   29   0   5    2    2  3.394543
28114    0    5   11    0   29   0   5    2    5  4.081328
40182   11   10    0   10   29   0   5    2    0  3.651692
53528    0    5    0    7   16   0   5    2    2  3.405785
56235    4    5   11    5    0   0   5    2    0  3.693152
65096   11    3    0    0    0   0   5    2    3  3.734115

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie U_Ie       U_Je
2402   0.8333333 -1.0000000  0.8333333  0.0000000  0.93333333   -1 -0.6666667
4381  -0.1666667 -1.0000000 -1.0000000  0.8333333 -0.93333333   -1 -0.6666667
5932   0.8333333 -0.1666667  0.8333333  0.8333333 -0.40000000   -1 -0.6666667
8571   0.0000000 -0.8333333  0.0000000 -0.1666667  0.00000000   -1 -0.6666667
10776 -1.0000000 -1.0000000 -0.1666667 -1.0000000 -0.46666667   -1 -0.6666667
11264 -1.0000000 -1.0000000  0.8333333  0.8333333  0.13333333   -1 -0.6666667
12561 -0.1666667  0.8333333  0.8333333 -1.0000000  0.00000000   -1 -0.6666667
15352  0.0000000 -1.0000000 -1.0000000 -1.0000000  0.93333333   -1 -0.6666667
21512 -1.0000000  0.8333333  0.0000000  0.8333333 -1.00000000   -1 -0.6666667
22150  0.1666667 -0.1666667  0.1666667  0.8333333  0.93333333   -1 -0.6666667
28114 -1.0000000 -0.1666667  0.8333333 -1.0000000  0.93333333   -1 -0.6666667
40182  0.8333333  0.6666667 -1.0000000  0.6666667  0.93333333   -1 -0.6666667
53528 -1.0000000 -0.1666667 -1.0000000  0.1666667  0.06666667   -1 -0.6666667
56235 -0.3333333 -0.1666667  0.8333333 -0.1666667 -1.00000000   -1 -0.6666667
65096  0.8333333 -0.5000000 -1.0000000 -1.0000000 -1.00000000   -1 -0.6666667
           RT_Ie      RT_Je cost_mean
2402  -0.3333333  0.0000000  3.380100
4381  -0.3333333  0.0000000  3.331966
5932  -0.3333333  0.6666667  4.078675
8571  -0.3333333  0.6666667  5.755460
10776 -0.3333333 -1.0000000  3.653999
11264 -0.3333333 -1.0000000  3.651618
12561 -0.3333333  0.0000000  3.432798
15352 -0.3333333  0.6666667  4.073242
21512 -0.3333333  0.6666667  4.057656
22150 -0.3333333 -0.3333333  3.394543
28114 -0.3333333  0.6666667  4.081328
40182 -0.3333333 -1.0000000  3.651692
53528 -0.3333333 -0.3333333  3.405785
56235 -0.3333333 -1.0000000  3.693152
65096 -0.3333333  0.0000000  3.734115

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 76 10

Pruned data dimensions: [1] 32 10

Heteroscedasticity Test p-value: 0.0104139588464
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
45    0    5   11    6   11   0   5    2    5  4.209714
46    4    0    0    5   20   0   5    2    0  3.694110
47    0    1    0    0    0   0   5    2    3  5.730055
48   11    2   11   11   12   0   5    2    0  4.175070
49   11    0   11    6   29   0   5    2    3  3.380100
50    0    0    5   11   16   0   5    2    2  3.375813
51    0    4    5    0   27   0   5    2    5  3.861716
52   11    1    0    3    0   0   5    2    5  5.840047
53    0   11    5    0   29   0   5    2    0  3.642912
54    4    6    0   11   29   0   5    2    4  3.951453
55    6    0   10    0    1   0   5    2    5  3.956045
56    0   11    0   11    2   0   5    2    5  3.959224
57    5   11    5   11   15   0   5    2    5  4.061924
58   11    7    0    0   12   0   5    2    2  3.312403
59    5   11   11    0   15   0   5    2    3  3.432798
60    5    7    6    7    0   0   5    2    2  3.317932
61    0    7   11    9    0   0   5    2    0  3.662678
62   11    0   11    6   29   0   5    2    3  3.380100
63    5    0    0   11    1   0   5    2    3  3.331966
64   11    5   11   11    9   0   5    2    5  4.078675
65    6    1    6    5   15   0   5    2    5  5.755460
66    0    0    5    0    8   0   5    2    0  3.653999
67    0    0   11   11   17   0   5    2    0  3.651618
68    5   11   11    0   15   0   5    2    3  3.432798
69    6    0    0    0   29   0   5    2    5  4.073242
70    0   11    6   11    0   0   5    2    5  4.057656
71    7    5    7   11   29   0   5    2    2  3.394543
72    0    5   11    0   29   0   5    2    5  4.081328
73   11   10    0   10   29   0   5    2    0  3.651692
74    0    5    0    7   16   0   5    2    2  3.405785
75    4    5   11    5    0   0   5    2    0  3.693152
76   11    3    0    0    0   0   5    2    3  3.734115

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 1.990e-10 1.990e-10   0.460 0.505654    
I(T1_J^2)    1 2.540e-10 2.540e-10   0.587 0.452851    
I(T2_I^2)    1 8.700e-11 8.700e-11   0.202 0.658285    
I(T2_J^2)    1 4.700e-11 4.700e-11   0.108 0.745506    
I(U1_I^2)    1 5.240e-10 5.240e-10   1.211 0.284811    
I(RT_J^2)    1 9.459e-09 9.459e-09  21.873 0.000164 ***
T1_I         1 8.070e-10 8.070e-10   1.866 0.187840    
T1_J         1 1.000e-12 1.000e-12   0.003 0.955128    
T2_I         1 1.630e-10 1.630e-10   0.377 0.546704    
T2_J         1 2.600e-11 2.600e-11   0.059 0.810532    
U1_I         1 5.000e-11 5.000e-11   0.115 0.738151    
RT_J         1 7.543e-09 7.543e-09  17.441 0.000512 ***
Residuals   19 8.217e-09 4.320e-10                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
2402   3.380100
4381   3.331966
5932   4.078675
8571   5.755460
10776  3.653999
11264  3.651618
12561  3.432798
15352  4.073242
21512  4.057656
22150  3.394543
28114  4.081328
40182  3.651692
53528  3.405785
56235  3.693152
65096  3.734115

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(T2_J^2)': 0.745506106875738, 'T1_J': 0.9551283031000466, 'I(T2_I^2)': 0.6582846036973561, 'U1_I': 0.7381510729949308, 'T2_J': 0.8105316807516998, 'T2_I': 0.546704298856693, 'I(RT_J^2)': 0.00016429033122592526, 'I(U1_I^2)': 0.28481082753918735, 'I(T1_I^2)': 0.5056535021424171, 'I(T1_J^2)': 0.4528510933957193, 'RT_J': 0.0005122985343209295, 'T1_I': 0.18784001347709017}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T1_I', 'I(U1_I^2)', 'I(T1_J^2)', 'I(T1_I^2)', 'T2_I', 'I(T2_I^2)', 'U1_I', 'I(T2_J^2)', 'T2_J', 'T1_J']
Variables within threshold: ['I(RT_J^2)', 'RT_J', 'I(RT_J^2)', 'RT_J']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J', 'I(RT_J^2)', 'RT_J']
Using Model: cost_mean ~ I(RT_J^2) + RT_J + I(RT_J^2) + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 76 10

Pruned data dimensions: [1] 32 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J + I(RT_J^2) + RT_J, 
    tau = 0.1, data = structure(list(T1_I = c(0, 4, 0, 11, 11, 
    0, 0, 11, 0, 4, 6, 0, 5, 11, 5, 5, 0, 11, 5, 11, 6, 0, 0, 
    5, 6, 0, 7, 0, 11, 0, 4, 11), T1_J = c(5, 0, 1, 2, 0, 0, 
    4, 1, 11, 6, 0, 11, 11, 7, 11, 7, 7, 0, 0, 5, 1, 0, 0, 11, 
    0, 11, 5, 5, 10, 5, 5, 3), T2_I = c(11, 0, 0, 11, 11, 5, 
    5, 0, 5, 0, 10, 0, 5, 0, 11, 6, 11, 11, 0, 11, 6, 5, 11, 
    11, 0, 6, 7, 11, 0, 0, 11, 0), T2_J = c(6, 5, 0, 11, 6, 11, 
    0, 3, 0, 11, 0, 11, 11, 0, 0, 7, 9, 6, 11, 11, 5, 0, 11, 
    0, 0, 11, 11, 0, 10, 7, 5, 0), U1_I = c(11, 20, 0, 12, 29, 
    16, 27, 0, 29, 29, 1, 2, 15, 12, 15, 0, 0, 29, 1, 9, 15, 
    8, 17, 15, 29, 0, 29, 29, 29, 16, 0, 0), U_I = c(0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0), U_J = c(5, 5, 5, 5, 5, 5, 
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
    5, 5, 5, 5, 5, 5, 5), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2), RT_J = c(5, 0, 3, 0, 3, 2, 5, 5, 0, 4, 5, 5, 
    5, 2, 3, 2, 0, 3, 3, 5, 5, 0, 0, 3, 5, 5, 2, 5, 0, 2, 0, 
    3), cost_mean = c(4.209714, 3.69411, 5.730055, 4.17507, 3.3801, 
    3.375813, 3.861716, 5.840047, 3.642912, 3.951453, 3.956045, 
    3.959224, 4.061924, 3.312403, 3.432798, 3.317932, 3.662678, 
    3.3801, 3.331966, 4.078675, 5.75546, 3.653999, 3.651618, 
    3.432798, 4.073242, 4.057656, 3.394543, 4.081328, 3.651692, 
    3.405785, 3.693152, 3.734115)), .Names = c("T1_I", "T1_J", 
    "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
    ), row.names = 45:76, class = "data.frame"))

tau: [1] 0.1

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.642910e+00 -1.797693e+308   3.651640e+00
I(RT_J^2)     7.596000e-02   6.877000e-02  1.797693e+308
RT_J         -3.171800e-01 -1.797693e+308  -2.250700e-01

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 9503
Valid coordinates: 7200/36000
Tested coordinates: 18881
Valid coordinates: 10800/36000
Tested coordinates: 28457
Valid coordinates: 14400/36000
Tested coordinates: 37936
Valid coordinates: 18000/36000
Tested coordinates: 47575
Valid coordinates: 21600/36000
Tested coordinates: 56935
Valid coordinates: 25200/36000
Tested coordinates: 66385
Valid coordinates: 28800/36000
Tested coordinates: 75657
Valid coordinates: 32400/36000
Tested coordinates: 85166
Valid coordinates: 36000/36000
Tested coordinates: 94699
Valid/Tested configurations: 36000/94699
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 243200      9

Pruned data dimensions: [1] 102890      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.745506106875738, 'T1_J': 0.9551283031000466, 'I(T2_I^2)': 0.6582846036973561, 'U1_I': 0.7381510729949308, 'T2_J': 0.8105316807516998, 'T2_I': 0.546704298856693, 'I(RT_J^2)': 0.00016429033122592526, 'I(U1_I^2)': 0.28481082753918735, 'I(T1_I^2)': 0.5056535021424171, 'I(T1_J^2)': 0.4528510933957193, 'RT_J': 0.0005122985343209295, 'T1_I': 0.18784001347709017}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T1_I', 'I(U1_I^2)', 'I(T1_J^2)', 'I(T1_I^2)', 'T2_I', 'I(T2_I^2)', 'U1_I', 'I(T2_J^2)', 'T2_J', 'T1_J']
Variables within threshold: ['RT_J']
Unique Variables: ['RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.745506106875738, 'T1_J': 0.9551283031000466, 'I(T2_I^2)': 0.6582846036973561, 'U1_I': 0.7381510729949308, 'T2_J': 0.8105316807516998, 'T2_I': 0.546704298856693, 'I(RT_J^2)': 0.00016429033122592526, 'I(U1_I^2)': 0.28481082753918735, 'I(T1_I^2)': 0.5056535021424171, 'I(T1_J^2)': 0.4528510933957193, 'RT_J': 0.0005122985343209295, 'T1_I': 0.18784001347709017}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'T1_I', 'I(U1_I^2)', 'I(T1_J^2)', 'I(T1_I^2)', 'T2_I', 'I(T2_I^2)', 'U1_I', 'I(T2_J^2)', 'T2_J', 'T1_J']
Variables within threshold: ['RT_J']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
5    1    1    9    6   24   7   0    1    0

Best From Design: [5, 0, 0, 11, 1, 0, 5, 2, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_J': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.750765
Design Best Point:
[5, 0, 0, 11, 1, 0, 5, 2, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.701353571477
Predicted Best Point:
[1, 1, 9, 6, 24, 7, 0, 1, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 1, 9, 6, 24, 7, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		171
        Multiplications: 	44
        Divisions: 		0
        Logical: 		0
        Reads: 			398
        Writes: 		90
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.829749
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 5, 'U_I': 0, 'RT_J': 0, 'RT_I': 2}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.701353571477
Slowdown (Predicted Best): 0.806133117508
Budget: 76/1000
Best point from design was better than predicted point
Current Best Point: 
[3, 5, 9, 0, 9, 0, 12, 2, 1]
Final Best Point: 
[3, 5, 9, 0, 9, 0, 12, 2, 1]
Ending DLMT
Best Point: [3, 5, 9, 0, 9, 0, 12, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.45724517653
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.45724517653
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [3, 5, 9, 0, 9, 0, 12, 2, 1]={'T1_I': 8, 'T1_J': 32, 'U_J': 13, 'U_I': 1, 'T2_I': 512, 'T2_J': 1, 'U1_I': 10, 'RT_I': 4, 'RT_J': 2}, cost=3.260100e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-8438.29, runs=77
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 8
 T1_J = 32
 T2_I = 512
 T2_J = 1
 U1_I = 10
 U_I = 1
 U_J = 13
 cost_mean = 3.2601
 points = 77
 speedup = 1.45724517653
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		957
        Multiplications: 	320
        Divisions: 		0
        Logical: 		0
        Reads: 			1724
        Writes: 		201
        Comparisons:		14
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
