
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 83066
Valid coordinates: 3520/17600
Tested coordinates: 167854
Valid coordinates: 5280/17600
Tested coordinates: 252279
Valid coordinates: 7040/17600
Tested coordinates: 338919
Valid coordinates: 8800/17600
Tested coordinates: 424193
Valid coordinates: 10560/17600
Tested coordinates: 509612
Valid coordinates: 12320/17600
Tested coordinates: 594095
Valid coordinates: 14080/17600
Tested coordinates: 679665
Valid coordinates: 15840/17600
Tested coordinates: 763078
Valid coordinates: 17600/17600
Tested coordinates: 847092
Valid/Tested configurations: 17600/847092
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
491     11    3   11   11   12   0  29    0    2
821      4   11    0   11    6   0  11    5    2
1361     1    0    6    0    7   0  11    2    0
1407     5   11    7    0    3   0  29    0    5
2044     5    6   11    6   20   0  19    0    0
3269     7    0    0    2    0  29   0    0    1
4653     0    4   11   10    0   0  28    3    3
4773     1    5   11    0   18  29   0    5    0
6254     0   10   11   10    7  29   0    1    5
6834    11    0   11    2   12   4   0    5    2
9530     0    6    1    0   17  15   0    0    2
9646     5    0    0   11   14   0   0    2    5
9792     0    0    2    7   25   0  29    3    0
9822    11    6    0    8   21   0  20    2    5
9912     8   11    8   11   29   0   0    0    1
10158    4    0   11    0   29  20   0    2    5
10814    7   11    8   11   14  18   0    2    2
12916    5    5    7   11    0  20   0    5    0
12961    0    1    4   11   28   0  13    0    4
15331   11   11    0    0    0   0   0    2    0
15939    5    6    6    0   29  28   0    2    2
16602    1    6    6    6   14   0   0    2    4

D-Efficiency Approximation: [1] 0.2190955

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		349
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			791
        Writes: 		103
        Comparisons:		9
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.607914
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		7255
        Multiplications: 	2244
        Divisions: 		0
        Logical: 		0
        Reads: 			11331
        Writes: 		1158
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582287
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		770
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1384
        Writes: 		161
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582192
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		592
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1333
        Writes: 		150
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582959
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		232
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			520
        Writes: 		81
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.660406
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1029
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			1990
        Writes: 		238
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.364719
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		4334
        Multiplications: 	1368
        Divisions: 		0
        Logical: 		0
        Reads: 			6944
        Writes: 		715
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.648053
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		646
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1449
        Writes: 		204
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.615792
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = jjj
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		14513
        Multiplications: 	4356
        Divisions: 		0
        Logical: 		0
        Reads: 			21961
        Writes: 		2249
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.977185
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		2277
        Multiplications: 	760
        Divisions: 		0
        Logical: 		0
        Reads: 			3941
        Writes: 		431
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.033961
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1045
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1845
        Writes: 		228
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582236
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1978
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3405
        Writes: 		370
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.064465
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		3583
        Multiplications: 	1116
        Divisions: 		0
        Logical: 		0
        Reads: 			5715
        Writes: 		609
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580373
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3252
        Multiplications: 	1080
        Divisions: 		0
        Logical: 		0
        Reads: 			5555
        Writes: 		595
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.120974
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		67
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			167
        Writes: 		52
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.785977
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		11159
        Multiplications: 	3344
        Divisions: 		0
        Logical: 		0
        Reads: 			16900
        Writes: 		1749
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.958595
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		1456
        Multiplications: 	480
        Divisions: 		0
        Logical: 		0
        Reads: 			2580
        Writes: 		309
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.376986
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	6
        Additions: 		542
        Multiplications: 	216
        Divisions: 		0
        Logical: 		0
        Reads: 			1227
        Writes: 		162
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.747375
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		329
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			743
        Writes: 		111
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.034854
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		56
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			154
        Writes: 		29
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.597868
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2081
        Multiplications: 	680
        Divisions: 		0
        Logical: 		0
        Reads: 			3630
        Writes: 		434
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.324921
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1021
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1812
        Writes: 		212
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582294
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
491     11    3   11   11   12   0  29    0    2  4.607914
821      4   11    0   11    6   0  11    5    2  4.582287
1361     1    0    6    0    7   0  11    2    0  4.582192
1407     5   11    7    0    3   0  29    0    5  4.582959
2044     5    6   11    6   20   0  19    0    0  4.660406
3269     7    0    0    2    0  29   0    0    1  5.364719
4653     0    4   11   10    0   0  28    3    3  3.648053
4773     1    5   11    0   18  29   0    5    0  4.615792
6254     0   10   11   10    7  29   0    1    5  3.977185
6834    11    0   11    2   12   4   0    5    2  7.033961
9530     0    6    1    0   17  15   0    0    2  4.582236
9646     5    0    0   11   14   0   0    2    5  4.064465
9792     0    0    2    7   25   0  29    3    0  4.580373
9822    11    6    0    8   21   0  20    2    5  4.120974
9912     8   11    8   11   29   0   0    0    1  4.785977
10158    4    0   11    0   29  20   0    2    5  3.958595
10814    7   11    8   11   14  18   0    2    2  3.376986
12916    5    5    7   11    0  20   0    5    0  5.747375
12961    0    1    4   11   28   0  13    0    4  9.034854
15331   11   11    0    0    0   0   0    2    0  3.597868
15939    5    6    6    0   29  28   0    2    2  3.324921
16602    1    6    6    6   14   0   0    2    4  4.582294

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
491     11    3   11   11   12   0  29    0    2  4.607914
821      4   11    0   11    6   0  11    5    2  4.582287
1361     1    0    6    0    7   0  11    2    0  4.582192
1407     5   11    7    0    3   0  29    0    5  4.582959
2044     5    6   11    6   20   0  19    0    0  4.660406
3269     7    0    0    2    0  29   0    0    1  5.364719
4653     0    4   11   10    0   0  28    3    3  3.648053
4773     1    5   11    0   18  29   0    5    0  4.615792
6254     0   10   11   10    7  29   0    1    5  3.977185
6834    11    0   11    2   12   4   0    5    2  7.033961
9530     0    6    1    0   17  15   0    0    2  4.582236
9646     5    0    0   11   14   0   0    2    5  4.064465
9792     0    0    2    7   25   0  29    3    0  4.580373
9822    11    6    0    8   21   0  20    2    5  4.120974
9912     8   11    8   11   29   0   0    0    1  4.785977
10158    4    0   11    0   29  20   0    2    5  3.958595
10814    7   11    8   11   14  18   0    2    2  3.376986
12916    5    5    7   11    0  20   0    5    0  5.747375
12961    0    1    4   11   28   0  13    0    4  9.034854
15331   11   11    0    0    0   0   0    2    0  3.597868
15939    5    6    6    0   29  28   0    2    2  3.324921
16602    1    6    6    6   14   0   0    2    4  4.582294

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
491    0.8333333 -0.5000000  0.8333333  0.8333333 -0.20000000 -1.0000000
821   -0.3333333  0.8333333 -1.0000000  0.8333333 -0.60000000 -1.0000000
1361  -0.8333333 -1.0000000  0.0000000 -1.0000000 -0.53333333 -1.0000000
1407  -0.1666667  0.8333333  0.1666667 -1.0000000 -0.80000000 -1.0000000
2044  -0.1666667  0.0000000  0.8333333  0.0000000  0.33333333 -1.0000000
3269   0.1666667 -1.0000000 -1.0000000 -0.6666667 -1.00000000  0.9333333
4653  -1.0000000 -0.3333333  0.8333333  0.6666667 -1.00000000 -1.0000000
4773  -0.8333333 -0.1666667  0.8333333 -1.0000000  0.20000000  0.9333333
6254  -1.0000000  0.6666667  0.8333333  0.6666667 -0.53333333  0.9333333
6834   0.8333333 -1.0000000  0.8333333 -0.6666667 -0.20000000 -0.7333333
9530  -1.0000000  0.0000000 -0.8333333 -1.0000000  0.13333333  0.0000000
9646  -0.1666667 -1.0000000 -1.0000000  0.8333333 -0.06666667 -1.0000000
9792  -1.0000000 -1.0000000 -0.6666667  0.1666667  0.66666667 -1.0000000
9822   0.8333333  0.0000000 -1.0000000  0.3333333  0.40000000 -1.0000000
9912   0.3333333  0.8333333  0.3333333  0.8333333  0.93333333 -1.0000000
10158 -0.3333333 -1.0000000  0.8333333 -1.0000000  0.93333333  0.3333333
10814  0.1666667  0.8333333  0.3333333  0.8333333 -0.06666667  0.2000000
12916 -0.1666667 -0.1666667  0.1666667  0.8333333 -1.00000000  0.3333333
12961 -1.0000000 -0.8333333 -0.3333333  0.8333333  0.86666667 -1.0000000
15331  0.8333333  0.8333333 -1.0000000 -1.0000000 -1.00000000 -1.0000000
15939 -0.1666667  0.0000000  0.0000000 -1.0000000  0.93333333  0.8666667
16602 -0.8333333  0.0000000  0.0000000  0.0000000 -0.06666667 -1.0000000
            U_Je      RT_Ie      RT_Je cost_mean
491    0.9333333 -1.0000000 -0.3333333  4.607914
821   -0.2666667  0.6666667 -0.3333333  4.582287
1361  -0.2666667 -0.3333333 -1.0000000  4.582192
1407   0.9333333 -1.0000000  0.6666667  4.582959
2044   0.2666667 -1.0000000 -1.0000000  4.660406
3269  -1.0000000 -1.0000000 -0.6666667  5.364719
4653   0.8666667  0.0000000  0.0000000  3.648053
4773  -1.0000000  0.6666667 -1.0000000  4.615792
6254  -1.0000000 -0.6666667  0.6666667  3.977185
6834  -1.0000000  0.6666667 -0.3333333  7.033961
9530  -1.0000000 -1.0000000 -0.3333333  4.582236
9646  -1.0000000 -0.3333333  0.6666667  4.064465
9792   0.9333333  0.0000000 -1.0000000  4.580373
9822   0.3333333 -0.3333333  0.6666667  4.120974
9912  -1.0000000 -1.0000000 -0.6666667  4.785977
10158 -1.0000000 -0.3333333  0.6666667  3.958595
10814 -1.0000000 -0.3333333 -0.3333333  3.376986
12916 -1.0000000  0.6666667 -1.0000000  5.747375
12961 -0.1333333 -1.0000000  0.3333333  9.034854
15331 -1.0000000 -0.3333333 -1.0000000  3.597868
15939 -1.0000000 -0.3333333 -0.3333333  3.324921
16602 -1.0000000 -0.3333333  0.3333333  4.582294

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.0913328217983
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  0.000   0.000   0.000 0.9943  
I(T1_J^2)    1  4.248   4.248   5.308 0.1046  
I(T2_I^2)    1  0.256   0.256   0.320 0.6109  
I(T2_J^2)    1  1.381   1.381   1.726 0.2804  
I(U1_I^2)    1  0.226   0.226   0.283 0.6317  
I(U_I^2)     1  0.484   0.484   0.604 0.4936  
I(U_J^2)     1  1.383   1.383   1.728 0.2801  
I(RT_I^2)    1  0.835   0.835   1.043 0.3823  
I(RT_J^2)    1  0.007   0.007   0.009 0.9298  
T1_I         1  0.854   0.854   1.067 0.3776  
T1_J         1  1.048   1.048   1.310 0.3355  
T2_I         1  2.300   2.300   2.874 0.1886  
T2_J         1  0.070   0.070   0.088 0.7866  
U1_I         1  0.477   0.477   0.596 0.4964  
U_I          1  0.208   0.208   0.260 0.6452  
U_J          1  2.414   2.414   3.016 0.1808  
RT_I         1 15.036  15.036  18.789 0.0227 *
RT_J         1  0.031   0.031   0.038 0.8576  
Residuals    3  2.401   0.800                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
491    4.607914
821    4.582287
1361   4.582192
1407   4.582959
2044   4.660406
3269   5.364719
4653   3.648053
4773   4.615792
6254   3.977185
6834   7.033961
9530   4.582236
9646   4.064465
9792   4.580373
9822   4.120974
9912   4.785977
10158  3.958595
10814  3.376986
12916  5.747375
12961  9.034854
15331  3.597868
15939  3.324921
16602  4.582294

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.9298387038595416, 'T1_J': 0.3354906266267794, 'T2_J': 0.7866497551986239, 'U_J': 0.18082744324447073, 'U_I': 0.6451768499783938, 'I(T2_I^2)': 0.610918501660573, 'T2_I': 0.18860840449079547, 'U1_I': 0.4963549987308956, 'I(U_I^2)': 0.4935681422086975, 'I(RT_I^2)': 0.3822508764027131, 'I(T2_J^2)': 0.28035512545193914, 'I(U1_I^2)': 0.6316994794440265, 'RT_I': 0.02265091095337589, 'I(T1_I^2)': 0.9942634678087241, 'I(T1_J^2)': 0.10461492644806565, 'I(U_J^2)': 0.2801348537009264, 'RT_J': 0.8576014063377668, 'T1_I': 0.37757837036619546}
Ordered Keys: 
['RT_I', 'I(T1_J^2)', 'U_J', 'T2_I', 'I(U_J^2)', 'I(T2_J^2)', 'T1_J', 'T1_I', 'I(RT_I^2)', 'I(U_I^2)', 'U1_I', 'I(T2_I^2)', 'I(U1_I^2)', 'U_I', 'T2_J', 'RT_J', 'I(RT_J^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.05, data = structure(list(T1_I = c(11, 
4, 1, 5, 5, 7, 0, 1, 0, 11, 0, 5, 0, 11, 8, 4, 7, 5, 0, 11, 5, 
1), T1_J = c(3, 11, 0, 11, 6, 0, 4, 5, 10, 0, 6, 0, 0, 6, 11, 
0, 11, 5, 1, 11, 6, 6), T2_I = c(11, 0, 6, 7, 11, 0, 11, 11, 
11, 11, 1, 0, 2, 0, 8, 11, 8, 7, 4, 0, 6, 6), T2_J = c(11, 11, 
0, 0, 6, 2, 10, 0, 10, 2, 0, 11, 7, 8, 11, 0, 11, 11, 11, 0, 
0, 6), U1_I = c(12, 6, 7, 3, 20, 0, 0, 18, 7, 12, 17, 14, 25, 
21, 29, 29, 14, 0, 28, 0, 29, 14), U_I = c(0, 0, 0, 0, 0, 29, 
0, 29, 29, 4, 15, 0, 0, 0, 0, 20, 18, 20, 0, 0, 28, 0), U_J = c(29, 
11, 11, 29, 19, 0, 28, 0, 0, 0, 0, 0, 29, 20, 0, 0, 0, 0, 13, 
0, 0, 0), RT_I = c(0, 5, 2, 0, 0, 0, 3, 5, 1, 5, 0, 2, 3, 2, 
0, 2, 2, 5, 0, 2, 2, 2), RT_J = c(2, 2, 0, 5, 0, 1, 3, 0, 5, 
2, 2, 5, 0, 5, 1, 5, 2, 0, 4, 0, 2, 4), cost_mean = c(4.607914, 
4.582287, 4.582192, 4.582959, 4.660406, 5.364719, 3.648053, 4.615792, 
3.977185, 7.033961, 4.582236, 4.064465, 4.580373, 4.120974, 4.785977, 
3.958595, 3.376986, 5.747375, 9.034854, 3.597868, 3.324921, 4.582294
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("491", "821", 
"1361", "1407", "2044", "3269", "4653", "4773", "6254", "6834", 
"9530", "9646", "9792", "9822", "9912", "10158", "10814", "12916", 
"12961", "15331", "15939", "16602"), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   5.381950e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     2.680000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)     1.462000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)    -3.035000e-02 -1.797693e+308  1.797693e+308
I(T2_J^2)    -2.505000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)     1.460000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)     -9.300000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)     -1.260000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     2.681300e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     6.930000e-03 -1.797693e+308  1.797693e+308
T1_I         -2.515500e-01 -1.797693e+308  1.797693e+308
T1_J         -2.475500e-01 -1.797693e+308  1.797693e+308
T2_I          3.460700e-01 -1.797693e+308  1.797693e+308
T2_J          2.786400e-01 -1.797693e+308  1.797693e+308
U1_I         -5.187000e-02 -1.797693e+308  1.797693e+308
U_I           2.352000e-02 -1.797693e+308  1.797693e+308
U_J           1.734000e-02 -1.797693e+308  1.797693e+308
RT_I         -1.189140e+00 -1.797693e+308  1.797693e+308
RT_J          6.635000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 254273
Valid coordinates: 10560/52800
Tested coordinates: 504336
Valid coordinates: 15840/52800
Tested coordinates: 761186
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1014259
Valid coordinates: 26400/52800
Tested coordinates: 1270377
Valid coordinates: 31680/52800
Tested coordinates: 1522409
Valid coordinates: 36960/52800
Tested coordinates: 1768712
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2022302
Valid coordinates: 47520/52800
Tested coordinates: 2268817
Valid coordinates: 52800/52800
Tested coordinates: 2519484
Valid/Tested configurations: 52800/2519484
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9298387038595416, 'T1_J': 0.3354906266267794, 'T2_J': 0.7866497551986239, 'U_J': 0.18082744324447073, 'U_I': 0.6451768499783938, 'I(T2_I^2)': 0.610918501660573, 'T2_I': 0.18860840449079547, 'U1_I': 0.4963549987308956, 'I(U_I^2)': 0.4935681422086975, 'I(RT_I^2)': 0.3822508764027131, 'I(T2_J^2)': 0.28035512545193914, 'I(U1_I^2)': 0.6316994794440265, 'RT_I': 0.02265091095337589, 'I(T1_I^2)': 0.9942634678087241, 'I(T1_J^2)': 0.10461492644806565, 'I(U_J^2)': 0.2801348537009264, 'RT_J': 0.8576014063377668, 'T1_I': 0.37757837036619546}
Ordered Keys: 
['RT_I', 'I(T1_J^2)', 'U_J', 'T2_I', 'I(U_J^2)', 'I(T2_J^2)', 'T1_J', 'T1_I', 'I(RT_I^2)', 'I(U_I^2)', 'U1_I', 'I(T2_I^2)', 'I(U1_I^2)', 'U_I', 'T2_J', 'RT_J', 'I(RT_J^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.9298387038595416, 'T1_J': 0.3354906266267794, 'T2_J': 0.7866497551986239, 'U_J': 0.18082744324447073, 'U_I': 0.6451768499783938, 'I(T2_I^2)': 0.610918501660573, 'T2_I': 0.18860840449079547, 'U1_I': 0.4963549987308956, 'I(U_I^2)': 0.4935681422086975, 'I(RT_I^2)': 0.3822508764027131, 'I(T2_J^2)': 0.28035512545193914, 'I(U1_I^2)': 0.6316994794440265, 'RT_I': 0.02265091095337589, 'I(T1_I^2)': 0.9942634678087241, 'I(T1_J^2)': 0.10461492644806565, 'I(U_J^2)': 0.2801348537009264, 'RT_J': 0.8576014063377668, 'T1_I': 0.37757837036619546}
Ordered Keys: 
['RT_I', 'I(T1_J^2)', 'U_J', 'T2_I', 'I(U_J^2)', 'I(T2_J^2)', 'T1_J', 'T1_I', 'I(RT_I^2)', 'I(U_I^2)', 'U1_I', 'I(T2_I^2)', 'I(U1_I^2)', 'U_I', 'T2_J', 'RT_J', 'I(RT_J^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
9435    3    7    0    0   23   0  28    2    0

Best From Design: [5, 6, 6, 0, 29, 28, 0, 2, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.858555
Baseline Point:
4.858555
Design Best Point:
[5, 6, 6, 0, 29, 28, 0, 2, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.684343595987
Predicted Best Point:
[3, 7, 0, 0, 23, 0, 28, 2, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[3, 7, 0, 0, 23, 0, 28, 2, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1825
        Multiplications: 	600
        Divisions: 		0
        Logical: 		0
        Reads: 			3131
        Writes: 		349
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.661854
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.684343595987
Slowdown (Predicted Best): 0.753691992784
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.324921
Current Best Point: 
[5, 6, 6, 0, 29, 28, 0, 2, 2]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 85940
Valid coordinates: 3520/17600
Tested coordinates: 167593
Valid coordinates: 5280/17600
Tested coordinates: 250723
Valid coordinates: 7040/17600
Tested coordinates: 335510
Valid coordinates: 8800/17600
Tested coordinates: 417691
Valid coordinates: 10560/17600
Tested coordinates: 501333
Valid coordinates: 12320/17600
Tested coordinates: 589358
Valid coordinates: 14080/17600
Tested coordinates: 674552
Valid coordinates: 15840/17600
Tested coordinates: 759814
Valid coordinates: 17600/17600
Tested coordinates: 840148
Valid/Tested configurations: 17600/840148
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
549      1    0   11    4    9   0   0    5    2
15196    6    6    0    7    9   0   0    0    2
15331   11   11    0    0    0   0   0    2    0
15691    0    0    5    6    0  15   0    0    2
20043   11    0   11    6   28   0  13    0    5
20307    0   11    8   11    0   0  29    4    3
33665    3    0    6    0   13   1   0    5    0
36675    5   11    0   11   21   0  16    5    2
39793    5    0    0   11    4   0  13    0    0
41206    0    5    0   11   29  11   0    5    0
42677   11    0    0    3   29   0  27    5    2
56399    5    4    6   11   29   0   0    3    4
60241    7   11    7    0   14  12   0    0    5
61784    2    0    5    6   23   0  29    1    0
62089   11    7   11    7   16  17   0    2    0
65418    0    3    0    5   15  29   0    2    5
66087   11    0   11   11   15  29   0    0    2
68106    7    6    7    6    1  29   0    5    0
72789    8    7   11    0    6   0  29    0    5
74122    0    5    5    0   14   0  12    3    2
75192    1   10   11    0   29  29   0    0    0
79290    6    0   11    2    0  17   0    3    3

D-Efficiency Approximation: [1] 0.2348954

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1976
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3402
        Writes: 		367
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.773099
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		68
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			174
        Writes: 		38
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.971922
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1023
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1802
        Writes: 		208
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.145759
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		470
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1056
        Writes: 		141
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582802
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		8692
        Multiplications: 	2652
        Divisions: 		0
        Logical: 		0
        Reads: 			13350
        Writes: 		1353
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.174311
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		352
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			802
        Writes: 		109
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.557557
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		9530
        Multiplications: 	2904
        Divisions: 		0
        Logical: 		0
        Reads: 			14661
        Writes: 		1503
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.59166
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		159
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			361
        Writes: 		51
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684553
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	4
        Additions: 		470
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1078
        Writes: 		163
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.629774
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		14510
        Multiplications: 	4356
        Divisions: 		0
        Logical: 		0
        Reads: 			21937
        Writes: 		2237
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.173815
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1954
        Multiplications: 	612
        Divisions: 		0
        Logical: 		0
        Reads: 			3216
        Writes: 		367
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.861785
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		6067
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			9373
        Writes: 		976
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.079085
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1040
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			1998
        Writes: 		237
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.592643
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		269
        Multiplications: 	92
        Divisions: 		0
        Logical: 		0
        Reads: 			614
        Writes: 		108
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.610693
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	4
        Additions: 		15421
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23307
        Writes: 		2393
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.866191
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1897
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3269
        Writes: 		380
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.368533
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		626
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1408
        Writes: 		185
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.710981
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		595
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1339
        Writes: 		153
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582799
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2027
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3367
        Writes: 		368
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.388826
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		365
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			810
        Writes: 		144
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.585548
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3068
        Multiplications: 	972
        Divisions: 		0
        Logical: 		0
        Reads: 			5001
        Writes: 		537
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.850616
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
549      1    0   11    4    9   0   0    5    2  4.773099
15196    6    6    0    7    9   0   0    0    2  4.971922
15331   11   11    0    0    0   0   0    2    0  3.597868
15691    0    0    5    6    0  15   0    0    2  3.145759
20043   11    0   11    6   28   0  13    0    5  4.582802
20307    0   11    8   11    0   0  29    4    3  3.174311
33665    3    0    6    0   13   1   0    5    0  3.557557
36675    5   11    0   11   21   0  16    5    2  7.591660
39793    5    0    0   11    4   0  13    0    0  4.684553
41206    0    5    0   11   29  11   0    5    0  5.629774
42677   11    0    0    3   29   0  27    5    2  7.173815
56399    5    4    6   11   29   0   0    3    4  3.861785
60241    7   11    7    0   14  12   0    0    5  4.079085
61784    2    0    5    6   23   0  29    1    0  3.592643
62089   11    7   11    7   16  17   0    2    0  3.610693
65418    0    3    0    5   15  29   0    2    5  3.866191
66087   11    0   11   11   15  29   0    0    2  6.368533
68106    7    6    7    6    1  29   0    5    0  5.710981
72789    8    7   11    0    6   0  29    0    5  4.582799
74122    0    5    5    0   14   0  12    3    2  3.388826
75192    1   10   11    0   29  29   0    0    0  4.585548
79290    6    0   11    2    0  17   0    3    3  3.850616

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
549      1    0   11    4    9   0   0    5    2  4.773099
15196    6    6    0    7    9   0   0    0    2  4.971922
15331   11   11    0    0    0   0   0    2    0  3.597868
15691    0    0    5    6    0  15   0    0    2  3.145759
20043   11    0   11    6   28   0  13    0    5  4.582802
20307    0   11    8   11    0   0  29    4    3  3.174311
33665    3    0    6    0   13   1   0    5    0  3.557557
36675    5   11    0   11   21   0  16    5    2  7.591660
39793    5    0    0   11    4   0  13    0    0  4.684553
41206    0    5    0   11   29  11   0    5    0  5.629774
42677   11    0    0    3   29   0  27    5    2  7.173815
56399    5    4    6   11   29   0   0    3    4  3.861785
60241    7   11    7    0   14  12   0    0    5  4.079085
61784    2    0    5    6   23   0  29    1    0  3.592643
62089   11    7   11    7   16  17   0    2    0  3.610693
65418    0    3    0    5   15  29   0    2    5  3.866191
66087   11    0   11   11   15  29   0    0    2  6.368533
68106    7    6    7    6    1  29   0    5    0  5.710981
72789    8    7   11    0    6   0  29    0    5  4.582799
74122    0    5    5    0   14   0  12    3    2  3.388826
75192    1   10   11    0   29  29   0    0    0  4.585548
79290    6    0   11    2    0  17   0    3    3  3.850616

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
549   -0.8333333 -1.0000000  0.8333333 -0.3333333 -0.40000000 -1.0000000
15196  0.0000000  0.0000000 -1.0000000  0.1666667 -0.40000000 -1.0000000
15331  0.8333333  0.8333333 -1.0000000 -1.0000000 -1.00000000 -1.0000000
15691 -1.0000000 -1.0000000 -0.1666667  0.0000000 -1.00000000  0.0000000
20043  0.8333333 -1.0000000  0.8333333  0.0000000  0.86666667 -1.0000000
20307 -1.0000000  0.8333333  0.3333333  0.8333333 -1.00000000 -1.0000000
33665 -0.5000000 -1.0000000  0.0000000 -1.0000000 -0.13333333 -0.9333333
36675 -0.1666667  0.8333333 -1.0000000  0.8333333  0.40000000 -1.0000000
39793 -0.1666667 -1.0000000 -1.0000000  0.8333333 -0.73333333 -1.0000000
41206 -1.0000000 -0.1666667 -1.0000000  0.8333333  0.93333333 -0.2666667
42677  0.8333333 -1.0000000 -1.0000000 -0.5000000  0.93333333 -1.0000000
56399 -0.1666667 -0.3333333  0.0000000  0.8333333  0.93333333 -1.0000000
60241  0.1666667  0.8333333  0.1666667 -1.0000000 -0.06666667 -0.2000000
61784 -0.6666667 -1.0000000 -0.1666667  0.0000000  0.53333333 -1.0000000
62089  0.8333333  0.1666667  0.8333333  0.1666667  0.06666667  0.1333333
65418 -1.0000000 -0.5000000 -1.0000000 -0.1666667  0.00000000  0.9333333
66087  0.8333333 -1.0000000  0.8333333  0.8333333  0.00000000  0.9333333
68106  0.1666667  0.0000000  0.1666667  0.0000000 -0.93333333  0.9333333
72789  0.3333333  0.1666667  0.8333333 -1.0000000 -0.60000000 -1.0000000
74122 -1.0000000 -0.1666667 -0.1666667 -1.0000000 -0.06666667 -1.0000000
75192 -0.8333333  0.6666667  0.8333333 -1.0000000  0.93333333  0.9333333
79290  0.0000000 -1.0000000  0.8333333 -0.6666667 -1.00000000  0.1333333
             U_Je      RT_Ie      RT_Je cost_mean
549   -1.00000000  0.6666667 -0.3333333  4.773099
15196 -1.00000000 -1.0000000 -0.3333333  4.971922
15331 -1.00000000 -0.3333333 -1.0000000  3.597868
15691 -1.00000000 -1.0000000 -0.3333333  3.145759
20043 -0.13333333 -1.0000000  0.6666667  4.582802
20307  0.93333333  0.3333333  0.0000000  3.174311
33665 -1.00000000  0.6666667 -1.0000000  3.557557
36675  0.06666667  0.6666667 -0.3333333  7.591660
39793 -0.13333333 -1.0000000 -1.0000000  4.684553
41206 -1.00000000  0.6666667 -1.0000000  5.629774
42677  0.80000000  0.6666667 -0.3333333  7.173815
56399 -1.00000000  0.0000000  0.3333333  3.861785
60241 -1.00000000 -1.0000000  0.6666667  4.079085
61784  0.93333333 -0.6666667 -1.0000000  3.592643
62089 -1.00000000 -0.3333333 -1.0000000  3.610693
65418 -1.00000000 -0.3333333  0.6666667  3.866191
66087 -1.00000000 -1.0000000 -0.3333333  6.368533
68106 -1.00000000  0.6666667 -1.0000000  5.710981
72789  0.93333333 -1.0000000  0.6666667  4.582799
74122 -0.20000000  0.0000000 -0.3333333  3.388826
75192 -1.00000000 -1.0000000 -1.0000000  4.585548
79290 -1.00000000  0.0000000  0.0000000  3.850616

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.000190215141984
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1    11    3   11   11   12   0  29    0    2  4.607914
2     4   11    0   11    6   0  11    5    2  4.582287
3     1    0    6    0    7   0  11    2    0  4.582192
4     5   11    7    0    3   0  29    0    5  4.582959
5     5    6   11    6   20   0  19    0    0  4.660406
6     7    0    0    2    0  29   0    0    1  5.364719
7     0    4   11   10    0   0  28    3    3  3.648053
8     1    5   11    0   18  29   0    5    0  4.615792
9     0   10   11   10    7  29   0    1    5  3.977185
10   11    0   11    2   12   4   0    5    2  7.033961
11    0    6    1    0   17  15   0    0    2  4.582236
12    5    0    0   11   14   0   0    2    5  4.064465
13    0    0    2    7   25   0  29    3    0  4.580373
14   11    6    0    8   21   0  20    2    5  4.120974
15    8   11    8   11   29   0   0    0    1  4.785977
16    4    0   11    0   29  20   0    2    5  3.958595
17    7   11    8   11   14  18   0    2    2  3.376986
18    5    5    7   11    0  20   0    5    0  5.747375
19    0    1    4   11   28   0  13    0    4  9.034854
20   11   11    0    0    0   0   0    2    0  3.597868
21    5    6    6    0   29  28   0    2    2  3.324921
22    1    6    6    6   14   0   0    2    4  4.582294
23    1    0   11    4    9   0   0    5    2  4.773099
24    6    6    0    7    9   0   0    0    2  4.971922
25   11   11    0    0    0   0   0    2    0  3.597868
26    0    0    5    6    0  15   0    0    2  3.145759
27   11    0   11    6   28   0  13    0    5  4.582802
28    0   11    8   11    0   0  29    4    3  3.174311
29    3    0    6    0   13   1   0    5    0  3.557557
30    5   11    0   11   21   0  16    5    2  7.591660
31    5    0    0   11    4   0  13    0    0  4.684553
32    0    5    0   11   29  11   0    5    0  5.629774
33   11    0    0    3   29   0  27    5    2  7.173815
34    5    4    6   11   29   0   0    3    4  3.861785
35    7   11    7    0   14  12   0    0    5  4.079085
36    2    0    5    6   23   0  29    1    0  3.592643
37   11    7   11    7   16  17   0    2    0  3.610693
38    0    3    0    5   15  29   0    2    5  3.866191
39   11    0   11   11   15  29   0    0    2  6.368533
40    7    6    7    6    1  29   0    5    0  5.710981
41    8    7   11    0    6   0  29    0    5  4.582799
42    0    5    5    0   14   0  12    3    2  3.388826
43    1   10   11    0   29  29   0    0    0  4.585548
44    6    0   11    2    0  17   0    3    3  3.850616

Power Transform Successful
Regression Step:            Df   Sum Sq  Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.000977 0.000977   1.584 0.219744    
I(T1_J^2)    1 0.001425 0.001425   2.312 0.140944    
I(T2_I^2)    1 0.000149 0.000149   0.241 0.627431    
I(T2_J^2)    1 0.001507 0.001507   2.445 0.130465    
I(U1_I^2)    1 0.000948 0.000948   1.538 0.226462    
I(U_I^2)     1 0.000193 0.000193   0.313 0.581068    
I(U_J^2)     1 0.000002 0.000002   0.004 0.950353    
I(RT_I^2)    1 0.002976 0.002976   4.828 0.037481 *  
I(RT_J^2)    1 0.000018 0.000018   0.028 0.867317    
T1_I         1 0.000508 0.000508   0.823 0.372830    
T1_J         1 0.000030 0.000030   0.048 0.827650    
T2_I         1 0.001449 0.001449   2.351 0.137755    
T2_J         1 0.000006 0.000006   0.010 0.919441    
U1_I         1 0.000438 0.000438   0.711 0.407001    
U_I          1 0.000715 0.000715   1.160 0.291748    
U_J          1 0.000889 0.000889   1.443 0.240944    
RT_I         1 0.009310 0.009310  15.103 0.000663 ***
RT_J         1 0.000002 0.000002   0.004 0.951900    
Residuals   25 0.015410 0.000616                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
549    4.773099
15196  4.971922
15331  3.597868
15691  3.145759
20043  4.582802
20307  3.174311
33665  3.557557
36675  7.591660
39793  4.684553
41206  5.629774
42677  7.173815
56399  3.861785
60241  4.079085
61784  3.592643
62089  3.610693
65418  3.866191
66087  6.368533
68106  5.710981
72789  4.582799
74122  3.388826
75192  4.585548
79290  3.850616

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.8673169362146358, 'T1_J': 0.8276498825863805, 'T2_J': 0.919441214294263, 'U_J': 0.24094430787140456, 'U_I': 0.29174770929930927, 'I(T2_I^2)': 0.6274313212879623, 'T2_I': 0.1377552349889633, 'U1_I': 0.40700134143238587, 'I(U_I^2)': 0.5810680570996754, 'I(RT_I^2)': 0.037481327236748824, 'I(T2_J^2)': 0.13046492103138532, 'I(U1_I^2)': 0.22646171765675702, 'RT_I': 0.0006631117646311007, 'I(T1_I^2)': 0.2197443426463102, 'I(T1_J^2)': 0.14094375739981221, 'I(U_J^2)': 0.9503531115839046, 'RT_J': 0.9518996620872172, 'T1_I': 0.3728297345831397}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(T2_J^2)', 'T2_I', 'I(T1_J^2)', 'I(T1_I^2)', 'I(U1_I^2)', 'U_J', 'U_I', 'T1_I', 'U1_I', 'I(U_I^2)', 'I(T2_I^2)', 'T1_J', 'I(RT_J^2)', 'T2_J', 'I(U_J^2)', 'RT_J']
Variables within threshold: ['RT_I', 'I(RT_I^2)']
Predicting Best Values for: ['RT_I', 'I(RT_I^2)']
Using Model: cost_mean ~ RT_I + I(RT_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_I^2), tau = 0.05, data = structure(list(
    T1_I = c(11, 4, 1, 5, 5, 7, 0, 1, 0, 11, 0, 5, 0, 11, 8, 
    4, 7, 5, 0, 11, 5, 1, 1, 6, 11, 0, 11, 0, 3, 5, 5, 0, 11, 
    5, 7, 2, 11, 0, 11, 7, 8, 0, 1, 6), T1_J = c(3, 11, 0, 11, 
    6, 0, 4, 5, 10, 0, 6, 0, 0, 6, 11, 0, 11, 5, 1, 11, 6, 6, 
    0, 6, 11, 0, 0, 11, 0, 11, 0, 5, 0, 4, 11, 0, 7, 3, 0, 6, 
    7, 5, 10, 0), T2_I = c(11, 0, 6, 7, 11, 0, 11, 11, 11, 11, 
    1, 0, 2, 0, 8, 11, 8, 7, 4, 0, 6, 6, 11, 0, 0, 5, 11, 8, 
    6, 0, 0, 0, 0, 6, 7, 5, 11, 0, 11, 7, 11, 5, 11, 11), T2_J = c(11, 
    11, 0, 0, 6, 2, 10, 0, 10, 2, 0, 11, 7, 8, 11, 0, 11, 11, 
    11, 0, 0, 6, 4, 7, 0, 6, 6, 11, 0, 11, 11, 11, 3, 11, 0, 
    6, 7, 5, 11, 6, 0, 0, 0, 2), U1_I = c(12, 6, 7, 3, 20, 0, 
    0, 18, 7, 12, 17, 14, 25, 21, 29, 29, 14, 0, 28, 0, 29, 14, 
    9, 9, 0, 0, 28, 0, 13, 21, 4, 29, 29, 29, 14, 23, 16, 15, 
    15, 1, 6, 14, 29, 0), U_I = c(0, 0, 0, 0, 0, 29, 0, 29, 29, 
    4, 15, 0, 0, 0, 0, 20, 18, 20, 0, 0, 28, 0, 0, 0, 0, 15, 
    0, 0, 1, 0, 0, 11, 0, 0, 12, 0, 17, 29, 29, 29, 0, 0, 29, 
    17), U_J = c(29, 11, 11, 29, 19, 0, 28, 0, 0, 0, 0, 0, 29, 
    20, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 13, 29, 0, 16, 13, 
    0, 27, 0, 0, 29, 0, 0, 0, 0, 29, 12, 0, 0), RT_I = c(0, 5, 
    2, 0, 0, 0, 3, 5, 1, 5, 0, 2, 3, 2, 0, 2, 2, 5, 0, 2, 2, 
    2, 5, 0, 2, 0, 0, 4, 5, 5, 0, 5, 5, 3, 0, 1, 2, 2, 0, 5, 
    0, 3, 0, 3), RT_J = c(2, 2, 0, 5, 0, 1, 3, 0, 5, 2, 2, 5, 
    0, 5, 1, 5, 2, 0, 4, 0, 2, 4, 2, 2, 0, 2, 5, 3, 0, 2, 0, 
    0, 2, 4, 5, 0, 0, 5, 2, 0, 5, 2, 0, 3), cost_mean = c(4.607914, 
    4.582287, 4.582192, 4.582959, 4.660406, 5.364719, 3.648053, 
    4.615792, 3.977185, 7.033961, 4.582236, 4.064465, 4.580373, 
    4.120974, 4.785977, 3.958595, 3.376986, 5.747375, 9.034854, 
    3.597868, 3.324921, 4.582294, 4.773099, 4.971922, 3.597868, 
    3.145759, 4.582802, 3.174311, 3.557557, 7.59166, 4.684553, 
    5.629774, 7.173815, 3.861785, 4.079085, 3.592643, 3.610693, 
    3.866191, 6.368533, 5.710981, 4.582799, 3.388826, 4.585548, 
    3.850616)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
-44L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.145760e+00 -1.797693e+308   4.185120e+00
RT_I          1.067000e-01 -1.797693e+308   4.939800e-01
I(RT_I^2)    -8.560000e-03  -5.319000e-02  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 252138
Valid coordinates: 10560/52800
Tested coordinates: 510026
Valid coordinates: 15840/52800
Tested coordinates: 765079
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1016063
Valid coordinates: 26400/52800
Tested coordinates: 1259934
Valid coordinates: 31680/52800
Tested coordinates: 1515723
Valid coordinates: 36960/52800
Tested coordinates: 1768429
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2029584
Valid coordinates: 47520/52800
Tested coordinates: 2281557
Valid coordinates: 52800/52800
Tested coordinates: 2538312
Valid/Tested configurations: 52800/2538312
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.8673169362146358, 'T1_J': 0.8276498825863805, 'T2_J': 0.919441214294263, 'U_J': 0.24094430787140456, 'U_I': 0.29174770929930927, 'I(T2_I^2)': 0.6274313212879623, 'T2_I': 0.1377552349889633, 'U1_I': 0.40700134143238587, 'I(U_I^2)': 0.5810680570996754, 'I(RT_I^2)': 0.037481327236748824, 'I(T2_J^2)': 0.13046492103138532, 'I(U1_I^2)': 0.22646171765675702, 'RT_I': 0.0006631117646311007, 'I(T1_I^2)': 0.2197443426463102, 'I(T1_J^2)': 0.14094375739981221, 'I(U_J^2)': 0.9503531115839046, 'RT_J': 0.9518996620872172, 'T1_I': 0.3728297345831397}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(T2_J^2)', 'T2_I', 'I(T1_J^2)', 'I(T1_I^2)', 'I(U1_I^2)', 'U_J', 'U_I', 'T1_I', 'U1_I', 'I(U_I^2)', 'I(T2_I^2)', 'T1_J', 'I(RT_J^2)', 'T2_J', 'I(U_J^2)', 'RT_J']
Variables within threshold: ['RT_I']
Unique Variables: ['RT_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.8673169362146358, 'T1_J': 0.8276498825863805, 'T2_J': 0.919441214294263, 'U_J': 0.24094430787140456, 'U_I': 0.29174770929930927, 'I(T2_I^2)': 0.6274313212879623, 'T2_I': 0.1377552349889633, 'U1_I': 0.40700134143238587, 'I(U_I^2)': 0.5810680570996754, 'I(RT_I^2)': 0.037481327236748824, 'I(T2_J^2)': 0.13046492103138532, 'I(U1_I^2)': 0.22646171765675702, 'RT_I': 0.0006631117646311007, 'I(T1_I^2)': 0.2197443426463102, 'I(T1_J^2)': 0.14094375739981221, 'I(U_J^2)': 0.9503531115839046, 'RT_J': 0.9518996620872172, 'T1_I': 0.3728297345831397}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(T2_J^2)', 'T2_I', 'I(T1_J^2)', 'I(T1_I^2)', 'I(U1_I^2)', 'U_J', 'U_I', 'T1_I', 'U1_I', 'I(U_I^2)', 'I(T2_I^2)', 'T1_J', 'I(RT_J^2)', 'T2_J', 'I(U_J^2)', 'RT_J']
Variables within threshold: ['RT_I']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
4    7    1    7    0    8   5   0    0    5

Best From Design: [0, 0, 5, 6, 0, 15, 0, 0, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.858555
Design Best Point:
[0, 0, 5, 6, 0, 15, 0, 0, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.6474680229
Predicted Best Point:
[7, 1, 7, 0, 8, 5, 0, 0, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[7, 1, 7, 0, 8, 5, 0, 0, 5]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2890
        Multiplications: 	924
        Divisions: 		0
        Logical: 		0
        Reads: 			4727
        Writes: 		501
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.347209
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.6474680229
Slowdown (Predicted Best): 0.894753481231
Budget: 44/1000
Best point from design was better than predicted point
Updating Global Best: 3.145759
Current Best Point: 
[0, 0, 5, 6, 0, 15, 0, 0, 2]
Step 2
Generating valid search space of size 15200 (does not spend evaluations)
Valid coordinates: 1520/15200
Tested coordinates: 62185
Valid coordinates: 3040/15200
Tested coordinates: 123466
Valid coordinates: 4560/15200
Tested coordinates: 183376
Valid coordinates: 6080/15200
Tested coordinates: 245737
Valid coordinates: 7600/15200
Tested coordinates: 308238
Valid coordinates: 9120/15200
Tested coordinates: 371714
Valid coordinates: 10640/15200
Tested coordinates: 433225
Valid coordinates: 12160/15200
Tested coordinates: 493041
Valid coordinates: 13680/15200
Tested coordinates: 554227
Valid coordinates: 15200/15200
Tested coordinates: 614537
Valid/Tested configurations: 15200/614537
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 156000      9

Pruned data dimensions: [1] 43244     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['RT_I']
Two-Level Factors: ['RT_I']
Three-Level Factors: ['RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 19 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 43244     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
569     11    6    0    7    0  29   0    0    1
2991     7    5   11    6   12   1   0    0    2
3496     5    0    5    0   16  28   0    0    0
5562     7    0    0   11    0   0  29    0    3
5702     6   11    7    0   14   0  13    0    4
6169     0    4    6   11    0   0  14    0    0
9720    11   11   11    0   29   0  28    0    0
12289   11    0   11   11   17  13   0    0    4
15380    0   11   11   11   18  29   0    0    5
17031    5    3    0    5   29   0  12    0    5
17615    5    5    5   11   28   1   0    0    0
18024    0    0   11    0   28   0   3    0    3
22658    0    7    3    0   29  14   0    0    3
22902   11    4    0    0   16   0   0    0    5
24880    3    0    0    7   16  14   0    0    0
29361    4    0    6    6    0   1   0    0    5
35910    0   11    0   11    3   5   0    0    0
38177    0    3    5    4   15   0  29    0    5
39901    4    5   11    0    0  13   0    0    5

D-Efficiency Approximation: [1] 0.2446997

Measuring design of size 19
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1035
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			2004
        Writes: 		242
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.156138
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		195
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			428
        Writes: 		75
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.490297
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		333
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			741
        Writes: 		122
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.454335
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		365
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			831
        Writes: 		94
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582285
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		315
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			715
        Writes: 		97
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581299
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		162
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			371
        Writes: 		48
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684453
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		319
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			711
        Writes: 		106
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581331
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		3323
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5241
        Writes: 		566
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.618952
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		13772
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20635
        Writes: 		2119
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.50918
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		465
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1045
        Writes: 		142
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.472562
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		87
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			199
        Writes: 		61
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.674881
Length of requested configs: 1
Code stats:
        Number of loops: 	5
        Max loop nest depth: 	3
        Additions: 		109
        Multiplications: 	32
        Divisions: 		0
        Logical: 		0
        Reads: 			251
        Writes: 		57
        Comparisons:		5
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582436
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1852
        Multiplications: 	576
        Divisions: 		0
        Logical: 		0
        Reads: 			3047
        Writes: 		357
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583253
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		324
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			741
        Writes: 		99
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580487
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		199
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			447
        Writes: 		84
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.586177
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		1068
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2061
        Writes: 		224
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.342216
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		85
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			212
        Writes: 		42
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.655985
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		604
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1357
        Writes: 		162
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.695436
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		6504
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			10005
        Writes: 		1028
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.044293
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
569     11    6    0    7    0  29   0    0    1  5.156138
2991     7    5   11    6   12   1   0    0    2  3.490297
3496     5    0    5    0   16  28   0    0    0  4.454335
5562     7    0    0   11    0   0  29    0    3  4.582285
5702     6   11    7    0   14   0  13    0    4  4.581299
6169     0    4    6   11    0   0  14    0    0  4.684453
9720    11   11   11    0   29   0  28    0    0  4.581331
12289   11    0   11   11   17  13   0    0    4  3.618952
15380    0   11   11   11   18  29   0    0    5  9.509180
17031    5    3    0    5   29   0  12    0    5  5.472562
17615    5    5    5   11   28   1   0    0    0  3.674881
18024    0    0   11    0   28   0   3    0    3  4.582436
22658    0    7    3    0   29  14   0    0    3  4.583253
22902   11    4    0    0   16   0   0    0    5  4.580487
24880    3    0    0    7   16  14   0    0    0  4.586177
29361    4    0    6    6    0   1   0    0    5  4.342216
35910    0   11    0   11    3   5   0    0    0  3.655985
38177    0    3    5    4   15   0  29    0    5  5.695436
39901    4    5   11    0    0  13   0    0    5  4.044293

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
569     11    6    0    7    0  29   0    0    1  5.156138
2991     7    5   11    6   12   1   0    0    2  3.490297
3496     5    0    5    0   16  28   0    0    0  4.454335
5562     7    0    0   11    0   0  29    0    3  4.582285
5702     6   11    7    0   14   0  13    0    4  4.581299
6169     0    4    6   11    0   0  14    0    0  4.684453
9720    11   11   11    0   29   0  28    0    0  4.581331
12289   11    0   11   11   17  13   0    0    4  3.618952
15380    0   11   11   11   18  29   0    0    5  9.509180
17031    5    3    0    5   29   0  12    0    5  5.472562
17615    5    5    5   11   28   1   0    0    0  3.674881
18024    0    0   11    0   28   0   3    0    3  4.582436
22658    0    7    3    0   29  14   0    0    3  4.583253
22902   11    4    0    0   16   0   0    0    5  4.580487
24880    3    0    0    7   16  14   0    0    0  4.586177
29361    4    0    6    6    0   1   0    0    5  4.342216
35910    0   11    0   11    3   5   0    0    0  3.655985
38177    0    3    5    4   15   0  29    0    5  5.695436
39901    4    5   11    0    0  13   0    0    5  4.044293

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
569    0.8333333  0.0000000 -1.0000000  0.1666667 -1.00000000  0.93333333
2991   0.1666667 -0.1666667  0.8333333  0.0000000 -0.20000000 -0.93333333
3496  -0.1666667 -1.0000000 -0.1666667 -1.0000000  0.06666667  0.86666667
5562   0.1666667 -1.0000000 -1.0000000  0.8333333 -1.00000000 -1.00000000
5702   0.0000000  0.8333333  0.1666667 -1.0000000 -0.06666667 -1.00000000
6169  -1.0000000 -0.3333333  0.0000000  0.8333333 -1.00000000 -1.00000000
9720   0.8333333  0.8333333  0.8333333 -1.0000000  0.93333333 -1.00000000
12289  0.8333333 -1.0000000  0.8333333  0.8333333  0.13333333 -0.13333333
15380 -1.0000000  0.8333333  0.8333333  0.8333333  0.20000000  0.93333333
17031 -0.1666667 -0.5000000 -1.0000000 -0.1666667  0.93333333 -1.00000000
17615 -0.1666667 -0.1666667 -0.1666667  0.8333333  0.86666667 -0.93333333
18024 -1.0000000 -1.0000000  0.8333333 -1.0000000  0.86666667 -1.00000000
22658 -1.0000000  0.1666667 -0.5000000 -1.0000000  0.93333333 -0.06666667
22902  0.8333333 -0.3333333 -1.0000000 -1.0000000  0.06666667 -1.00000000
24880 -0.5000000 -1.0000000 -1.0000000  0.1666667  0.06666667 -0.06666667
29361 -0.3333333 -1.0000000  0.0000000  0.0000000 -1.00000000 -0.93333333
35910 -1.0000000  0.8333333 -1.0000000  0.8333333 -0.80000000 -0.66666667
38177 -1.0000000 -0.5000000 -0.1666667 -0.3333333  0.00000000 -1.00000000
39901 -0.3333333 -0.1666667  0.8333333 -1.0000000 -1.00000000 -0.13333333
             U_Je RT_Ie      RT_Je cost_mean
569   -1.00000000    -1 -0.6666667  5.156138
2991  -1.00000000    -1 -0.3333333  3.490297
3496  -1.00000000    -1 -1.0000000  4.454335
5562   0.93333333    -1  0.0000000  4.582285
5702  -0.13333333    -1  0.3333333  4.581299
6169  -0.06666667    -1 -1.0000000  4.684453
9720   0.86666667    -1 -1.0000000  4.581331
12289 -1.00000000    -1  0.3333333  3.618952
15380 -1.00000000    -1  0.6666667  9.509180
17031 -0.20000000    -1  0.6666667  5.472562
17615 -1.00000000    -1 -1.0000000  3.674881
18024 -0.80000000    -1  0.0000000  4.582436
22658 -1.00000000    -1  0.0000000  4.583253
22902 -1.00000000    -1  0.6666667  4.580487
24880 -1.00000000    -1 -1.0000000  4.586177
29361 -1.00000000    -1  0.6666667  4.342216
35910 -1.00000000    -1 -1.0000000  3.655985
38177  0.93333333    -1  0.6666667  5.695436
39901 -1.00000000    -1  0.6666667  4.044293

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U1_I + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 63 10

Pruned data dimensions: [1] 34 10

Heteroscedasticity Test p-value: 0.0468259738399
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1    11    3   11   11   12   0  29    0    2  4.607914
4     5   11    7    0    3   0  29    0    5  4.582959
5     5    6   11    6   20   0  19    0    0  4.660406
6     7    0    0    2    0  29   0    0    1  5.364719
11    0    6    1    0   17  15   0    0    2  4.582236
15    8   11    8   11   29   0   0    0    1  4.785977
19    0    1    4   11   28   0  13    0    4  9.034854
24    6    6    0    7    9   0   0    0    2  4.971922
26    0    0    5    6    0  15   0    0    2  3.145759
27   11    0   11    6   28   0  13    0    5  4.582802
31    5    0    0   11    4   0  13    0    0  4.684553
35    7   11    7    0   14  12   0    0    5  4.079085
39   11    0   11   11   15  29   0    0    2  6.368533
41    8    7   11    0    6   0  29    0    5  4.582799
43    1   10   11    0   29  29   0    0    0  4.585548
45   11    6    0    7    0  29   0    0    1  5.156138
46    7    5   11    6   12   1   0    0    2  3.490297
47    5    0    5    0   16  28   0    0    0  4.454335
48    7    0    0   11    0   0  29    0    3  4.582285
49    6   11    7    0   14   0  13    0    4  4.581299
50    0    4    6   11    0   0  14    0    0  4.684453
51   11   11   11    0   29   0  28    0    0  4.581331
52   11    0   11   11   17  13   0    0    4  3.618952
53    0   11   11   11   18  29   0    0    5  9.509180
54    5    3    0    5   29   0  12    0    5  5.472562
55    5    5    5   11   28   1   0    0    0  3.674881
56    0    0   11    0   28   0   3    0    3  4.582436
57    0    7    3    0   29  14   0    0    3  4.583253
58   11    4    0    0   16   0   0    0    5  4.580487
59    3    0    0    7   16  14   0    0    0  4.586177
60    4    0    6    6    0   1   0    0    5  4.342216
61    0   11    0   11    3   5   0    0    0  3.655985
62    0    3    5    4   15   0  29    0    5  5.695436
63    4    5   11    0    0  13   0    0    5  4.044293

Power Transform Successful
Regression Step:            Df   Sum Sq  Mean Sq F value  Pr(>F)   
I(T1_I^2)    1 0.000082 0.000082   0.060 0.80989   
I(T1_J^2)    1 0.000057 0.000057   0.042 0.84097   
I(T2_I^2)    1 0.000036 0.000036   0.026 0.87291   
I(T2_J^2)    1 0.002668 0.002668   1.932 0.18245   
I(U1_I^2)    1 0.004415 0.004415   3.197 0.09159 . 
I(U_I^2)     1 0.011379 0.011379   8.241 0.01060 * 
I(U_J^2)     1 0.011560 0.011560   8.371 0.01010 * 
I(RT_J^2)    1 0.014394 0.014394  10.424 0.00493 **
T1_I         1 0.000015 0.000015   0.011 0.91780   
T1_J         1 0.000948 0.000948   0.687 0.41875   
T2_I         1 0.002103 0.002103   1.523 0.23400   
T2_J         1 0.000046 0.000046   0.033 0.85805   
U1_I         1 0.002422 0.002422   1.754 0.20294   
U_I          1 0.011669 0.011669   8.451 0.00982 **
U_J          1 0.003216 0.003216   2.329 0.14536   
RT_J         1 0.001739 0.001739   1.260 0.27732   
Residuals   17 0.023475 0.001381                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
569    5.156138
2991   3.490297
3496   4.454335
5562   4.582285
5702   4.581299
6169   4.684453
9720   4.581331
12289  3.618952
15380  9.509180
17031  5.472562
17615  3.674881
18024  4.582436
22658  4.583253
22902  4.580487
24880  4.586177
29361  4.342216
35910  3.655985
38177  5.695436
39901  4.044293

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.004933752533418041, 'T1_J': 0.41875285478672597, 'T2_J': 0.8580456691304182, 'U_J': 0.14535633432562514, 'U_I': 0.009815012826986977, 'I(T2_I^2)': 0.8729122563148631, 'U1_I': 0.20294470673383957, 'I(U_I^2)': 0.01060048134139282, 'T2_I': 0.23400296708530505, 'I(T2_J^2)': 0.18245154751664466, 'I(U1_I^2)': 0.09159229842999171, 'I(T1_I^2)': 0.8098913211907806, 'I(T1_J^2)': 0.840966503996232, 'I(U_J^2)': 0.010104195392070917, 'RT_J': 0.27731771503725233, 'T1_I': 0.9177974086107129}
Ordered Keys: 
['I(RT_J^2)', 'U_I', 'I(U_J^2)', 'I(U_I^2)', 'I(U1_I^2)', 'U_J', 'I(T2_J^2)', 'U1_I', 'T2_I', 'RT_J', 'T1_J', 'I(T1_I^2)', 'I(T1_J^2)', 'T2_J', 'I(T2_I^2)', 'T1_I']
Variables within threshold: ['I(RT_J^2)', 'RT_J', 'U_I', 'I(U_I^2)']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J', 'U_I', 'I(U_I^2)']
Using Model: cost_mean ~ I(RT_J^2) + RT_J + U_I + I(U_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 63 10

Pruned data dimensions: [1] 34 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J + U_I + I(U_I^2), tau = 0.05, 
    data = structure(list(T1_I = c(11, 5, 5, 7, 0, 8, 0, 6, 0, 
    11, 5, 7, 11, 8, 1, 11, 7, 5, 7, 6, 0, 11, 11, 0, 5, 5, 0, 
    0, 11, 3, 4, 0, 0, 4), T1_J = c(3, 11, 6, 0, 6, 11, 1, 6, 
    0, 0, 0, 11, 0, 7, 10, 6, 5, 0, 0, 11, 4, 11, 0, 11, 3, 5, 
    0, 7, 4, 0, 0, 11, 3, 5), T2_I = c(11, 7, 11, 0, 1, 8, 4, 
    0, 5, 11, 0, 7, 11, 11, 11, 0, 11, 5, 0, 7, 6, 11, 11, 11, 
    0, 5, 11, 3, 0, 0, 6, 0, 5, 11), T2_J = c(11, 0, 6, 2, 0, 
    11, 11, 7, 6, 6, 11, 0, 11, 0, 0, 7, 6, 0, 11, 0, 11, 0, 
    11, 11, 5, 11, 0, 0, 0, 7, 6, 11, 4, 0), U1_I = c(12, 3, 
    20, 0, 17, 29, 28, 9, 0, 28, 4, 14, 15, 6, 29, 0, 12, 16, 
    0, 14, 0, 29, 17, 18, 29, 28, 28, 29, 16, 16, 0, 3, 15, 0
    ), U_I = c(0, 0, 0, 29, 15, 0, 0, 0, 15, 0, 0, 12, 29, 0, 
    29, 29, 1, 28, 0, 0, 0, 0, 13, 29, 0, 1, 0, 14, 0, 14, 1, 
    5, 0, 13), U_J = c(29, 29, 19, 0, 0, 0, 13, 0, 0, 13, 13, 
    0, 0, 29, 0, 0, 0, 0, 29, 13, 14, 28, 0, 0, 12, 0, 3, 0, 
    0, 0, 0, 0, 29, 0), RT_I = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0), RT_J = c(2, 5, 0, 1, 2, 1, 4, 2, 2, 5, 0, 
    5, 2, 5, 0, 1, 2, 0, 3, 4, 0, 0, 4, 5, 5, 0, 3, 3, 5, 0, 
    5, 0, 5, 5), cost_mean = c(4.607914, 4.582959, 4.660406, 
    5.364719, 4.582236, 4.785977, 9.034854, 4.971922, 3.145759, 
    4.582802, 4.684553, 4.079085, 6.368533, 4.582799, 4.585548, 
    5.156138, 3.490297, 4.454335, 4.582285, 4.581299, 4.684453, 
    4.581331, 3.618952, 9.50918, 5.472562, 3.674881, 4.582436, 
    4.583253, 4.580487, 4.586177, 4.342216, 3.655985, 5.695436, 
    4.044293)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
    "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(1L, 
    4L, 5L, 6L, 11L, 15L, 19L, 24L, 26L, 27L, 31L, 35L, 39L, 
    41L, 43L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 
    55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.760710e+00 -1.797693e+308   3.958130e+00
I(RT_J^2)     7.525000e-02  -4.403300e-01  1.797693e+308
RT_J         -2.428000e-01 -1.797693e+308  1.797693e+308
U_I          -8.991000e-02 -1.797693e+308  -7.515000e-02
I(U_I^2)      4.080000e-03 -1.797693e+308  1.797693e+308

Generating valid search space of size 45600 (does not spend evaluations)
Valid coordinates: 4560/45600
Tested coordinates: 184370
Valid coordinates: 9120/45600
Tested coordinates: 361878
Valid coordinates: 13680/45600
Tested coordinates: 542883
Valid coordinates: 18240/45600
Tested coordinates: 724930
Valid coordinates: 22800/45600
Tested coordinates: 906278
Tested coordinates: 1000000
Valid coordinates: 27360/45600
Tested coordinates: 1092792
Valid coordinates: 31920/45600
Tested coordinates: 1273090
Valid coordinates: 36480/45600
Tested coordinates: 1458564
Valid coordinates: 41040/45600
Tested coordinates: 1639540
Valid coordinates: 45600/45600
Tested coordinates: 1822735
Valid/Tested configurations: 45600/1822735
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 201600      9

Pruned data dimensions: [1] 88844     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.004933752533418041, 'T1_J': 0.41875285478672597, 'T2_J': 0.8580456691304182, 'U_J': 0.14535633432562514, 'U_I': 0.009815012826986977, 'I(T2_I^2)': 0.8729122563148631, 'U1_I': 0.20294470673383957, 'I(U_I^2)': 0.01060048134139282, 'T2_I': 0.23400296708530505, 'I(T2_J^2)': 0.18245154751664466, 'I(U1_I^2)': 0.09159229842999171, 'I(T1_I^2)': 0.8098913211907806, 'I(T1_J^2)': 0.840966503996232, 'I(U_J^2)': 0.010104195392070917, 'RT_J': 0.27731771503725233, 'T1_I': 0.9177974086107129}
Ordered Keys: 
['I(RT_J^2)', 'U_I', 'I(U_J^2)', 'I(U_I^2)', 'I(U1_I^2)', 'U_J', 'I(T2_J^2)', 'U1_I', 'T2_I', 'RT_J', 'T1_J', 'I(T1_I^2)', 'I(T1_J^2)', 'T2_J', 'I(T2_I^2)', 'T1_I']
Variables within threshold: ['RT_J', 'U_I']
Unique Variables: ['RT_J', 'U_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.004933752533418041, 'T1_J': 0.41875285478672597, 'T2_J': 0.8580456691304182, 'U_J': 0.14535633432562514, 'U_I': 0.009815012826986977, 'I(T2_I^2)': 0.8729122563148631, 'U1_I': 0.20294470673383957, 'I(U_I^2)': 0.01060048134139282, 'T2_I': 0.23400296708530505, 'I(T2_J^2)': 0.18245154751664466, 'I(U1_I^2)': 0.09159229842999171, 'I(T1_I^2)': 0.8098913211907806, 'I(T1_J^2)': 0.840966503996232, 'I(U_J^2)': 0.010104195392070917, 'RT_J': 0.27731771503725233, 'T1_I': 0.9177974086107129}
Ordered Keys: 
['I(RT_J^2)', 'U_I', 'I(U_J^2)', 'I(U_I^2)', 'I(U1_I^2)', 'U_J', 'I(T2_J^2)', 'U1_I', 'T2_I', 'RT_J', 'T1_J', 'I(T1_I^2)', 'I(T1_J^2)', 'T2_J', 'I(T2_I^2)', 'T1_I']
Variables within threshold: ['RT_J', 'U_I']
Best Predicted:     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
510    2    0    7   10   21  11   0    1    2

Best From Design: [7, 5, 11, 6, 12, 1, 0, 0, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.858555
Design Best Point:
[7, 5, 11, 6, 12, 1, 0, 0, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.718381699909
Predicted Best Point:
[2, 0, 7, 10, 21, 11, 0, 1, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 0, 7, 10, 21, 11, 0, 1, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		916
        Multiplications: 	300
        Divisions: 		0
        Logical: 		0
        Reads: 			1680
        Writes: 		219
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.408153
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.718381699909
Slowdown (Predicted Best): 0.701474615395
Budget: 63/1000
Current Best Point: 
[0, 0, 5, 6, 0, 15, 0, 0, 2]
Step 3
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 93507
Valid coordinates: 2400/12000
Tested coordinates: 186761
Valid coordinates: 3600/12000
Tested coordinates: 276942
Valid coordinates: 4800/12000
Tested coordinates: 370724
Valid coordinates: 6000/12000
Tested coordinates: 466737
Valid coordinates: 7200/12000
Tested coordinates: 563743
Valid coordinates: 8400/12000
Tested coordinates: 657927
Valid coordinates: 9600/12000
Tested coordinates: 749471
Valid coordinates: 10800/12000
Tested coordinates: 844215
Valid coordinates: 12000/12000
Tested coordinates: 937919
Valid/Tested configurations: 12000/937919
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 213600      9

Pruned data dimensions: [1] 12230     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J
Clean Info:
One-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
Two-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
Three-Level Factors: ['U_I', 'U_J', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Two-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Three-Level Terms: ['(Intercept)', 'I(U_J^2)', 'U_J']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J']
Clean 2 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)', 'U_J', 'U_J']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', 'RT_J', '(Intercept)', 'U_J', 'U_J']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 12230     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
65       6    5    6   11    0  11   0    0    2
510      0    6   11    9   29  11   0    0    2
2812     0    5    0    0    0  11   0    0    2
4771     9   11   11   11    0  11   0    0    2
4989     4    0   11    0   11  11   0    0    2
5850    11    0   11    0    0  11   0    0    2
7636    11   11    0    0   29  11   0    0    2
8969     5   11    0   11   16  11   0    0    2
9084     0    0    5   11   29  11   0    0    2
9763     7    0    0    5   28  11   0    0    2
9961     0    0    3    5    0  11   0    0    2
10205    6    5    6    0   29  11   0    0    2
10796   11    1    0   11   14  11   0    0    2
11372   11    6   11    6   14  11   0    0    2
12135    0   11    6    0   13  11   0    0    2

D-Efficiency Approximation: [1] 0.3050525

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		785
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1408
        Writes: 		168
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.458941
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		819
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1475
        Writes: 		200
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.277082
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		768
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1383
        Writes: 		162
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.29299
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		782
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1401
        Writes: 		166
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.268871
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		677
        Multiplications: 	208
        Divisions: 		0
        Logical: 		0
        Reads: 			1144
        Writes: 		146
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.671304
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	3
        Additions: 		658
        Multiplications: 	208
        Divisions: 		0
        Logical: 		0
        Reads: 			1106
        Writes: 		130
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.259159
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		813
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1461
        Writes: 		196
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.256846
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		800
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1435
        Writes: 		183
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.753868
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		813
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1461
        Writes: 		196
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.579215
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		812
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1459
        Writes: 		195
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.372795
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		779
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1394
        Writes: 		164
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582819
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		813
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1461
        Writes: 		196
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest78.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.374136
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		804
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1445
        Writes: 		185
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest79.exe __orio_perftest79.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest79.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.262923
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		798
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1431
        Writes: 		181
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest80.exe __orio_perftest80.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest80.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.362265
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		797
        Multiplications: 	260
        Divisions: 		0
        Logical: 		0
        Reads: 			1429
        Writes: 		180
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest81.exe __orio_perftest81.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest81.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.332479
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
65       6    5    6   11    0  11   0    0    2  3.458941
510      0    6   11    9   29  11   0    0    2  3.277082
2812     0    5    0    0    0  11   0    0    2  3.292990
4771     9   11   11   11    0  11   0    0    2  3.268871
4989     4    0   11    0   11  11   0    0    2  3.671304
5850    11    0   11    0    0  11   0    0    2  3.259159
7636    11   11    0    0   29  11   0    0    2  3.256846
8969     5   11    0   11   16  11   0    0    2  3.753868
9084     0    0    5   11   29  11   0    0    2  3.579215
9763     7    0    0    5   28  11   0    0    2  3.372795
9961     0    0    3    5    0  11   0    0    2  4.582819
10205    6    5    6    0   29  11   0    0    2  3.374136
10796   11    1    0   11   14  11   0    0    2  4.262923
11372   11    6   11    6   14  11   0    0    2  3.362265
12135    0   11    6    0   13  11   0    0    2  3.332479

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
65       6    5    6   11    0  11   0    0    2  3.458941
510      0    6   11    9   29  11   0    0    2  3.277082
2812     0    5    0    0    0  11   0    0    2  3.292990
4771     9   11   11   11    0  11   0    0    2  3.268871
4989     4    0   11    0   11  11   0    0    2  3.671304
5850    11    0   11    0    0  11   0    0    2  3.259159
7636    11   11    0    0   29  11   0    0    2  3.256846
8969     5   11    0   11   16  11   0    0    2  3.753868
9084     0    0    5   11   29  11   0    0    2  3.579215
9763     7    0    0    5   28  11   0    0    2  3.372795
9961     0    0    3    5    0  11   0    0    2  4.582819
10205    6    5    6    0   29  11   0    0    2  3.374136
10796   11    1    0   11   14  11   0    0    2  4.262923
11372   11    6   11    6   14  11   0    0    2  3.362265
12135    0   11    6    0   13  11   0    0    2  3.332479

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie U_Je
65     0.0000000 -0.1666667  0.0000000  0.8333333 -1.00000000 -0.2666667   -1
510   -1.0000000  0.0000000  0.8333333  0.5000000  0.93333333 -0.2666667   -1
2812  -1.0000000 -0.1666667 -1.0000000 -1.0000000 -1.00000000 -0.2666667   -1
4771   0.5000000  0.8333333  0.8333333  0.8333333 -1.00000000 -0.2666667   -1
4989  -0.3333333 -1.0000000  0.8333333 -1.0000000 -0.26666667 -0.2666667   -1
5850   0.8333333 -1.0000000  0.8333333 -1.0000000 -1.00000000 -0.2666667   -1
7636   0.8333333  0.8333333 -1.0000000 -1.0000000  0.93333333 -0.2666667   -1
8969  -0.1666667  0.8333333 -1.0000000  0.8333333  0.06666667 -0.2666667   -1
9084  -1.0000000 -1.0000000 -0.1666667  0.8333333  0.93333333 -0.2666667   -1
9763   0.1666667 -1.0000000 -1.0000000 -0.1666667  0.86666667 -0.2666667   -1
9961  -1.0000000 -1.0000000 -0.5000000 -0.1666667 -1.00000000 -0.2666667   -1
10205  0.0000000 -0.1666667  0.0000000 -1.0000000  0.93333333 -0.2666667   -1
10796  0.8333333 -0.8333333 -1.0000000  0.8333333 -0.06666667 -0.2666667   -1
11372  0.8333333  0.0000000  0.8333333  0.0000000 -0.06666667 -0.2666667   -1
12135 -1.0000000  0.8333333  0.0000000 -1.0000000 -0.13333333 -0.2666667   -1
      RT_Ie      RT_Je cost_mean
65       -1 -0.3333333  3.458941
510      -1 -0.3333333  3.277082
2812     -1 -0.3333333  3.292990
4771     -1 -0.3333333  3.268871
4989     -1 -0.3333333  3.671304
5850     -1 -0.3333333  3.259159
7636     -1 -0.3333333  3.256846
8969     -1 -0.3333333  3.753868
9084     -1 -0.3333333  3.579215
9763     -1 -0.3333333  3.372795
9961     -1 -0.3333333  4.582819
10205    -1 -0.3333333  3.374136
10796    -1 -0.3333333  4.262923
11372    -1 -0.3333333  3.362265
12135    -1 -0.3333333  3.332479

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    T1_I + T1_J + T2_I + T2_J + U1_I

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 78 10

Pruned data dimensions: [1] 15 10

Heteroscedasticity Test p-value: 0.121432406471
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.0326 0.03260   0.176  0.696
I(T1_J^2)    1 0.2295 0.22947   1.240  0.328
I(T2_I^2)    1 0.3113 0.31125   1.682  0.264
I(T2_J^2)    1 0.1332 0.13315   0.719  0.444
I(U1_I^2)    1 0.2699 0.26994   1.458  0.294
T1_I         1 0.0337 0.03371   0.182  0.692
T1_J         1 0.1770 0.17703   0.956  0.383
T2_I         1 0.0025 0.00254   0.014  0.912
T2_J         1 0.1333 0.13329   0.720  0.444
U1_I         1 0.1106 0.11062   0.598  0.483
Residuals    4 0.7404 0.18510               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
65     3.458941
510    3.277082
2812   3.292990
4771   3.268871
4989   3.671304
5850   3.259159
7636   3.256846
8969   3.753868
9084   3.579215
9763   3.372795
9961   4.582819
10205  3.374136
10796  4.262923
11372  3.362265
12135  3.332479

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.6915077062172073, 'T1_J': 0.38345856192815875, 'I(T2_I^2)': 0.26446215632183606, 'U1_I': 0.4826198474686908, 'T2_J': 0.44390748586290024, 'T2_I': 0.9124245227143083, 'I(T2_J^2)': 0.4441238889203432, 'I(U1_I^2)': 0.29370631057614527, 'I(T1_I^2)': 0.6962641924249924, 'I(T1_J^2)': 0.32791804394470897}
Ordered Keys: 
['I(T2_I^2)', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_J', 'T2_J', 'I(T2_J^2)', 'U1_I', 'T1_I', 'I(T1_I^2)', 'T2_I']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 78 10

Pruned data dimensions: [1] 15 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + T1_I + T1_J + T2_I + T2_J + U1_I, 
    tau = 0.05, data = structure(list(T1_I = c(6, 0, 0, 9, 4, 
    11, 11, 5, 0, 7, 0, 6, 11, 11, 0), T1_J = c(5, 6, 5, 11, 
    0, 0, 11, 11, 0, 0, 0, 5, 1, 6, 11), T2_I = c(6, 11, 0, 11, 
    11, 11, 0, 0, 5, 0, 3, 6, 0, 11, 6), T2_J = c(11, 9, 0, 11, 
    0, 0, 0, 11, 11, 5, 5, 0, 11, 6, 0), U1_I = c(0, 29, 0, 0, 
    11, 0, 29, 16, 29, 28, 0, 29, 14, 14, 13), U_I = c(11, 11, 
    11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11), U_J = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_I = c(0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_J = c(2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), cost_mean = c(3.458941, 
    3.277082, 3.29299, 3.268871, 3.671304, 3.259159, 3.256846, 
    3.753868, 3.579215, 3.372795, 4.582819, 3.374136, 4.262923, 
    3.362265, 3.332479)), .Names = c("T1_I", "T1_J", "T2_I", 
    "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
    ), row.names = 64:78, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.344180e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.850000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)    -2.070000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     1.970000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)     1.027000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)    -1.450000e-03 -1.797693e+308  1.797693e+308
T1_I          2.320000e-02 -1.797693e+308  1.797693e+308
T1_J          1.200000e-04 -1.797693e+308  1.797693e+308
T2_I         -3.221000e-02 -1.797693e+308  1.797693e+308
T2_J         -9.336000e-02 -1.797693e+308  1.797693e+308
U1_I          4.651000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 9408
Valid coordinates: 7200/36000
Tested coordinates: 18772
Valid coordinates: 10800/36000
Tested coordinates: 28076
Valid coordinates: 14400/36000
Tested coordinates: 37308
Valid coordinates: 18000/36000
Tested coordinates: 46762
Valid coordinates: 21600/36000
Tested coordinates: 56188
Valid coordinates: 25200/36000
Tested coordinates: 65579
Valid coordinates: 28800/36000
Tested coordinates: 75063
Valid coordinates: 32400/36000
Tested coordinates: 84493
Valid coordinates: 36000/36000
Tested coordinates: 93880
Valid/Tested configurations: 36000/93880
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 249600      9

Pruned data dimensions: [1] 48230     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.6915077062172073, 'T1_J': 0.38345856192815875, 'I(T2_I^2)': 0.26446215632183606, 'U1_I': 0.4826198474686908, 'T2_J': 0.44390748586290024, 'T2_I': 0.9124245227143083, 'I(T2_J^2)': 0.4441238889203432, 'I(U1_I^2)': 0.29370631057614527, 'I(T1_I^2)': 0.6962641924249924, 'I(T1_J^2)': 0.32791804394470897}
Ordered Keys: 
['I(T2_I^2)', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_J', 'T2_J', 'I(T2_J^2)', 'U1_I', 'T1_I', 'I(T1_I^2)', 'T2_I']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.6915077062172073, 'T1_J': 0.38345856192815875, 'I(T2_I^2)': 0.26446215632183606, 'U1_I': 0.4826198474686908, 'T2_J': 0.44390748586290024, 'T2_I': 0.9124245227143083, 'I(T2_J^2)': 0.4441238889203432, 'I(U1_I^2)': 0.29370631057614527, 'I(T1_I^2)': 0.6962641924249924, 'I(T1_J^2)': 0.32791804394470897}
Ordered Keys: 
['I(T2_I^2)', 'I(U1_I^2)', 'I(T1_J^2)', 'T1_J', 'T2_J', 'I(T2_J^2)', 'U1_I', 'T1_I', 'I(T1_I^2)', 'T2_I']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
14774    2    5    9   10    7   0   3    0    4

Best From Design: [11, 11, 0, 0, 29, 11, 0, 0, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.858555
Design Best Point:
[11, 11, 0, 0, 29, 11, 0, 0, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.670332228409
Predicted Best Point:
[2, 5, 9, 10, 7, 0, 3, 0, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 5, 9, 10, 7, 0, 3, 0, 4]
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	6
        Additions: 		221
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			508
        Writes: 		72
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest82.exe __orio_perftest82.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest82.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583676
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 11, 'RT_J': 2, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.670332228409
Slowdown (Predicted Best): 0.943423713429
Budget: 78/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 0, 5, 6, 0, 15, 0, 0, 2]
Final Best Point: 
[0, 0, 5, 6, 0, 15, 0, 0, 2]
Ending DLMT
Best Point: [0, 0, 5, 6, 0, 15, 0, 0, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.54447781918
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.54447781918
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [0, 0, 5, 6, 0, 15, 0, 0, 2]={'T1_I': 1, 'T1_J': 1, 'U_J': 1, 'U_I': 16, 'T2_I': 32, 'T2_J': 64, 'U1_I': 1, 'RT_I': 1, 'RT_J': 4}, cost=3.145759e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-9113.55, runs=82
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 1
 RT_J = 4
 T1_I = 1
 T1_J = 1
 T2_I = 32
 T2_J = 64
 U1_I = 1
 U_I = 16
 U_J = 1
 cost_mean = 3.145759
 points = 82
 speedup = 1.54447781918
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1023
        Multiplications: 	340
        Divisions: 		0
        Logical: 		0
        Reads: 			1802
        Writes: 		208
        Comparisons:		10
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
