
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 86415
Valid coordinates: 3520/17600
Tested coordinates: 171417
Valid coordinates: 5280/17600
Tested coordinates: 255693
Valid coordinates: 7040/17600
Tested coordinates: 344329
Valid coordinates: 8800/17600
Tested coordinates: 427717
Valid coordinates: 10560/17600
Tested coordinates: 514409
Valid coordinates: 12320/17600
Tested coordinates: 599089
Valid coordinates: 14080/17600
Tested coordinates: 684812
Valid coordinates: 15840/17600
Tested coordinates: 765649
Valid coordinates: 17600/17600
Tested coordinates: 848484
Valid/Tested configurations: 17600/848484
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1453     4   10    0    0   12  17   0    2    5
2616    10   11   10    0   19   0   0    0    2
5386     0    0    7    4   16  18   0    0    5
6138     0   11    6   11   27   0  28    2    3
6270     6    1    0    5   29  29   0    0    0
6775     7    5   10   11    1   0  29    0    5
6950     6    3    6    0   26  13   0    2    2
8226     0    6    0    8    0  11   0    0    1
8856     0    3    5    0   29   0  11    0    5
9765     5   10    0    0   11   0  17    0    0
11294   11    1    0   10   28  11   0    5    0
11705   11    0    0    5    8   0  24    3    4
11873    7    0    7   11    6   0  20    4    0
13904    0    0   11    0    1   0   0    2    1
14690   11    4    0   11   21  29   0    1    5
14949    2    5   11   11   13   0   8    5    2
15182   10    7   11    7   28   0  16    2    5
15389   11    3   11    0    9  24   0    1    0
15954    2   10    4    0    0  26   0    5    2
16249    4    4    6    6   13   0   0    3    0
16997    0    7   11    0   16   0  29    5    0
17241    0   11   11   11    0  17   0    3    0

D-Efficiency Approximation: [1] 0.2155266

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		9986
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15347
        Writes: 		1582
        Comparisons:		15
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.955675
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		75
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			187
        Writes: 		46
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580928
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		8787
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			13349
        Writes: 		1380
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.974486
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2292
        Multiplications: 	760
        Divisions: 		0
        Logical: 		0
        Reads: 			3953
        Writes: 		437
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.332462
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		368
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			817
        Writes: 		146
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.275718
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	6
        Additions: 		593
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1336
        Writes: 		150
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581993
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1160
        Multiplications: 	380
        Divisions: 		0
        Logical: 		0
        Reads: 			2087
        Writes: 		264
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.606448
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		430
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			877
        Writes: 		114
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.214804
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		453
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1018
        Writes: 		138
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.069273
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		202
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			455
        Writes: 		66
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580461
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		482
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1087
        Writes: 		164
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.773146
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		4805
        Multiplications: 	1512
        Divisions: 		0
        Logical: 		0
        Reads: 			7675
        Writes: 		794
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.914702
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		4904
        Multiplications: 	1496
        Divisions: 		0
        Logical: 		0
        Reads: 			7577
        Writes: 		780
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.671895
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		150
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			339
        Writes: 		50
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.397762
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		14536
        Multiplications: 	4356
        Divisions: 		0
        Logical: 		0
        Reads: 			22010
        Writes: 		2269
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.755965
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		5915
        Multiplications: 	1848
        Divisions: 		0
        Logical: 		0
        Reads: 			9386
        Writes: 		973
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.685683
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		3016
        Multiplications: 	1000
        Divisions: 		0
        Logical: 		0
        Reads: 			5162
        Writes: 		560
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.989989
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		314
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			714
        Writes: 		118
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.715349
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		3605
        Multiplications: 	1200
        Divisions: 		0
        Logical: 		0
        Reads: 			6159
        Writes: 		660
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580987
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		119
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			290
        Writes: 		59
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.539434
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		13750
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20577
        Writes: 		2088
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.054768
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		284
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			653
        Writes: 		97
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.519148
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1453     4   10    0    0   12  17   0    2    5  3.955675
2616    10   11   10    0   19   0   0    0    2  4.580928
5386     0    0    7    4   16  18   0    0    5  3.974486
6138     0   11    6   11   27   0  28    2    3  3.332462
6270     6    1    0    5   29  29   0    0    0  5.275718
6775     7    5   10   11    1   0  29    0    5  4.581993
6950     6    3    6    0   26  13   0    2    2  3.606448
8226     0    6    0    8    0  11   0    0    1  3.214804
8856     0    3    5    0   29   0  11    0    5  5.069273
9765     5   10    0    0   11   0  17    0    0  4.580461
11294   11    1    0   10   28  11   0    5    0  5.773146
11705   11    0    0    5    8   0  24    3    4  3.914702
11873    7    0    7   11    6   0  20    4    0  3.671895
13904    0    0   11    0    1   0   0    2    1  3.397762
14690   11    4    0   11   21  29   0    1    5  3.755965
14949    2    5   11   11   13   0   8    5    2  4.685683
15182   10    7   11    7   28   0  16    2    5  3.989989
15389   11    3   11    0    9  24   0    1    0  3.715349
15954    2   10    4    0    0  26   0    5    2  4.580987
16249    4    4    6    6   13   0   0    3    0  3.539434
16997    0    7   11    0   16   0  29    5    0  6.054768
17241    0   11   11   11    0  17   0    3    0  3.519148

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1453     4   10    0    0   12  17   0    2    5  3.955675
2616    10   11   10    0   19   0   0    0    2  4.580928
5386     0    0    7    4   16  18   0    0    5  3.974486
6138     0   11    6   11   27   0  28    2    3  3.332462
6270     6    1    0    5   29  29   0    0    0  5.275718
6775     7    5   10   11    1   0  29    0    5  4.581993
6950     6    3    6    0   26  13   0    2    2  3.606448
8226     0    6    0    8    0  11   0    0    1  3.214804
8856     0    3    5    0   29   0  11    0    5  5.069273
9765     5   10    0    0   11   0  17    0    0  4.580461
11294   11    1    0   10   28  11   0    5    0  5.773146
11705   11    0    0    5    8   0  24    3    4  3.914702
11873    7    0    7   11    6   0  20    4    0  3.671895
13904    0    0   11    0    1   0   0    2    1  3.397762
14690   11    4    0   11   21  29   0    1    5  3.755965
14949    2    5   11   11   13   0   8    5    2  4.685683
15182   10    7   11    7   28   0  16    2    5  3.989989
15389   11    3   11    0    9  24   0    1    0  3.715349
15954    2   10    4    0    0  26   0    5    2  4.580987
16249    4    4    6    6   13   0   0    3    0  3.539434
16997    0    7   11    0   16   0  29    5    0  6.054768
17241    0   11   11   11    0  17   0    3    0  3.519148

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie       U_Ie
1453  -0.3333333  0.6666667 -1.0000000 -1.0000000 -0.20000000  0.1333333
2616   0.6666667  0.8333333  0.6666667 -1.0000000  0.26666667 -1.0000000
5386  -1.0000000 -1.0000000  0.1666667 -0.3333333  0.06666667  0.2000000
6138  -1.0000000  0.8333333  0.0000000  0.8333333  0.80000000 -1.0000000
6270   0.0000000 -0.8333333 -1.0000000 -0.1666667  0.93333333  0.9333333
6775   0.1666667 -0.1666667  0.6666667  0.8333333 -0.93333333 -1.0000000
6950   0.0000000 -0.5000000  0.0000000 -1.0000000  0.73333333 -0.1333333
8226  -1.0000000  0.0000000 -1.0000000  0.3333333 -1.00000000 -0.2666667
8856  -1.0000000 -0.5000000 -0.1666667 -1.0000000  0.93333333 -1.0000000
9765  -0.1666667  0.6666667 -1.0000000 -1.0000000 -0.26666667 -1.0000000
11294  0.8333333 -0.8333333 -1.0000000  0.6666667  0.86666667 -0.2666667
11705  0.8333333 -1.0000000 -1.0000000 -0.1666667 -0.46666667 -1.0000000
11873  0.1666667 -1.0000000  0.1666667  0.8333333 -0.60000000 -1.0000000
13904 -1.0000000 -1.0000000  0.8333333 -1.0000000 -0.93333333 -1.0000000
14690  0.8333333 -0.3333333 -1.0000000  0.8333333  0.40000000  0.9333333
14949 -0.6666667 -0.1666667  0.8333333  0.8333333 -0.13333333 -1.0000000
15182  0.6666667  0.1666667  0.8333333  0.1666667  0.86666667 -1.0000000
15389  0.8333333 -0.5000000  0.8333333 -1.0000000 -0.40000000  0.6000000
15954 -0.6666667  0.6666667 -0.3333333 -1.0000000 -1.00000000  0.7333333
16249 -0.3333333 -0.3333333  0.0000000  0.0000000 -0.13333333 -1.0000000
16997 -1.0000000  0.1666667  0.8333333 -1.0000000  0.06666667 -1.0000000
17241 -1.0000000  0.8333333  0.8333333  0.8333333 -1.00000000  0.1333333
             U_Je      RT_Ie      RT_Je cost_mean
1453  -1.00000000 -0.3333333  0.6666667  3.955675
2616  -1.00000000 -1.0000000 -0.3333333  4.580928
5386  -1.00000000 -1.0000000  0.6666667  3.974486
6138   0.86666667 -0.3333333  0.0000000  3.332462
6270  -1.00000000 -1.0000000 -1.0000000  5.275718
6775   0.93333333 -1.0000000  0.6666667  4.581993
6950  -1.00000000 -0.3333333 -0.3333333  3.606448
8226  -1.00000000 -1.0000000 -0.6666667  3.214804
8856  -0.26666667 -1.0000000  0.6666667  5.069273
9765   0.13333333 -1.0000000 -1.0000000  4.580461
11294 -1.00000000  0.6666667 -1.0000000  5.773146
11705  0.60000000  0.0000000  0.3333333  3.914702
11873  0.33333333  0.3333333 -1.0000000  3.671895
13904 -1.00000000 -0.3333333 -0.6666667  3.397762
14690 -1.00000000 -0.6666667  0.6666667  3.755965
14949 -0.46666667  0.6666667 -0.3333333  4.685683
15182  0.06666667 -0.3333333  0.6666667  3.989989
15389 -1.00000000 -0.6666667 -1.0000000  3.715349
15954 -1.00000000  0.6666667 -0.3333333  4.580987
16249 -1.00000000  0.0000000 -1.0000000  3.539434
16997  0.93333333  0.6666667 -1.0000000  6.054768
17241 -1.00000000  0.0000000 -1.0000000  3.519148

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.107305840912
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1  0.059   0.059   0.428 0.5596  
I(T1_J^2)    1  0.043   0.043   0.310 0.6163  
I(T2_I^2)    1  0.000   0.000   0.001 0.9733  
I(T2_J^2)    1  0.372   0.372   2.686 0.1998  
I(U1_I^2)    1  1.517   1.517  10.958 0.0454 *
I(U_I^2)     1  0.000   0.000   0.001 0.9729  
I(U_J^2)     1  0.982   0.982   7.095 0.0761 .
I(RT_I^2)    1  3.653   3.653  26.385 0.0143 *
I(RT_J^2)    1  0.011   0.011   0.078 0.7983  
T1_I         1  0.100   0.100   0.720 0.4585  
T1_J         1  0.080   0.080   0.577 0.5026  
T2_I         1  1.202   1.202   8.682 0.0602 .
T2_J         1  0.193   0.193   1.392 0.3230  
U1_I         1  0.001   0.001   0.010 0.9252  
U_I          1  0.052   0.052   0.379 0.5816  
U_J          1  0.068   0.068   0.492 0.5336  
RT_I         1  3.777   3.777  27.281 0.0137 *
RT_J         1  0.678   0.678   4.899 0.1138  
Residuals    3  0.415   0.138                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1453   3.955675
2616   4.580928
5386   3.974486
6138   3.332462
6270   5.275718
6775   4.581993
6950   3.606448
8226   3.214804
8856   5.069273
9765   4.580461
11294  5.773146
11705  3.914702
11873  3.671895
13904  3.397762
14690  3.755965
14949  4.685683
15182  3.989989
15389  3.715349
15954  4.580987
16249  3.539434
16997  6.054768
17241  3.519148

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.7983047616211896, 'T1_J': 0.5026293140555188, 'T2_J': 0.3230476050570957, 'U_J': 0.5335829014009725, 'U_I': 0.5815971662077826, 'I(T2_I^2)': 0.9733024302871923, 'T2_I': 0.06019258452294068, 'U1_I': 0.925167063954054, 'I(U_I^2)': 0.9729178542837802, 'I(RT_I^2)': 0.014293451871413442, 'I(T2_J^2)': 0.19978774374259328, 'I(U1_I^2)': 0.04538179509838778, 'RT_I': 0.013650125730720053, 'I(T1_I^2)': 0.559593100988313, 'I(T1_J^2)': 0.6162636983583425, 'I(U_J^2)': 0.07610696329957857, 'RT_J': 0.11375265283219774, 'T1_I': 0.4584756425558679}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(U1_I^2)', 'T2_I', 'I(U_J^2)', 'RT_J', 'I(T2_J^2)', 'T2_J', 'T1_I', 'T1_J', 'U_J', 'I(T1_I^2)', 'U_I', 'I(T1_J^2)', 'I(RT_J^2)', 'U1_I', 'I(U_I^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_I^2) + I(U_J^2) + I(RT_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + 
    RT_I + RT_J, tau = 0.05, data = structure(list(T1_I = c(4, 
10, 0, 0, 6, 7, 6, 0, 0, 5, 11, 11, 7, 0, 11, 2, 10, 11, 2, 4, 
0, 0), T1_J = c(10, 11, 0, 11, 1, 5, 3, 6, 3, 10, 1, 0, 0, 0, 
4, 5, 7, 3, 10, 4, 7, 11), T2_I = c(0, 10, 7, 6, 0, 10, 6, 0, 
5, 0, 0, 0, 7, 11, 0, 11, 11, 11, 4, 6, 11, 11), T2_J = c(0, 
0, 4, 11, 5, 11, 0, 8, 0, 0, 10, 5, 11, 0, 11, 11, 7, 0, 0, 6, 
0, 11), U1_I = c(12, 19, 16, 27, 29, 1, 26, 0, 29, 11, 28, 8, 
6, 1, 21, 13, 28, 9, 0, 13, 16, 0), U_I = c(17, 0, 18, 0, 29, 
0, 13, 11, 0, 0, 11, 0, 0, 0, 29, 0, 0, 24, 26, 0, 0, 17), U_J = c(0, 
0, 0, 28, 0, 29, 0, 0, 11, 17, 0, 24, 20, 0, 0, 8, 16, 0, 0, 
0, 29, 0), RT_I = c(2, 0, 0, 2, 0, 0, 2, 0, 0, 0, 5, 3, 4, 2, 
1, 5, 2, 1, 5, 3, 5, 3), RT_J = c(5, 2, 5, 3, 0, 5, 2, 1, 5, 
0, 0, 4, 0, 1, 5, 2, 5, 0, 2, 0, 0, 0), cost_mean = c(3.955675, 
4.580928, 3.974486, 3.332462, 5.275718, 4.581993, 3.606448, 3.214804, 
5.069273, 4.580461, 5.773146, 3.914702, 3.671895, 3.397762, 3.755965, 
4.685683, 3.989989, 3.715349, 4.580987, 3.539434, 6.054768, 3.519148
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("1453", "2616", 
"5386", "6138", "6270", "6775", "6950", "8226", "8856", "9765", 
"11294", "11705", "11873", "13904", "14690", "14949", "15182", 
"15389", "15954", "16249", "16997", "17241"), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.551990e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)    -1.365000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)     2.410000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     1.245000e-02 -1.797693e+308  1.797693e+308
I(T2_J^2)     1.210000e-02 -1.797693e+308  1.797693e+308
I(U1_I^2)     1.720000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)      9.800000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)      2.600000e-03 -1.797693e+308  1.797693e+308
I(RT_I^2)     2.234900e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)     1.287600e-01 -1.797693e+308  1.797693e+308
T1_I          1.358100e-01 -1.797693e+308  1.797693e+308
T1_J         -1.267000e-02 -1.797693e+308  1.797693e+308
T2_I         -1.112600e-01 -1.797693e+308  1.797693e+308
T2_J         -1.658300e-01 -1.797693e+308  1.797693e+308
U1_I         -7.690000e-03 -1.797693e+308  1.797693e+308
U_I          -3.846000e-02 -1.797693e+308  1.797693e+308
U_J          -7.996000e-02 -1.797693e+308  1.797693e+308
RT_I         -9.164400e-01 -1.797693e+308  1.797693e+308
RT_J         -6.203900e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 249281
Valid coordinates: 10560/52800
Tested coordinates: 503669
Valid coordinates: 15840/52800
Tested coordinates: 757385
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1008079
Valid coordinates: 26400/52800
Tested coordinates: 1266432
Valid coordinates: 31680/52800
Tested coordinates: 1514338
Valid coordinates: 36960/52800
Tested coordinates: 1766691
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2022791
Valid coordinates: 47520/52800
Tested coordinates: 2277560
Valid coordinates: 52800/52800
Tested coordinates: 2538721
Valid/Tested configurations: 52800/2538721
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7983047616211896, 'T1_J': 0.5026293140555188, 'T2_J': 0.3230476050570957, 'U_J': 0.5335829014009725, 'U_I': 0.5815971662077826, 'I(T2_I^2)': 0.9733024302871923, 'T2_I': 0.06019258452294068, 'U1_I': 0.925167063954054, 'I(U_I^2)': 0.9729178542837802, 'I(RT_I^2)': 0.014293451871413442, 'I(T2_J^2)': 0.19978774374259328, 'I(U1_I^2)': 0.04538179509838778, 'RT_I': 0.013650125730720053, 'I(T1_I^2)': 0.559593100988313, 'I(T1_J^2)': 0.6162636983583425, 'I(U_J^2)': 0.07610696329957857, 'RT_J': 0.11375265283219774, 'T1_I': 0.4584756425558679}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(U1_I^2)', 'T2_I', 'I(U_J^2)', 'RT_J', 'I(T2_J^2)', 'T2_J', 'T1_I', 'T1_J', 'U_J', 'I(T1_I^2)', 'U_I', 'I(T1_J^2)', 'I(RT_J^2)', 'U1_I', 'I(U_I^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.7983047616211896, 'T1_J': 0.5026293140555188, 'T2_J': 0.3230476050570957, 'U_J': 0.5335829014009725, 'U_I': 0.5815971662077826, 'I(T2_I^2)': 0.9733024302871923, 'T2_I': 0.06019258452294068, 'U1_I': 0.925167063954054, 'I(U_I^2)': 0.9729178542837802, 'I(RT_I^2)': 0.014293451871413442, 'I(T2_J^2)': 0.19978774374259328, 'I(U1_I^2)': 0.04538179509838778, 'RT_I': 0.013650125730720053, 'I(T1_I^2)': 0.559593100988313, 'I(T1_J^2)': 0.6162636983583425, 'I(U_J^2)': 0.07610696329957857, 'RT_J': 0.11375265283219774, 'T1_I': 0.4584756425558679}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'I(U1_I^2)', 'T2_I', 'I(U_J^2)', 'RT_J', 'I(T2_J^2)', 'T2_J', 'T1_I', 'T1_J', 'U_J', 'I(T1_I^2)', 'U_I', 'I(T1_J^2)', 'I(RT_J^2)', 'U1_I', 'I(U_I^2)', 'I(T2_I^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
24506    0    3    5    6    2   0  15    2    2

Best From Design: [0, 6, 0, 8, 0, 11, 0, 0, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.771249
Baseline Point:
4.771249
Design Best Point:
[0, 6, 0, 8, 0, 11, 0, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.673786675145
Predicted Best Point:
[0, 3, 5, 6, 2, 0, 15, 2, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 3, 5, 6, 2, 0, 15, 2, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		1253
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2217
        Writes: 		246
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.669845
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.673786675145
Slowdown (Predicted Best): 0.769158138676
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.214804
Current Best Point: 
[0, 6, 0, 8, 0, 11, 0, 0, 1]
Step 1
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 86358
Valid coordinates: 3520/17600
Tested coordinates: 168546
Valid coordinates: 5280/17600
Tested coordinates: 257882
Valid coordinates: 7040/17600
Tested coordinates: 342070
Valid coordinates: 8800/17600
Tested coordinates: 426661
Valid coordinates: 10560/17600
Tested coordinates: 507795
Valid coordinates: 12320/17600
Tested coordinates: 591233
Valid coordinates: 14080/17600
Tested coordinates: 674600
Valid coordinates: 15840/17600
Tested coordinates: 759746
Valid coordinates: 17600/17600
Tested coordinates: 841190
Valid/Tested configurations: 17600/841190
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 88000     9

Pruned data dimensions: [1] 88000     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 88000     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
4319     3   11    0   11   16   0   0    3    2
8052    11    0    0   11    0   0  28    5    2
10329    5    0    7    0   27   0  29    1    0
13402    0    0    7   11   19  12   0    0    3
14690   11    4    0   11   21  29   0    1    5
17241    0   11   11   11    0  17   0    3    0
17665   11    0    0    3    3   2   0    0    0
21087   11   11   11    0   23   0  10    5    2
26648   11    0   11    7   29  11   0    3    2
27933    6    6    6    0   11  16   0    3    0
28469    4    0   11   11    8   0  11    0    5
30894    0    1    0    0   29   0  19    2    0
33604    6   10    6   11   28  29   0    0    2
36426    0    0    6    3   10  29   0    3    4
49855    6    0   10    6   14  29   0    5    0
56162    3   10    0    0   29  21   0    0    5
62597    1    6   11    0    0   0   0    0    2
63236    7    7    7    7    1   0  12    1    5
72761    4    6    0    6   21   0  29    5    2
79677    1    4    6   11   29   0   1    5    0
82538    0    6   11    7   18   0  25    0    0
83048   11   11   11    0   15   0  29    0    5

D-Efficiency Approximation: [1] 0.2283163

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		540
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1009
        Writes: 		132
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.329868
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		14928
        Multiplications: 	4488
        Divisions: 		0
        Logical: 		0
        Reads: 			22530
        Writes: 		2271
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.44216
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1022
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			1984
        Writes: 		237
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.562687
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1608
        Multiplications: 	504
        Divisions: 		0
        Logical: 		0
        Reads: 			2663
        Writes: 		309
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.36861
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		66
        Multiplications: 	16
        Divisions: 		0
        Logical: 		0
        Reads: 			157
        Writes: 		35
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.515707
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		6820
        Multiplications: 	2112
        Divisions: 		0
        Logical: 		0
        Reads: 			10705
        Writes: 		1109
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.606797
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1281
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2289
        Writes: 		285
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.347434
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		290
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			662
        Writes: 		108
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.517713
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		435
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			983
        Writes: 		119
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581493
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1286
        Multiplications: 	420
        Divisions: 		0
        Logical: 		0
        Reads: 			2235
        Writes: 		263
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.08493
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1916
        Multiplications: 	620
        Divisions: 		0
        Logical: 		0
        Reads: 			3309
        Writes: 		397
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.416547
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		8732
        Multiplications: 	2652
        Divisions: 		0
        Logical: 		0
        Reads: 			13447
        Writes: 		1400
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.678366
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		642
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1441
        Writes: 		200
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.637084
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		10159
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15361
        Writes: 		1594
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582791
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		54
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			147
        Writes: 		26
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582402
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1488
        Multiplications: 	552
        Divisions: 		0
        Logical: 		0
        Reads: 			2861
        Writes: 		307
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.122183
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		15406
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23241
        Writes: 		2361
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583964
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		1116
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2144
        Writes: 		259
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.785861
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		284
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			636
        Writes: 		91
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584798
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		601
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1350
        Writes: 		160
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582708
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
4319     3   11    0   11   16   0   0    3    2  3.329868
8052    11    0    0   11    0   0  28    5    2  6.442160
10329    5    0    7    0   27   0  29    1    0  3.562687
13402    0    0    7   11   19  12   0    0    3  3.368610
14690   11    4    0   11   21  29   0    1    5  3.755965
17241    0   11   11   11    0  17   0    3    0  3.519148
17665   11    0    0    3    3   2   0    0    0  3.515707
21087   11   11   11    0   23   0  10    5    2  6.606797
26648   11    0   11    7   29  11   0    3    2  3.347434
27933    6    6    6    0   11  16   0    3    0  3.517713
28469    4    0   11   11    8   0  11    0    5  4.581493
30894    0    1    0    0   29   0  19    2    0  4.084930
33604    6   10    6   11   28  29   0    0    2  6.416547
36426    0    0    6    3   10  29   0    3    4  3.678366
49855    6    0   10    6   14  29   0    5    0  5.637084
56162    3   10    0    0   29  21   0    0    5  4.582791
62597    1    6   11    0    0   0   0    0    2  4.582402
63236    7    7    7    7    1   0  12    1    5  4.122183
72761    4    6    0    6   21   0  29    5    2  4.583964
79677    1    4    6   11   29   0   1    5    0  4.785861
82538    0    6   11    7   18   0  25    0    0  4.584798
83048   11   11   11    0   15   0  29    0    5  4.582708

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
4319     3   11    0   11   16   0   0    3    2  3.329868
8052    11    0    0   11    0   0  28    5    2  6.442160
10329    5    0    7    0   27   0  29    1    0  3.562687
13402    0    0    7   11   19  12   0    0    3  3.368610
14690   11    4    0   11   21  29   0    1    5  3.755965
17241    0   11   11   11    0  17   0    3    0  3.519148
17665   11    0    0    3    3   2   0    0    0  3.515707
21087   11   11   11    0   23   0  10    5    2  6.606797
26648   11    0   11    7   29  11   0    3    2  3.347434
27933    6    6    6    0   11  16   0    3    0  3.517713
28469    4    0   11   11    8   0  11    0    5  4.581493
30894    0    1    0    0   29   0  19    2    0  4.084930
33604    6   10    6   11   28  29   0    0    2  6.416547
36426    0    0    6    3   10  29   0    3    4  3.678366
49855    6    0   10    6   14  29   0    5    0  5.637084
56162    3   10    0    0   29  21   0    0    5  4.582791
62597    1    6   11    0    0   0   0    0    2  4.582402
63236    7    7    7    7    1   0  12    1    5  4.122183
72761    4    6    0    6   21   0  29    5    2  4.583964
79677    1    4    6   11   29   0   1    5    0  4.785861
82538    0    6   11    7   18   0  25    0    0  4.584798
83048   11   11   11    0   15   0  29    0    5  4.582708

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
4319  -0.5000000  0.8333333 -1.0000000  0.8333333  0.06666667 -1.00000000
8052   0.8333333 -1.0000000 -1.0000000  0.8333333 -1.00000000 -1.00000000
10329 -0.1666667 -1.0000000  0.1666667 -1.0000000  0.80000000 -1.00000000
13402 -1.0000000 -1.0000000  0.1666667  0.8333333  0.26666667 -0.20000000
14690  0.8333333 -0.3333333 -1.0000000  0.8333333  0.40000000  0.93333333
17241 -1.0000000  0.8333333  0.8333333  0.8333333 -1.00000000  0.13333333
17665  0.8333333 -1.0000000 -1.0000000 -0.5000000 -0.80000000 -0.86666667
21087  0.8333333  0.8333333  0.8333333 -1.0000000  0.53333333 -1.00000000
26648  0.8333333 -1.0000000  0.8333333  0.1666667  0.93333333 -0.26666667
27933  0.0000000  0.0000000  0.0000000 -1.0000000 -0.26666667  0.06666667
28469 -0.3333333 -1.0000000  0.8333333  0.8333333 -0.46666667 -1.00000000
30894 -1.0000000 -0.8333333 -1.0000000 -1.0000000  0.93333333 -1.00000000
33604  0.0000000  0.6666667  0.0000000  0.8333333  0.86666667  0.93333333
36426 -1.0000000 -1.0000000  0.0000000 -0.5000000 -0.33333333  0.93333333
49855  0.0000000 -1.0000000  0.6666667  0.0000000 -0.06666667  0.93333333
56162 -0.5000000  0.6666667 -1.0000000 -1.0000000  0.93333333  0.40000000
62597 -0.8333333  0.0000000  0.8333333 -1.0000000 -1.00000000 -1.00000000
63236  0.1666667  0.1666667  0.1666667  0.1666667 -0.93333333 -1.00000000
72761 -0.3333333  0.0000000 -1.0000000  0.0000000  0.40000000 -1.00000000
79677 -0.8333333 -0.3333333  0.0000000  0.8333333  0.93333333 -1.00000000
82538 -1.0000000  0.0000000  0.8333333  0.1666667  0.20000000 -1.00000000
83048  0.8333333  0.8333333  0.8333333 -1.0000000  0.00000000 -1.00000000
            U_Je      RT_Ie      RT_Je cost_mean
4319  -1.0000000  0.0000000 -0.3333333  3.329868
8052   0.8666667  0.6666667 -0.3333333  6.442160
10329  0.9333333 -0.6666667 -1.0000000  3.562687
13402 -1.0000000 -1.0000000  0.0000000  3.368610
14690 -1.0000000 -0.6666667  0.6666667  3.755965
17241 -1.0000000  0.0000000 -1.0000000  3.519148
17665 -1.0000000 -1.0000000 -1.0000000  3.515707
21087 -0.3333333  0.6666667 -0.3333333  6.606797
26648 -1.0000000  0.0000000 -0.3333333  3.347434
27933 -1.0000000  0.0000000 -1.0000000  3.517713
28469 -0.2666667 -1.0000000  0.6666667  4.581493
30894  0.2666667 -0.3333333 -1.0000000  4.084930
33604 -1.0000000 -1.0000000 -0.3333333  6.416547
36426 -1.0000000  0.0000000  0.3333333  3.678366
49855 -1.0000000  0.6666667 -1.0000000  5.637084
56162 -1.0000000 -1.0000000  0.6666667  4.582791
62597 -1.0000000 -1.0000000 -0.3333333  4.582402
63236 -0.2000000 -0.6666667  0.6666667  4.122183
72761  0.9333333  0.6666667 -0.3333333  4.583964
79677 -0.9333333  0.6666667 -1.0000000  4.785861
82538  0.6666667 -1.0000000 -1.0000000  4.584798
83048  0.9333333 -1.0000000  0.6666667  4.582708

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Heteroscedasticity Test p-value: 0.00307321994417
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1     4   10    0    0   12  17   0    2    5  3.955675
2    10   11   10    0   19   0   0    0    2  4.580928
3     0    0    7    4   16  18   0    0    5  3.974486
4     0   11    6   11   27   0  28    2    3  3.332462
5     6    1    0    5   29  29   0    0    0  5.275718
6     7    5   10   11    1   0  29    0    5  4.581993
7     6    3    6    0   26  13   0    2    2  3.606448
8     0    6    0    8    0  11   0    0    1  3.214804
9     0    3    5    0   29   0  11    0    5  5.069273
10    5   10    0    0   11   0  17    0    0  4.580461
11   11    1    0   10   28  11   0    5    0  5.773146
12   11    0    0    5    8   0  24    3    4  3.914702
13    7    0    7   11    6   0  20    4    0  3.671895
14    0    0   11    0    1   0   0    2    1  3.397762
15   11    4    0   11   21  29   0    1    5  3.755965
16    2    5   11   11   13   0   8    5    2  4.685683
17   10    7   11    7   28   0  16    2    5  3.989989
18   11    3   11    0    9  24   0    1    0  3.715349
19    2   10    4    0    0  26   0    5    2  4.580987
20    4    4    6    6   13   0   0    3    0  3.539434
21    0    7   11    0   16   0  29    5    0  6.054768
22    0   11   11   11    0  17   0    3    0  3.519148
23    3   11    0   11   16   0   0    3    2  3.329868
24   11    0    0   11    0   0  28    5    2  6.442160
25    5    0    7    0   27   0  29    1    0  3.562687
26    0    0    7   11   19  12   0    0    3  3.368610
27   11    4    0   11   21  29   0    1    5  3.755965
28    0   11   11   11    0  17   0    3    0  3.519148
29   11    0    0    3    3   2   0    0    0  3.515707
30   11   11   11    0   23   0  10    5    2  6.606797
31   11    0   11    7   29  11   0    3    2  3.347434
32    6    6    6    0   11  16   0    3    0  3.517713
33    4    0   11   11    8   0  11    0    5  4.581493
34    0    1    0    0   29   0  19    2    0  4.084930
35    6   10    6   11   28  29   0    0    2  6.416547
36    0    0    6    3   10  29   0    3    4  3.678366
37    6    0   10    6   14  29   0    5    0  5.637084
38    3   10    0    0   29  21   0    0    5  4.582791
39    1    6   11    0    0   0   0    0    2  4.582402
40    7    7    7    7    1   0  12    1    5  4.122183
41    4    6    0    6   21   0  29    5    2  4.583964
42    1    4    6   11   29   0   1    5    0  4.785861
43    0    6   11    7   18   0  25    0    0  4.584798
44   11   11   11    0   15   0  29    0    5  4.582708

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.0000545 0.0000545   2.028 0.166811    
I(T1_J^2)    1 0.0000235 0.0000235   0.876 0.358369    
I(T2_I^2)    1 0.0000162 0.0000162   0.604 0.444433    
I(T2_J^2)    1 0.0000295 0.0000295   1.100 0.304403    
I(U1_I^2)    1 0.0001449 0.0001449   5.394 0.028638 *  
I(U_I^2)     1 0.0000209 0.0000209   0.780 0.385652    
I(U_J^2)     1 0.0002194 0.0002194   8.168 0.008471 ** 
I(RT_I^2)    1 0.0005454 0.0005454  20.301 0.000134 ***
I(RT_J^2)    1 0.0001262 0.0001262   4.699 0.039909 *  
T1_I         1 0.0001087 0.0001087   4.048 0.055125 .  
T1_J         1 0.0000267 0.0000267   0.994 0.328249    
T2_I         1 0.0000869 0.0000869   3.236 0.084136 .  
T2_J         1 0.0000423 0.0000423   1.575 0.221086    
U1_I         1 0.0000245 0.0000245   0.911 0.348877    
U_I          1 0.0002518 0.0002518   9.372 0.005209 ** 
U_J          1 0.0000474 0.0000474   1.763 0.196290    
RT_I         1 0.0010162 0.0010162  37.829 1.98e-06 ***
RT_J         1 0.0000183 0.0000183   0.680 0.417268    
Residuals   25 0.0006716 0.0000269                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
4319   3.329868
8052   6.442160
10329  3.562687
13402  3.368610
14690  3.755965
17241  3.519148
17665  3.515707
21087  6.606797
26648  3.347434
27933  3.517713
28469  4.581493
30894  4.084930
33604  6.416547
36426  3.678366
49855  5.637084
56162  4.582791
62597  4.582402
63236  4.122183
72761  4.583964
79677  4.785861
82538  4.584798
83048  4.582708

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.03990932830354725, 'T1_J': 0.32824943093725323, 'T2_J': 0.22108610051738478, 'U_J': 0.19629020255993898, 'U_I': 0.005208789622405409, 'I(T2_I^2)': 0.444432931310339, 'T2_I': 0.08413644528309291, 'U1_I': 0.34887681170341556, 'I(U_I^2)': 0.3856522553593008, 'I(RT_I^2)': 0.0001341956367223267, 'I(T2_J^2)': 0.30440281770063055, 'I(U1_I^2)': 0.028638017038183684, 'RT_I': 1.976806179044846e-06, 'I(T1_I^2)': 0.16681147810941752, 'I(T1_J^2)': 0.35836924625653865, 'I(U_J^2)': 0.008470556136752225, 'RT_J': 0.41726808965526496, 'T1_I': 0.05512537264462907}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'U_I', 'I(U_J^2)', 'I(U1_I^2)', 'I(RT_J^2)', 'T1_I', 'T2_I', 'I(T1_I^2)', 'U_J', 'T2_J', 'I(T2_J^2)', 'T1_J', 'U1_I', 'I(T1_J^2)', 'I(U_I^2)', 'RT_J', 'I(T2_I^2)']
Variables within threshold: ['RT_I', 'I(RT_I^2)', 'U_I', 'I(U_J^2)']
Predicting Best Values for: ['RT_I', 'I(RT_I^2)', 'U_I', 'I(U_J^2)']
Using Model: cost_mean ~ RT_I + I(RT_I^2) + U_I + I(U_J^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 44 10

Pruned data dimensions: [1] 44 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_I^2) + U_I + I(U_J^2), tau = 0.05, 
    data = structure(list(T1_I = c(4, 10, 0, 0, 6, 7, 6, 0, 0, 
    5, 11, 11, 7, 0, 11, 2, 10, 11, 2, 4, 0, 0, 3, 11, 5, 0, 
    11, 0, 11, 11, 11, 6, 4, 0, 6, 0, 6, 3, 1, 7, 4, 1, 0, 11
    ), T1_J = c(10, 11, 0, 11, 1, 5, 3, 6, 3, 10, 1, 0, 0, 0, 
    4, 5, 7, 3, 10, 4, 7, 11, 11, 0, 0, 0, 4, 11, 0, 11, 0, 6, 
    0, 1, 10, 0, 0, 10, 6, 7, 6, 4, 6, 11), T2_I = c(0, 10, 7, 
    6, 0, 10, 6, 0, 5, 0, 0, 0, 7, 11, 0, 11, 11, 11, 4, 6, 11, 
    11, 0, 0, 7, 7, 0, 11, 0, 11, 11, 6, 11, 0, 6, 6, 10, 0, 
    11, 7, 0, 6, 11, 11), T2_J = c(0, 0, 4, 11, 5, 11, 0, 8, 
    0, 0, 10, 5, 11, 0, 11, 11, 7, 0, 0, 6, 0, 11, 11, 11, 0, 
    11, 11, 11, 3, 0, 7, 0, 11, 0, 11, 3, 6, 0, 0, 7, 6, 11, 
    7, 0), U1_I = c(12, 19, 16, 27, 29, 1, 26, 0, 29, 11, 28, 
    8, 6, 1, 21, 13, 28, 9, 0, 13, 16, 0, 16, 0, 27, 19, 21, 
    0, 3, 23, 29, 11, 8, 29, 28, 10, 14, 29, 0, 1, 21, 29, 18, 
    15), U_I = c(17, 0, 18, 0, 29, 0, 13, 11, 0, 0, 11, 0, 0, 
    0, 29, 0, 0, 24, 26, 0, 0, 17, 0, 0, 0, 12, 29, 17, 2, 0, 
    11, 16, 0, 0, 29, 29, 29, 21, 0, 0, 0, 0, 0, 0), U_J = c(0, 
    0, 0, 28, 0, 29, 0, 0, 11, 17, 0, 24, 20, 0, 0, 8, 16, 0, 
    0, 0, 29, 0, 0, 28, 29, 0, 0, 0, 0, 10, 0, 0, 11, 19, 0, 
    0, 0, 0, 0, 12, 29, 1, 25, 29), RT_I = c(2, 0, 0, 2, 0, 0, 
    2, 0, 0, 0, 5, 3, 4, 2, 1, 5, 2, 1, 5, 3, 5, 3, 3, 5, 1, 
    0, 1, 3, 0, 5, 3, 3, 0, 2, 0, 3, 5, 0, 0, 1, 5, 5, 0, 0), 
        RT_J = c(5, 2, 5, 3, 0, 5, 2, 1, 5, 0, 0, 4, 0, 1, 5, 
        2, 5, 0, 2, 0, 0, 0, 2, 2, 0, 3, 5, 0, 0, 2, 2, 0, 5, 
        0, 2, 4, 0, 5, 2, 5, 2, 0, 0, 5), cost_mean = c(3.955675, 
        4.580928, 3.974486, 3.332462, 5.275718, 4.581993, 3.606448, 
        3.214804, 5.069273, 4.580461, 5.773146, 3.914702, 3.671895, 
        3.397762, 3.755965, 4.685683, 3.989989, 3.715349, 4.580987, 
        3.539434, 6.054768, 3.519148, 3.329868, 6.44216, 3.562687, 
        3.36861, 3.755965, 3.519148, 3.515707, 6.606797, 3.347434, 
        3.517713, 4.581493, 4.08493, 6.416547, 3.678366, 5.637084, 
        4.582791, 4.582402, 4.122183, 4.583964, 4.785861, 4.584798, 
        4.582708)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", 
    "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(NA, 
    -44L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   2.962190e+00 -1.797693e+308   3.437000e+00
RT_I         -2.646900e-01 -1.797693e+308  -7.025000e-02
I(RT_I^2)     9.381000e-02  -1.205100e-01  1.797693e+308
U_I           2.297000e-02 -1.797693e+308   5.607000e-02
I(U_J^2)      6.700000e-04 -1.797693e+308   1.650000e-03

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 247239
Valid coordinates: 10560/52800
Tested coordinates: 496945
Valid coordinates: 15840/52800
Tested coordinates: 746555
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1000784
Valid coordinates: 26400/52800
Tested coordinates: 1256161
Valid coordinates: 31680/52800
Tested coordinates: 1500640
Valid coordinates: 36960/52800
Tested coordinates: 1751959
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2007519
Valid coordinates: 47520/52800
Tested coordinates: 2257738
Valid coordinates: 52800/52800
Tested coordinates: 2517617
Valid/Tested configurations: 52800/2517617
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 140800      9

Pruned data dimensions: [1] 140800      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.03990932830354725, 'T1_J': 0.32824943093725323, 'T2_J': 0.22108610051738478, 'U_J': 0.19629020255993898, 'U_I': 0.005208789622405409, 'I(T2_I^2)': 0.444432931310339, 'T2_I': 0.08413644528309291, 'U1_I': 0.34887681170341556, 'I(U_I^2)': 0.3856522553593008, 'I(RT_I^2)': 0.0001341956367223267, 'I(T2_J^2)': 0.30440281770063055, 'I(U1_I^2)': 0.028638017038183684, 'RT_I': 1.976806179044846e-06, 'I(T1_I^2)': 0.16681147810941752, 'I(T1_J^2)': 0.35836924625653865, 'I(U_J^2)': 0.008470556136752225, 'RT_J': 0.41726808965526496, 'T1_I': 0.05512537264462907}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'U_I', 'I(U_J^2)', 'I(U1_I^2)', 'I(RT_J^2)', 'T1_I', 'T2_I', 'I(T1_I^2)', 'U_J', 'T2_J', 'I(T2_J^2)', 'T1_J', 'U1_I', 'I(T1_J^2)', 'I(U_I^2)', 'RT_J', 'I(T2_I^2)']
Variables within threshold: ['RT_I', 'U_I', 'U_J']
Unique Variables: ['RT_I', 'U_I', 'U_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.03990932830354725, 'T1_J': 0.32824943093725323, 'T2_J': 0.22108610051738478, 'U_J': 0.19629020255993898, 'U_I': 0.005208789622405409, 'I(T2_I^2)': 0.444432931310339, 'T2_I': 0.08413644528309291, 'U1_I': 0.34887681170341556, 'I(U_I^2)': 0.3856522553593008, 'I(RT_I^2)': 0.0001341956367223267, 'I(T2_J^2)': 0.30440281770063055, 'I(U1_I^2)': 0.028638017038183684, 'RT_I': 1.976806179044846e-06, 'I(T1_I^2)': 0.16681147810941752, 'I(T1_J^2)': 0.35836924625653865, 'I(U_J^2)': 0.008470556136752225, 'RT_J': 0.41726808965526496, 'T1_I': 0.05512537264462907}
Ordered Keys: 
['RT_I', 'I(RT_I^2)', 'U_I', 'I(U_J^2)', 'I(U1_I^2)', 'I(RT_J^2)', 'T1_I', 'T2_I', 'I(T1_I^2)', 'U_J', 'T2_J', 'I(T2_J^2)', 'T1_J', 'U1_I', 'I(T1_J^2)', 'I(U_I^2)', 'RT_J', 'I(T2_I^2)']
Variables within threshold: ['RT_I', 'U_I', 'U_J']
Best Predicted:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
18    8    7   11    0   29   0   0    1    2

Best From Design: [3, 11, 0, 11, 16, 0, 0, 3, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.771249
Design Best Point:
[3, 11, 0, 11, 16, 0, 0, 3, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.69790279233
Predicted Best Point:
[8, 7, 11, 0, 29, 0, 0, 1, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[8, 7, 11, 0, 29, 0, 0, 1, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		196
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			442
        Writes: 		87
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.459436
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.69790279233
Slowdown (Predicted Best): 0.725058784398
Budget: 44/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 6, 0, 8, 0, 11, 0, 0, 1]
Step 2
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 3045
Valid coordinates: 2400/12000
Tested coordinates: 6203
Valid coordinates: 3600/12000
Tested coordinates: 9480
Valid coordinates: 4800/12000
Tested coordinates: 12563
Valid coordinates: 6000/12000
Tested coordinates: 15882
Valid coordinates: 7200/12000
Tested coordinates: 19095
Valid coordinates: 8400/12000
Tested coordinates: 22203
Valid coordinates: 9600/12000
Tested coordinates: 25398
Valid coordinates: 10800/12000
Tested coordinates: 28508
Valid coordinates: 12000/12000
Tested coordinates: 31494
Valid/Tested configurations: 12000/31494
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 152800      9

Pruned data dimensions: [1] 12471     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Clean Info:
One-Level Factors: ['U_I', 'U_J', 'RT_I']
Two-Level Factors: ['U_I', 'U_J', 'RT_I']
Three-Level Factors: ['U_I', 'U_J', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J']
Clean 2 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 12471     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
171     11    4   11   11    0   0   0    1    3
909      7    5    8    6   15   0   0    1    0
2385     0    0    5   11   18   0   0    1    5
4500     5    4    6    0    3   0   0    1    3
5317     5    0   11   10   28   0   0    1    0
5752    11   11    0   11    4   0   0    1    0
6664     0   11   11    0   14   0   0    1    3
7322     4   10    5   11   29   0   0    1    2
9466     0    7   11    8    3   0   0    1    5
9505    11    0    0    5   17   0   0    1    3
9734    11   10   11    0   29   0   0    1    5
10161    0    0    6    5    0   0   0    1    0
10889    0    5    0    8   28   0   0    1    3
11729    0    4    0    0   28   0   0    1    0
12115    6    0    0    2    0   0   0    1    5

D-Efficiency Approximation: [1] 0.2635769

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		293
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			622
        Writes: 		81
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.526806
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		67
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			174
        Writes: 		49
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.559317
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1078
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2093
        Writes: 		242
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.944713
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		298
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			630
        Writes: 		85
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.654308
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	5
        Additions: 		74
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			186
        Writes: 		58
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.70519
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		47
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			131
        Writes: 		32
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.591557
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		306
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			645
        Writes: 		94
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.355894
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		202
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			456
        Writes: 		91
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.415166
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1069
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2077
        Writes: 		231
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.231493
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		309
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			651
        Writes: 		97
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.452874
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1089
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2115
        Writes: 		253
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.382814
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		38
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			114
        Writes: 		25
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.55899
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		321
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			679
        Writes: 		110
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.687787
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		66
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			171
        Writes: 		54
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.706676
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		1055
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2048
        Writes: 		221
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.460029
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
171     11    4   11   11    0   0   0    1    3  3.526806
909      7    5    8    6   15   0   0    1    0  3.559317
2385     0    0    5   11   18   0   0    1    5  3.944713
4500     5    4    6    0    3   0   0    1    3  3.654308
5317     5    0   11   10   28   0   0    1    0  3.705190
5752    11   11    0   11    4   0   0    1    0  3.591557
6664     0   11   11    0   14   0   0    1    3  3.355894
7322     4   10    5   11   29   0   0    1    2  3.415166
9466     0    7   11    8    3   0   0    1    5  4.231493
9505    11    0    0    5   17   0   0    1    3  3.452874
9734    11   10   11    0   29   0   0    1    5  4.382814
10161    0    0    6    5    0   0   0    1    0  3.558990
10889    0    5    0    8   28   0   0    1    3  3.687787
11729    0    4    0    0   28   0   0    1    0  3.706676
12115    6    0    0    2    0   0   0    1    5  3.460029

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
171     11    4   11   11    0   0   0    1    3  3.526806
909      7    5    8    6   15   0   0    1    0  3.559317
2385     0    0    5   11   18   0   0    1    5  3.944713
4500     5    4    6    0    3   0   0    1    3  3.654308
5317     5    0   11   10   28   0   0    1    0  3.705190
5752    11   11    0   11    4   0   0    1    0  3.591557
6664     0   11   11    0   14   0   0    1    3  3.355894
7322     4   10    5   11   29   0   0    1    2  3.415166
9466     0    7   11    8    3   0   0    1    5  4.231493
9505    11    0    0    5   17   0   0    1    3  3.452874
9734    11   10   11    0   29   0   0    1    5  4.382814
10161    0    0    6    5    0   0   0    1    0  3.558990
10889    0    5    0    8   28   0   0    1    3  3.687787
11729    0    4    0    0   28   0   0    1    0  3.706676
12115    6    0    0    2    0   0   0    1    5  3.460029

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie U_Ie U_Je
171    0.8333333 -0.3333333  0.8333333  0.8333333 -1.00000000   -1   -1
909    0.1666667 -0.1666667  0.3333333  0.0000000  0.00000000   -1   -1
2385  -1.0000000 -1.0000000 -0.1666667  0.8333333  0.20000000   -1   -1
4500  -0.1666667 -0.3333333  0.0000000 -1.0000000 -0.80000000   -1   -1
5317  -0.1666667 -1.0000000  0.8333333  0.6666667  0.86666667   -1   -1
5752   0.8333333  0.8333333 -1.0000000  0.8333333 -0.73333333   -1   -1
6664  -1.0000000  0.8333333  0.8333333 -1.0000000 -0.06666667   -1   -1
7322  -0.3333333  0.6666667 -0.1666667  0.8333333  0.93333333   -1   -1
9466  -1.0000000  0.1666667  0.8333333  0.3333333 -0.80000000   -1   -1
9505   0.8333333 -1.0000000 -1.0000000 -0.1666667  0.13333333   -1   -1
9734   0.8333333  0.6666667  0.8333333 -1.0000000  0.93333333   -1   -1
10161 -1.0000000 -1.0000000  0.0000000 -0.1666667 -1.00000000   -1   -1
10889 -1.0000000 -0.1666667 -1.0000000  0.3333333  0.86666667   -1   -1
11729 -1.0000000 -0.3333333 -1.0000000 -1.0000000  0.86666667   -1   -1
12115  0.0000000 -1.0000000 -1.0000000 -0.6666667 -1.00000000   -1   -1
           RT_Ie      RT_Je cost_mean
171   -0.6666667  0.0000000  3.526806
909   -0.6666667 -1.0000000  3.559317
2385  -0.6666667  0.6666667  3.944713
4500  -0.6666667  0.0000000  3.654308
5317  -0.6666667 -1.0000000  3.705190
5752  -0.6666667 -1.0000000  3.591557
6664  -0.6666667  0.0000000  3.355894
7322  -0.6666667 -0.3333333  3.415166
9466  -0.6666667  0.6666667  4.231493
9505  -0.6666667  0.0000000  3.452874
9734  -0.6666667  0.6666667  4.382814
10161 -0.6666667 -1.0000000  3.558990
10889 -0.6666667  0.0000000  3.687787
11729 -0.6666667 -1.0000000  3.706676
12115 -0.6666667  0.6666667  3.460029

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Heteroscedasticity Test p-value: 0.418437932439
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.0021  0.0021   0.024  0.890
I(T1_J^2)    1 0.0055  0.0055   0.063  0.825
I(T2_I^2)    1 0.1646  0.1646   1.899  0.302
I(T2_J^2)    1 0.0027  0.0027   0.031  0.877
I(U1_I^2)    1 0.0736  0.0736   0.850  0.454
I(RT_J^2)    1 0.3747  0.3747   4.324  0.173
T1_I         1 0.0597  0.0597   0.688  0.494
T1_J         1 0.0505  0.0505   0.582  0.525
T2_I         1 0.0310  0.0310   0.357  0.611
T2_J         1 0.0045  0.0045   0.052  0.841
U1_I         1 0.0133  0.0133   0.153  0.733
RT_J         1 0.2504  0.2504   2.890  0.231
Residuals    2 0.1733  0.0867               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
171    3.526806
909    3.559317
2385   3.944713
4500   3.654308
5317   3.705190
5752   3.591557
6664   3.355894
7322   3.415166
9466   4.231493
9505   3.452874
9734   4.382814
10161  3.558990
10889  3.687787
11729  3.706676
12115  3.460029

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(T2_J^2)': 0.8771498801222202, 'T1_J': 0.5251534574587134, 'I(T2_I^2)': 0.30209011241288786, 'U1_I': 0.7333065481353136, 'T2_J': 0.8413845579923828, 'T2_I': 0.6107655876082014, 'I(RT_J^2)': 0.1731197331624957, 'I(U1_I^2)': 0.45398313556815717, 'I(T1_I^2)': 0.8904233241684061, 'I(T1_J^2)': 0.8249692927856638, 'RT_J': 0.2312587789023962, 'T1_I': 0.4939542043577012}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U1_I^2)', 'T1_I', 'T1_J', 'T2_I', 'U1_I', 'I(T1_J^2)', 'T2_J', 'I(T2_J^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 59 10

Pruned data dimensions: [1] 15 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(RT_J^2) + T1_I + T1_J + T2_I + 
    T2_J + U1_I + RT_J, tau = 0.05, data = structure(list(T1_I = c(11, 
7, 0, 5, 5, 11, 0, 4, 0, 11, 11, 0, 0, 0, 6), T1_J = c(4, 5, 
0, 4, 0, 11, 11, 10, 7, 0, 10, 0, 5, 4, 0), T2_I = c(11, 8, 5, 
6, 11, 0, 11, 5, 11, 0, 11, 6, 0, 0, 0), T2_J = c(11, 6, 11, 
0, 10, 11, 0, 11, 8, 5, 0, 5, 8, 0, 2), U1_I = c(0, 15, 18, 3, 
28, 4, 14, 29, 3, 17, 29, 0, 28, 28, 0), U_I = c(0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), U_J = c(0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0), RT_I = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1), RT_J = c(3, 0, 5, 3, 0, 0, 3, 2, 5, 3, 5, 
0, 3, 0, 5), cost_mean = c(3.526806, 3.559317, 3.944713, 3.654308, 
3.70519, 3.591557, 3.355894, 3.415166, 4.231493, 3.452874, 4.382814, 
3.55899, 3.687787, 3.706676, 3.460029)), .Names = c("T1_I", "T1_J", 
"T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
), row.names = 45:59, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.261440e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     1.038000e-02 -1.797693e+308  1.797693e+308
I(T1_J^2)    -1.750000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)    -1.800000e-04 -1.797693e+308  1.797693e+308
I(T2_J^2)    -4.620000e-03 -1.797693e+308  1.797693e+308
I(U1_I^2)     5.800000e-04 -1.797693e+308  1.797693e+308
I(RT_J^2)     7.319000e-02 -1.797693e+308  1.797693e+308
T1_I         -1.035500e-01 -1.797693e+308  1.797693e+308
T1_J          2.721000e-02 -1.797693e+308  1.797693e+308
T2_I          1.776000e-02 -1.797693e+308  1.797693e+308
T2_J          6.258000e-02 -1.797693e+308  1.797693e+308
U1_I         -3.230000e-03 -1.797693e+308  1.797693e+308
RT_J         -2.980400e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 9342
Valid coordinates: 7200/36000
Tested coordinates: 18619
Valid coordinates: 10800/36000
Tested coordinates: 28103
Valid coordinates: 14400/36000
Tested coordinates: 37559
Valid coordinates: 18000/36000
Tested coordinates: 46989
Valid coordinates: 21600/36000
Tested coordinates: 56304
Valid coordinates: 25200/36000
Tested coordinates: 65625
Valid coordinates: 28800/36000
Tested coordinates: 74958
Valid coordinates: 32400/36000
Tested coordinates: 84331
Valid coordinates: 36000/36000
Tested coordinates: 93697
Valid/Tested configurations: 36000/93697
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 188800      9

Pruned data dimensions: [1] 48471     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.8771498801222202, 'T1_J': 0.5251534574587134, 'I(T2_I^2)': 0.30209011241288786, 'U1_I': 0.7333065481353136, 'T2_J': 0.8413845579923828, 'T2_I': 0.6107655876082014, 'I(RT_J^2)': 0.1731197331624957, 'I(U1_I^2)': 0.45398313556815717, 'I(T1_I^2)': 0.8904233241684061, 'I(T1_J^2)': 0.8249692927856638, 'RT_J': 0.2312587789023962, 'T1_I': 0.4939542043577012}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U1_I^2)', 'T1_I', 'T1_J', 'T2_I', 'U1_I', 'I(T1_J^2)', 'T2_J', 'I(T2_J^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.8771498801222202, 'T1_J': 0.5251534574587134, 'I(T2_I^2)': 0.30209011241288786, 'U1_I': 0.7333065481353136, 'T2_J': 0.8413845579923828, 'T2_I': 0.6107655876082014, 'I(RT_J^2)': 0.1731197331624957, 'I(U1_I^2)': 0.45398313556815717, 'I(T1_I^2)': 0.8904233241684061, 'I(T1_J^2)': 0.8249692927856638, 'RT_J': 0.2312587789023962, 'T1_I': 0.4939542043577012}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U1_I^2)', 'T1_I', 'T1_J', 'T2_I', 'U1_I', 'I(T1_J^2)', 'T2_J', 'I(T2_J^2)', 'I(T1_I^2)']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
41950    1    1    5    4   19   0  27    1    3

Best From Design: [0, 11, 11, 0, 14, 0, 0, 1, 3]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.771249
Design Best Point:
[0, 11, 11, 0, 14, 0, 0, 1, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.703357548516
Predicted Best Point:
[1, 1, 5, 4, 19, 0, 27, 1, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 1, 5, 4, 19, 0, 27, 1, 3]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		1227
        Multiplications: 	444
        Divisions: 		0
        Logical: 		0
        Reads: 			2378
        Writes: 		277
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.098466
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.703357548516
Slowdown (Predicted Best): 1.48775844648
Budget: 59/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 6, 0, 8, 0, 11, 0, 0, 1]
Step 3
Generating valid search space of size 12000 (does not spend evaluations)
Valid coordinates: 1200/12000
Tested coordinates: 3168
Valid coordinates: 2400/12000
Tested coordinates: 6379
Valid coordinates: 3600/12000
Tested coordinates: 9588
Valid coordinates: 4800/12000
Tested coordinates: 12771
Valid coordinates: 6000/12000
Tested coordinates: 15791
Valid coordinates: 7200/12000
Tested coordinates: 18920
Valid coordinates: 8400/12000
Tested coordinates: 21982
Valid coordinates: 9600/12000
Tested coordinates: 25078
Valid coordinates: 10800/12000
Tested coordinates: 28235
Valid coordinates: 12000/12000
Tested coordinates: 31493
Valid/Tested configurations: 12000/31493
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 200800      9

Pruned data dimensions: [1] 60471     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Clean Info:
One-Level Factors: ['U_I', 'U_J', 'RT_I']
Two-Level Factors: ['U_I', 'U_J', 'RT_I']
Three-Level Factors: ['U_I', 'U_J', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J']
Clean 2 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'U_J', 'RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 15 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 60471     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1901     4    0   11    4   17   0   0    1    2
5843     0    0    4    5   26   0   0    1    0
6873     4    6   11    0    0   0   0    1    0
9266     6    7    6    0   28   0   0    1    0
20128   11    6    0    6    4   0   0    1    2
22179    0   11    7    0    0   0   0    1    2
27711    0   11    1    0   13   0   0    1    5
29680    0    5    6   11   12   0   0    1    3
32078    0    7   11    7   29   0   0    1    5
35581    4   11    0   11   29   0   0    1    2
36494    0    0    0   11    0   0   0    1    0
39026    7    0    8    8    0   0   0    1    5
52799    6    0    0    0   17   0   0    1    5
58346   11    0   11    0   29   0   0    1    3
59864   11   11   11   11   13   0   0    1    0

D-Efficiency Approximation: [1] 0.2780997

Measuring design of size 15
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		184
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			418
        Writes: 		75
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.585295
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		69
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			175
        Writes: 		54
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.556897
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		41
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			121
        Writes: 		27
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.674656
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		71
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			179
        Writes: 		56
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.788446
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		168
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			385
        Writes: 		60
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.593865
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		159
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			368
        Writes: 		53
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.489431
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1073
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2083
        Writes: 		237
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.160472
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		310
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			655
        Writes: 		96
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.445678
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1089
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2115
        Writes: 		253
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.083514
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		193
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			435
        Writes: 		85
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.409033
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	3
        Additions: 		33
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			106
        Writes: 		23
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.553831
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		1058
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2055
        Writes: 		223
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.071534
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		1062
        Multiplications: 	392
        Divisions: 		0
        Logical: 		0
        Reads: 			2051
        Writes: 		234
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: "timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  "
 --> CalledProcessError: Command 'timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/root/dlmt_spapt_experiments/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 133, in search
    best_coord,best_perf,search_time,speedup = self.searchBestCoord(startCoord)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 991, in searchBestCoord
    best_point, used_points = self.dopt_anova()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 884, in dopt_anova
    step_data = self.dopt_anova_step(budget, trials, i)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 793, in dopt_anova_step
    design                 = self.measure_design(design, encoded_design, step_number)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 670, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 347, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 488, in run
    perf_costs = self.__execute(perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 368, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/root/dlmt_spapt_experiments/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: "timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/root/dlmt_spapt_experiments/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 133, in search
    best_coord,best_perf,search_time,speedup = self.searchBestCoord(startCoord)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 991, in searchBestCoord
    best_point, used_points = self.dopt_anova()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 884, in dopt_anova
    step_data = self.dopt_anova_step(budget, trials, i)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 793, in dopt_anova_step
    design                 = self.measure_design(design, encoded_design, step_number)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 670, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 347, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 488, in run
    perf_costs = self.__execute(perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 427, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/root/dlmt_spapt_experiments/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

Stored as a failed configuration
Configuration failed
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		306
        Multiplications: 	104
        Divisions: 		0
        Logical: 		0
        Reads: 			635
        Writes: 		102
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
orio.main.tuner.ptest_driver: failed to execute the test code: "timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  "
 --> CalledProcessError: Command 'timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  ' returned non-zero exit status 1
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/root/dlmt_spapt_experiments/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 133, in search
    best_coord,best_perf,search_time,speedup = self.searchBestCoord(startCoord)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 991, in searchBestCoord
    best_point, used_points = self.dopt_anova()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 884, in dopt_anova
    step_data = self.dopt_anova_step(budget, trials, i)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 793, in dopt_anova_step
    design                 = self.measure_design(design, encoded_design, step_number)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 670, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 347, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 488, in run
    perf_costs = self.__execute(perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 368, in __execute
    % (cmd,e.__class__.__name__, e),doexit = False)

  File "/root/dlmt_spapt_experiments/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

orio.main.tuner.ptest_driver:  performance testing failed: "timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  "
  File "../../../orcc", line 27, in <module>
    orio.main.orio_main.start(sys.argv, orio.main.orio_main.C_CPP)

  File "/root/dlmt_spapt_experiments/orio/orio/main/orio_main.py", line 109, in start
    optimized_code_seq = odriver.optimizeCodeFrags(cfrags, True)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 45, in optimizeCodeFrags
    cur_seq = self.__optimizeCodeFrag(cf, perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/opt_driver.py", line 120, in __optimizeCodeFrag
    cfrag.cfrags)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/tuner.py", line 152, in tune
    best_perf_params, best_perf_cost = search_eng.search()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 133, in search
    best_coord,best_perf,search_time,speedup = self.searchBestCoord(startCoord)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 991, in searchBestCoord
    best_point, used_points = self.dopt_anova()

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 884, in dopt_anova
    step_data = self.dopt_anova_step(budget, trials, i)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 793, in dopt_anova_step
    design                 = self.measure_design(design, encoded_design, step_number)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/dlmt/dlmt.py", line 670, in measure_design
    measurement = self.getPerfCosts([candidate])

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/search/search.py", line 347, in getPerfCosts
    new_perf_costs = self.ptdriver.run(test_code, perf_params=perf_params,coord=coord_key)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 488, in run
    perf_costs = self.__execute(perf_params)

  File "/root/dlmt_spapt_experiments/orio/orio/main/tuner/ptest_driver.py", line 427, in __execute
    err('orio.main.tuner.ptest_driver:  performance testing failed: "%s"' % cmd, doexit=False)

  File "/root/dlmt_spapt_experiments/orio/orio/main/util/globals.py", line 342, in err
    errmsg + "\n" + "\n".join(traceback.format_stack())

Stored as a failed configuration
Configuration failed
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		56
        Multiplications: 	12
        Divisions: 		0
        Logical: 		0
        Reads: 			149
        Writes: 		41
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.589945
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1901     4    0   11    4   17   0   0    1    2  3.585295
5843     0    0    4    5   26   0   0    1    0  3.556897
6873     4    6   11    0    0   0   0    1    0  3.674656
9266     6    7    6    0   28   0   0    1    0  3.788446
20128   11    6    0    6    4   0   0    1    2  3.593865
22179    0   11    7    0    0   0   0    1    2  3.489431
27711    0   11    1    0   13   0   0    1    5  4.160472
29680    0    5    6   11   12   0   0    1    3  3.445678
32078    0    7   11    7   29   0   0    1    5  4.083514
35581    4   11    0   11   29   0   0    1    2  3.409033
36494    0    0    0   11    0   0   0    1    0  3.553831
39026    7    0    8    8    0   0   0    1    5  4.071534
52799    6    0    0    0   17   0   0    1    5        NA
58346   11    0   11    0   29   0   0    1    3        NA
59864   11   11   11   11   13   0   0    1    0  3.589945

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1901     4    0   11    4   17   0   0    1    2  3.585295
5843     0    0    4    5   26   0   0    1    0  3.556897
6873     4    6   11    0    0   0   0    1    0  3.674656
9266     6    7    6    0   28   0   0    1    0  3.788446
20128   11    6    0    6    4   0   0    1    2  3.593865
22179    0   11    7    0    0   0   0    1    2  3.489431
27711    0   11    1    0   13   0   0    1    5  4.160472
29680    0    5    6   11   12   0   0    1    3  3.445678
32078    0    7   11    7   29   0   0    1    5  4.083514
35581    4   11    0   11   29   0   0    1    2  3.409033
36494    0    0    0   11    0   0   0    1    0  3.553831
39026    7    0    8    8    0   0   0    1    5  4.071534
59864   11   11   11   11   13   0   0    1    0  3.589945

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je      U1_Ie U_Ie U_Je
1901  -0.3333333 -1.0000000  0.8333333 -0.3333333  0.1333333   -1   -1
5843  -1.0000000 -1.0000000 -0.3333333 -0.1666667  0.7333333   -1   -1
6873  -0.3333333  0.0000000  0.8333333 -1.0000000 -1.0000000   -1   -1
9266   0.0000000  0.1666667  0.0000000 -1.0000000  0.8666667   -1   -1
20128  0.8333333  0.0000000 -1.0000000  0.0000000 -0.7333333   -1   -1
22179 -1.0000000  0.8333333  0.1666667 -1.0000000 -1.0000000   -1   -1
27711 -1.0000000  0.8333333 -0.8333333 -1.0000000 -0.1333333   -1   -1
29680 -1.0000000 -0.1666667  0.0000000  0.8333333 -0.2000000   -1   -1
32078 -1.0000000  0.1666667  0.8333333  0.1666667  0.9333333   -1   -1
35581 -0.3333333  0.8333333 -1.0000000  0.8333333  0.9333333   -1   -1
36494 -1.0000000 -1.0000000 -1.0000000  0.8333333 -1.0000000   -1   -1
39026  0.1666667 -1.0000000  0.3333333  0.3333333 -1.0000000   -1   -1
59864  0.8333333  0.8333333  0.8333333  0.8333333 -0.1333333   -1   -1
           RT_Ie      RT_Je cost_mean
1901  -0.6666667 -0.3333333  3.585295
5843  -0.6666667 -1.0000000  3.556897
6873  -0.6666667 -1.0000000  3.674656
9266  -0.6666667 -1.0000000  3.788446
20128 -0.6666667 -0.3333333  3.593865
22179 -0.6666667 -0.3333333  3.489431
27711 -0.6666667  0.6666667  4.160472
29680 -0.6666667  0.0000000  3.445678
32078 -0.6666667  0.6666667  4.083514
35581 -0.6666667 -0.3333333  3.409033
36494 -0.6666667 -1.0000000  3.553831
39026 -0.6666667  0.6666667  4.071534
59864 -0.6666667 -1.0000000  3.589945

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 72 10

Pruned data dimensions: [1] 28 10

Heteroscedasticity Test p-value: 0.167015687153
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 0.0000  0.0000   0.001  0.98160    
I(T1_J^2)    1 0.0033  0.0033   0.110  0.74507    
I(T2_I^2)    1 0.1670  0.1670   5.544  0.03258 *  
I(T2_J^2)    1 0.0531  0.0531   1.761  0.20431    
I(U1_I^2)    1 0.0560  0.0560   1.860  0.19273    
I(RT_J^2)    1 0.8420  0.8420  27.952 9.13e-05 ***
T1_I         1 0.0274  0.0274   0.909  0.35549    
T1_J         1 0.0229  0.0229   0.759  0.39728    
T2_I         1 0.0086  0.0086   0.285  0.60141    
T2_J         1 0.0032  0.0032   0.105  0.75029    
U1_I         1 0.0189  0.0189   0.627  0.44075    
RT_J         1 0.3294  0.3294  10.935  0.00479 ** 
Residuals   15 0.4518  0.0301                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1901   3.585295
5843   3.556897
6873   3.674656
9266   3.788446
20128  3.593865
22179  3.489431
27711  4.160472
29680  3.445678
32078  4.083514
35581  3.409033
36494  3.553831
39026  4.071534
59864  3.589945

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(T2_J^2)': 0.20430762530682875, 'T1_J': 0.39727894907284034, 'I(T2_I^2)': 0.0325813716677793, 'U1_I': 0.4407525324377948, 'T2_J': 0.7502881617225586, 'T2_I': 0.6014076874178839, 'I(RT_J^2)': 9.127953751899438e-05, 'I(U1_I^2)': 0.19273213541551953, 'I(T1_I^2)': 0.9816020315822935, 'I(T1_J^2)': 0.7450718615284067, 'RT_J': 0.004791623912863432, 'T1_I': 0.35549011390397944}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U1_I^2)', 'I(T2_J^2)', 'T1_I', 'T1_J', 'U1_I', 'T2_I', 'I(T1_J^2)', 'T2_J', 'I(T1_I^2)']
Variables within threshold: ['I(RT_J^2)', 'RT_J']
Predicting Best Values for: ['I(RT_J^2)', 'RT_J']
Using Model: cost_mean ~ I(RT_J^2) + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 72 10

Pruned data dimensions: [1] 28 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(RT_J^2) + RT_J, tau = 0.05, data = structure(list(
    T1_I = c(11, 7, 0, 5, 5, 11, 0, 4, 0, 11, 11, 0, 0, 0, 6, 
    4, 0, 4, 6, 11, 0, 0, 0, 0, 4, 0, 7, 11), T1_J = c(4, 5, 
    0, 4, 0, 11, 11, 10, 7, 0, 10, 0, 5, 4, 0, 0, 0, 6, 7, 6, 
    11, 11, 5, 7, 11, 0, 0, 11), T2_I = c(11, 8, 5, 6, 11, 0, 
    11, 5, 11, 0, 11, 6, 0, 0, 0, 11, 4, 11, 6, 0, 7, 1, 6, 11, 
    0, 0, 8, 11), T2_J = c(11, 6, 11, 0, 10, 11, 0, 11, 8, 5, 
    0, 5, 8, 0, 2, 4, 5, 0, 0, 6, 0, 0, 11, 7, 11, 11, 8, 11), 
    U1_I = c(0, 15, 18, 3, 28, 4, 14, 29, 3, 17, 29, 0, 28, 28, 
    0, 17, 26, 0, 28, 4, 0, 13, 12, 29, 29, 0, 0, 13), U_I = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0), U_J = c(0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0), RT_I = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), RT_J = c(3, 0, 5, 
    3, 0, 0, 3, 2, 5, 3, 5, 0, 3, 0, 5, 2, 0, 0, 0, 2, 2, 5, 
    3, 5, 2, 0, 5, 0), cost_mean = c(3.526806, 3.559317, 3.944713, 
    3.654308, 3.70519, 3.591557, 3.355894, 3.415166, 4.231493, 
    3.452874, 4.382814, 3.55899, 3.687787, 3.706676, 3.460029, 
    3.585295, 3.556897, 3.674656, 3.788446, 3.593865, 3.489431, 
    4.160472, 3.445678, 4.083514, 3.409033, 3.553831, 4.071534, 
    3.589945)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 45:72, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.553830e+00 -1.797693e+308   3.556080e+00
I(RT_J^2)     2.361000e-02 -1.797693e+308  1.797693e+308
RT_J         -1.368100e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 36000 (does not spend evaluations)
Valid coordinates: 3600/36000
Tested coordinates: 9484
Valid coordinates: 7200/36000
Tested coordinates: 19129
Valid coordinates: 10800/36000
Tested coordinates: 28563
Valid coordinates: 14400/36000
Tested coordinates: 37943
Valid coordinates: 18000/36000
Tested coordinates: 47192
Valid coordinates: 21600/36000
Tested coordinates: 56714
Valid coordinates: 25200/36000
Tested coordinates: 66075
Valid coordinates: 28800/36000
Tested coordinates: 75576
Valid coordinates: 32400/36000
Tested coordinates: 84972
Valid coordinates: 36000/36000
Tested coordinates: 94364
Valid/Tested configurations: 36000/94364
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 236800      9

Pruned data dimensions: [1] 96471     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.20430762530682875, 'T1_J': 0.39727894907284034, 'I(T2_I^2)': 0.0325813716677793, 'U1_I': 0.4407525324377948, 'T2_J': 0.7502881617225586, 'T2_I': 0.6014076874178839, 'I(RT_J^2)': 9.127953751899438e-05, 'I(U1_I^2)': 0.19273213541551953, 'I(T1_I^2)': 0.9816020315822935, 'I(T1_J^2)': 0.7450718615284067, 'RT_J': 0.004791623912863432, 'T1_I': 0.35549011390397944}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U1_I^2)', 'I(T2_J^2)', 'T1_I', 'T1_J', 'U1_I', 'T2_I', 'I(T1_J^2)', 'T2_J', 'I(T1_I^2)']
Variables within threshold: ['RT_J']
Unique Variables: ['RT_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(T2_J^2)': 0.20430762530682875, 'T1_J': 0.39727894907284034, 'I(T2_I^2)': 0.0325813716677793, 'U1_I': 0.4407525324377948, 'T2_J': 0.7502881617225586, 'T2_I': 0.6014076874178839, 'I(RT_J^2)': 9.127953751899438e-05, 'I(U1_I^2)': 0.19273213541551953, 'I(T1_I^2)': 0.9816020315822935, 'I(T1_J^2)': 0.7450718615284067, 'RT_J': 0.004791623912863432, 'T1_I': 0.35549011390397944}
Ordered Keys: 
['I(RT_J^2)', 'RT_J', 'I(T2_I^2)', 'I(U1_I^2)', 'I(T2_J^2)', 'T1_I', 'T1_J', 'U1_I', 'T2_I', 'I(T1_J^2)', 'T2_J', 'I(T1_I^2)']
Variables within threshold: ['RT_J']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
5    2    6    9    7    9   0  18    3    2

Best From Design: [4, 11, 0, 11, 29, 0, 0, 1, 2]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_J': 2, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.771249
Design Best Point:
[4, 11, 0, 11, 29, 0, 0, 1, 2]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.714494883834
Predicted Best Point:
[2, 6, 9, 7, 9, 0, 18, 3, 2]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[2, 6, 9, 7, 9, 0, 18, 3, 2]
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		2727
        Multiplications: 	864
        Divisions: 		0
        Logical: 		0
        Reads: 			4458
        Writes: 		477
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684861
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_J': 0, 'U_I': 0, 'RT_J': 2, 'RT_I': 1}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.714494883834
Slowdown (Predicted Best): 0.981894049126
Budget: 72/1000
Best point from design was better than predicted point
Current Best Point: 
[0, 6, 0, 8, 0, 11, 0, 0, 1]
Final Best Point: 
[0, 6, 0, 8, 0, 11, 0, 0, 1]
Ending DLMT
Best Point: [0, 6, 0, 8, 0, 11, 0, 0, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.48414926695
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.48414926695
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [0, 6, 0, 8, 0, 11, 0, 0, 1]={'T1_I': 1, 'T1_J': 64, 'U_J': 1, 'U_I': 12, 'T2_I': 1, 'T2_J': 256, 'U1_I': 1, 'RT_I': 1, 'RT_J': 2}, cost=3.214804e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-8007.70, runs=77
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 1
 RT_J = 2
 T1_I = 1
 T1_J = 64
 T2_I = 1
 T2_J = 256
 U1_I = 1
 U_I = 12
 U_J = 1
 cost_mean = 3.214804
 points = 77
 speedup = 1.48414926695
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		430
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			877
        Writes: 		114
        Comparisons:		11
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
