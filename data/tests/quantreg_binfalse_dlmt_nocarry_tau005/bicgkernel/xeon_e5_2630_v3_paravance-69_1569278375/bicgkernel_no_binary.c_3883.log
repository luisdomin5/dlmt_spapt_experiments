
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 83661
Valid coordinates: 3520/17600
Tested coordinates: 168627
Valid coordinates: 5280/17600
Tested coordinates: 248317
Valid coordinates: 7040/17600
Tested coordinates: 329094
Valid coordinates: 8800/17600
Tested coordinates: 415377
Valid coordinates: 10560/17600
Tested coordinates: 497108
Valid coordinates: 12320/17600
Tested coordinates: 583182
Valid coordinates: 14080/17600
Tested coordinates: 669305
Valid coordinates: 15840/17600
Tested coordinates: 751598
Valid coordinates: 17600/17600
Tested coordinates: 836526
Valid/Tested configurations: 17600/836526
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1654     2    0    0    0   19   0   7    2    1
1827     0    4    5    0   29  10   0    5    1
2360     2    1    9   10   29   0   0    2    0
4712     5   11    6    0   17  29   0    4    0
5719     6    0    0    7   14  12   0    5    0
5748     7    2    7    4    0   0  29    2    2
5825    11    4   11   11   22  26   0    3    2
7369     4    0   11    0    0  22   0    0    2
8886     0   11    0   11   25   0  28    2    3
9332     5   10   11   10    6   0   0    5    2
9875     1    4   11   11    8   0  29    0    0
10473    0   11    2   11    0  16   0    0    0
11041   11    6    0    7    1   0   9    3    0
11369    0    6    7    6   15   0  14    0    2
11695    1    1    0   11    0  29   0    5    1
12134    8    0    9   10   27   0  21    5    0
12303    0    0    8    6    8  29   0    0    5
13724    0    0   11    7    5  14   0    2    5
16256    4    5    0    5   29  26   0    0    5
16370   11   11   11    0   27   0  21    0    5
17288    6    7    7   11    1   0  19    2    5
17521   11    0    0   11   19   2   0    0    5

D-Efficiency Approximation: [1] 0.2183943

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		561
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1023
        Writes: 		134
        Comparisons:		9
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.159918
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		1458
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2827
        Writes: 		338
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.762395
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	6
        Additions: 		99
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			242
        Writes: 		67
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.75185
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		501
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1127
        Writes: 		171
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.417931
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		469
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1060
        Writes: 		147
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.537929
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 128 must be greater than the stride value 128; tile index = iii
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2086
        Multiplications: 	700
        Divisions: 		0
        Logical: 		0
        Reads: 			3604
        Writes: 		381
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.15825
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		2198
        Multiplications: 	720
        Divisions: 		0
        Logical: 		0
        Reads: 			3826
        Writes: 		449
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.40477
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		1233
        Multiplications: 	384
        Divisions: 		0
        Logical: 		0
        Reads: 			2015
        Writes: 		231
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580811
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		2285
        Multiplications: 	760
        Divisions: 		0
        Logical: 		0
        Reads: 			3941
        Writes: 		433
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.339292
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		1973
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3396
        Writes: 		364
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.932546
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		313
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			703
        Writes: 		91
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684676
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		198
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			450
        Writes: 		71
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.781224
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		1245
        Multiplications: 	396
        Divisions: 		0
        Logical: 		0
        Reads: 			2081
        Writes: 		229
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.667211
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		214
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			490
        Writes: 		74
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582772
Length of requested configs: 1
Code stats:
        Number of loops: 	17
        Max loop nest depth: 	5
        Additions: 		2060
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3959
        Writes: 		445
        Comparisons:		17
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583685
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		10148
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15326
        Writes: 		1573
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.136073
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		13762
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20615
        Writes: 		2109
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.237129
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		8620
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			13347
        Writes: 		1374
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.188535
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		12424
        Multiplications: 	3696
        Divisions: 		0
        Logical: 		0
        Reads: 			18671
        Writes: 		1929
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.768618
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		541
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1214
        Writes: 		156
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582752
Length of requested configs: 1
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	6
        Additions: 		3175
        Multiplications: 	1060
        Divisions: 		0
        Logical: 		0
        Reads: 			5422
        Writes: 		567
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.978157
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1542
        Multiplications: 	528
        Divisions: 		0
        Logical: 		0
        Reads: 			2763
        Writes: 		311
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.086659
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1654     2    0    0    0   19   0   7    2    1  3.159918
1827     0    4    5    0   29  10   0    5    1  5.762395
2360     2    1    9   10   29   0   0    2    0  3.751850
4712     5   11    6    0   17  29   0    4    0  3.417931
5719     6    0    0    7   14  12   0    5    0  5.537929
5748     7    2    7    4    0   0  29    2    2  4.158250
5825    11    4   11   11   22  26   0    3    2  3.404770
7369     4    0   11    0    0  22   0    0    2  4.580811
8886     0   11    0   11   25   0  28    2    3  3.339292
9332     5   10   11   10    6   0   0    5    2  6.932546
9875     1    4   11   11    8   0  29    0    0  4.684676
10473    0   11    2   11    0  16   0    0    0  4.781224
11041   11    6    0    7    1   0   9    3    0  3.667211
11369    0    6    7    6   15   0  14    0    2  4.582772
11695    1    1    0   11    0  29   0    5    1  4.583685
12134    8    0    9   10   27   0  21    5    0  6.136073
12303    0    0    8    6    8  29   0    0    5  9.237129
13724    0    0   11    7    5  14   0    2    5  4.188535
16256    4    5    0    5   29  26   0    0    5  4.768618
16370   11   11   11    0   27   0  21    0    5  4.582752
17288    6    7    7   11    1   0  19    2    5  3.978157
17521   11    0    0   11   19   2   0    0    5  4.086659

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1654     2    0    0    0   19   0   7    2    1  3.159918
1827     0    4    5    0   29  10   0    5    1  5.762395
2360     2    1    9   10   29   0   0    2    0  3.751850
4712     5   11    6    0   17  29   0    4    0  3.417931
5719     6    0    0    7   14  12   0    5    0  5.537929
5748     7    2    7    4    0   0  29    2    2  4.158250
5825    11    4   11   11   22  26   0    3    2  3.404770
7369     4    0   11    0    0  22   0    0    2  4.580811
8886     0   11    0   11   25   0  28    2    3  3.339292
9332     5   10   11   10    6   0   0    5    2  6.932546
9875     1    4   11   11    8   0  29    0    0  4.684676
10473    0   11    2   11    0  16   0    0    0  4.781224
11041   11    6    0    7    1   0   9    3    0  3.667211
11369    0    6    7    6   15   0  14    0    2  4.582772
11695    1    1    0   11    0  29   0    5    1  4.583685
12134    8    0    9   10   27   0  21    5    0  6.136073
12303    0    0    8    6    8  29   0    0    5  9.237129
13724    0    0   11    7    5  14   0    2    5  4.188535
16256    4    5    0    5   29  26   0    0    5  4.768618
16370   11   11   11    0   27   0  21    0    5  4.582752
17288    6    7    7   11    1   0  19    2    5  3.978157
17521   11    0    0   11   19   2   0    0    5  4.086659

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
1654  -0.6666667 -1.0000000 -1.0000000 -1.0000000  0.26666667 -1.00000000
1827  -1.0000000 -0.3333333 -0.1666667 -1.0000000  0.93333333 -0.33333333
2360  -0.6666667 -0.8333333  0.5000000  0.6666667  0.93333333 -1.00000000
4712  -0.1666667  0.8333333  0.0000000 -1.0000000  0.13333333  0.93333333
5719   0.0000000 -1.0000000 -1.0000000  0.1666667 -0.06666667 -0.20000000
5748   0.1666667 -0.6666667  0.1666667 -0.3333333 -1.00000000 -1.00000000
5825   0.8333333 -0.3333333  0.8333333  0.8333333  0.46666667  0.73333333
7369  -0.3333333 -1.0000000  0.8333333 -1.0000000 -1.00000000  0.46666667
8886  -1.0000000  0.8333333 -1.0000000  0.8333333  0.66666667 -1.00000000
9332  -0.1666667  0.6666667  0.8333333  0.6666667 -0.60000000 -1.00000000
9875  -0.8333333 -0.3333333  0.8333333  0.8333333 -0.46666667 -1.00000000
10473 -1.0000000  0.8333333 -0.6666667  0.8333333 -1.00000000  0.06666667
11041  0.8333333  0.0000000 -1.0000000  0.1666667 -0.93333333 -1.00000000
11369 -1.0000000  0.0000000  0.1666667  0.0000000  0.00000000 -1.00000000
11695 -0.8333333 -0.8333333 -1.0000000  0.8333333 -1.00000000  0.93333333
12134  0.3333333 -1.0000000  0.5000000  0.6666667  0.80000000 -1.00000000
12303 -1.0000000 -1.0000000  0.3333333  0.0000000 -0.46666667  0.93333333
13724 -1.0000000 -1.0000000  0.8333333  0.1666667 -0.66666667 -0.06666667
16256 -0.3333333 -0.1666667 -1.0000000 -0.1666667  0.93333333  0.73333333
16370  0.8333333  0.8333333  0.8333333 -1.0000000  0.80000000 -1.00000000
17288  0.0000000  0.1666667  0.1666667  0.8333333 -0.93333333 -1.00000000
17521  0.8333333 -1.0000000 -1.0000000  0.8333333  0.26666667 -0.86666667
             U_Je      RT_Ie      RT_Je cost_mean
1654  -0.53333333 -0.3333333 -0.6666667  3.159918
1827  -1.00000000  0.6666667 -0.6666667  5.762395
2360  -1.00000000 -0.3333333 -1.0000000  3.751850
4712  -1.00000000  0.3333333 -1.0000000  3.417931
5719  -1.00000000  0.6666667 -1.0000000  5.537929
5748   0.93333333 -0.3333333 -0.3333333  4.158250
5825  -1.00000000  0.0000000 -0.3333333  3.404770
7369  -1.00000000 -1.0000000 -0.3333333  4.580811
8886   0.86666667 -0.3333333  0.0000000  3.339292
9332  -1.00000000  0.6666667 -0.3333333  6.932546
9875   0.93333333 -1.0000000 -1.0000000  4.684676
10473 -1.00000000 -1.0000000 -1.0000000  4.781224
11041 -0.40000000  0.0000000 -1.0000000  3.667211
11369 -0.06666667 -1.0000000 -0.3333333  4.582772
11695 -1.00000000  0.6666667 -0.6666667  4.583685
12134  0.40000000  0.6666667 -1.0000000  6.136073
12303 -1.00000000 -1.0000000  0.6666667  9.237129
13724 -1.00000000 -0.3333333  0.6666667  4.188535
16256 -1.00000000 -1.0000000  0.6666667  4.768618
16370  0.40000000 -1.0000000  0.6666667  4.582752
17288  0.26666667 -0.3333333  0.6666667  3.978157
17521 -1.00000000 -1.0000000  0.6666667  4.086659

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.00711829645381
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Design:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1654     2    0    0    0   19   0   7    2    1  3.159918
1827     0    4    5    0   29  10   0    5    1  5.762395
2360     2    1    9   10   29   0   0    2    0  3.751850
4712     5   11    6    0   17  29   0    4    0  3.417931
5719     6    0    0    7   14  12   0    5    0  5.537929
5748     7    2    7    4    0   0  29    2    2  4.158250
5825    11    4   11   11   22  26   0    3    2  3.404770
7369     4    0   11    0    0  22   0    0    2  4.580811
8886     0   11    0   11   25   0  28    2    3  3.339292
9332     5   10   11   10    6   0   0    5    2  6.932546
9875     1    4   11   11    8   0  29    0    0  4.684676
10473    0   11    2   11    0  16   0    0    0  4.781224
11041   11    6    0    7    1   0   9    3    0  3.667211
11369    0    6    7    6   15   0  14    0    2  4.582772
11695    1    1    0   11    0  29   0    5    1  4.583685
12134    8    0    9   10   27   0  21    5    0  6.136073
12303    0    0    8    6    8  29   0    0    5  9.237129
13724    0    0   11    7    5  14   0    2    5  4.188535
16256    4    5    0    5   29  26   0    0    5  4.768618
16370   11   11   11    0   27   0  21    0    5  4.582752
17288    6    7    7   11    1   0  19    2    5  3.978157
17521   11    0    0   11   19   2   0    0    5  4.086659

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value   Pr(>F)    
I(T1_I^2)    1 6.790e-08 6.790e-08  12.883 0.037041 *  
I(T1_J^2)    1 8.340e-08 8.340e-08  15.822 0.028421 *  
I(T2_I^2)    1 1.971e-07 1.971e-07  37.411 0.008784 ** 
I(T2_J^2)    1 2.900e-09 2.900e-09   0.546 0.513422    
I(U1_I^2)    1 2.760e-08 2.760e-08   5.244 0.105954    
I(U_I^2)     1 2.000e-10 2.000e-10   0.035 0.863088    
I(U_J^2)     1 2.470e-08 2.470e-08   4.690 0.118944    
I(RT_I^2)    1 1.870e-07 1.870e-07  35.491 0.009460 ** 
I(RT_J^2)    1 4.484e-07 4.484e-07  85.111 0.002694 ** 
T1_I         1 1.630e-08 1.630e-08   3.094 0.176824    
T1_J         1 3.840e-08 3.840e-08   7.279 0.073915 .  
T2_I         1 6.730e-08 6.730e-08  12.776 0.037436 *  
T2_J         1 1.965e-07 1.965e-07  37.295 0.008822 ** 
U1_I         1 2.909e-07 2.909e-07  55.214 0.005044 ** 
U_I          1 1.325e-07 1.325e-07  25.146 0.015270 *  
U_J          1 5.700e-09 5.700e-09   1.078 0.375386    
RT_I         1 1.861e-06 1.861e-06 353.155 0.000329 ***
RT_J         1 1.460e-08 1.460e-08   2.778 0.194148    
Residuals    3 1.580e-08 5.300e-09                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1654   3.159918
1827   5.762395
2360   3.751850
4712   3.417931
5719   5.537929
5748   4.158250
5825   3.404770
7369   4.580811
8886   3.339292
9332   6.932546
9875   4.684676
10473  4.781224
11041  3.667211
11369  4.582772
11695  4.583685
12134  6.136073
12303  9.237129
13724  4.188535
16256  4.768618
16370  4.582752
17288  3.978157
17521  4.086659

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.002694153846208248, 'T1_J': 0.07391549467793992, 'T2_J': 0.008822242617276384, 'U_J': 0.37538594656219326, 'U_I': 0.01527005236100321, 'I(T2_I^2)': 0.008783824882741776, 'T2_I': 0.0374359624507587, 'U1_I': 0.005044028480087202, 'I(U_I^2)': 0.8630878132126082, 'I(RT_I^2)': 0.009460234704595536, 'I(T2_J^2)': 0.5134216116900009, 'I(U1_I^2)': 0.10595363280492366, 'RT_I': 0.00032893752920557895, 'I(T1_I^2)': 0.037040806611144304, 'I(T1_J^2)': 0.02842125803217243, 'I(U_J^2)': 0.11894404309252075, 'RT_J': 0.1941479116739331, 'T1_I': 0.17682364162218742}
Ordered Keys: 
['RT_I', 'I(RT_J^2)', 'U1_I', 'I(T2_I^2)', 'T2_J', 'I(RT_I^2)', 'U_I', 'I(T1_J^2)', 'I(T1_I^2)', 'T2_I', 'T1_J', 'I(U1_I^2)', 'I(U_J^2)', 'T1_I', 'RT_J', 'U_J', 'I(T2_J^2)', 'I(U_I^2)']
Variables within threshold: ['RT_I', 'I(RT_J^2)', 'U1_I', 'I(T2_I^2)', 'T2_J', 'I(RT_I^2)']
Predicting Best Values for: ['RT_I', 'I(RT_J^2)', 'U1_I', 'I(T2_I^2)', 'T2_J', 'I(RT_I^2)']
Using Model: cost_mean ~ RT_I + I(RT_J^2) + U1_I + I(T2_I^2) + T2_J + I(RT_I^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I + I(RT_J^2) + U1_I + I(T2_I^2) + 
    T2_J + I(RT_I^2), tau = 0.05, data = structure(list(T1_I = c(2, 
0, 2, 5, 6, 7, 11, 4, 0, 5, 1, 0, 11, 0, 1, 8, 0, 0, 4, 11, 6, 
11), T1_J = c(0, 4, 1, 11, 0, 2, 4, 0, 11, 10, 4, 11, 6, 6, 1, 
0, 0, 0, 5, 11, 7, 0), T2_I = c(0, 5, 9, 6, 0, 7, 11, 11, 0, 
11, 11, 2, 0, 7, 0, 9, 8, 11, 0, 11, 7, 0), T2_J = c(0, 0, 10, 
0, 7, 4, 11, 0, 11, 10, 11, 11, 7, 6, 11, 10, 6, 7, 5, 0, 11, 
11), U1_I = c(19, 29, 29, 17, 14, 0, 22, 0, 25, 6, 8, 0, 1, 15, 
0, 27, 8, 5, 29, 27, 1, 19), U_I = c(0, 10, 0, 29, 12, 0, 26, 
22, 0, 0, 0, 16, 0, 0, 29, 0, 29, 14, 26, 0, 0, 2), U_J = c(7, 
0, 0, 0, 0, 29, 0, 0, 28, 0, 29, 0, 9, 14, 0, 21, 0, 0, 0, 21, 
19, 0), RT_I = c(2, 5, 2, 4, 5, 2, 3, 0, 2, 5, 0, 0, 3, 0, 5, 
5, 0, 2, 0, 0, 2, 0), RT_J = c(1, 1, 0, 0, 0, 2, 2, 2, 3, 2, 
0, 0, 0, 2, 1, 0, 5, 5, 5, 5, 5, 5), cost_mean = c(3.159918, 
5.762395, 3.75185, 3.417931, 5.537929, 4.15825, 3.40477, 4.580811, 
3.339292, 6.932546, 4.684676, 4.781224, 3.667211, 4.582772, 4.583685, 
6.136073, 9.237129, 4.188535, 4.768618, 4.582752, 3.978157, 4.086659
)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = c("1654", "1827", 
"2360", "4712", "5719", "5748", "5825", "7369", "8886", "9332", 
"9875", "10473", "11041", "11369", "11695", "12134", "12303", 
"13724", "16256", "16370", "17288", "17521"), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.434590e+00 -1.797693e+308   6.100350e+00
RT_I         -7.285300e-01 -1.797693e+308  1.797693e+308
I(RT_J^2)    -6.410000e-03 -1.797693e+308  1.797693e+308
U1_I         -2.416000e-02 -1.797693e+308  1.797693e+308
I(T2_I^2)     1.420000e-03 -1.797693e+308  1.797693e+308
T2_J          2.468000e-02 -1.797693e+308  1.797693e+308
I(RT_I^2)     1.410700e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 249453
Valid coordinates: 10560/52800
Tested coordinates: 504279
Valid coordinates: 15840/52800
Tested coordinates: 754396
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1011548
Valid coordinates: 26400/52800
Tested coordinates: 1262495
Valid coordinates: 31680/52800
Tested coordinates: 1517739
Valid coordinates: 36960/52800
Tested coordinates: 1772949
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2024455
Valid coordinates: 47520/52800
Tested coordinates: 2277324
Valid coordinates: 52800/52800
Tested coordinates: 2523646
Valid/Tested configurations: 52800/2523646
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.002694153846208248, 'T1_J': 0.07391549467793992, 'T2_J': 0.008822242617276384, 'U_J': 0.37538594656219326, 'U_I': 0.01527005236100321, 'I(T2_I^2)': 0.008783824882741776, 'T2_I': 0.0374359624507587, 'U1_I': 0.005044028480087202, 'I(U_I^2)': 0.8630878132126082, 'I(RT_I^2)': 0.009460234704595536, 'I(T2_J^2)': 0.5134216116900009, 'I(U1_I^2)': 0.10595363280492366, 'RT_I': 0.00032893752920557895, 'I(T1_I^2)': 0.037040806611144304, 'I(T1_J^2)': 0.02842125803217243, 'I(U_J^2)': 0.11894404309252075, 'RT_J': 0.1941479116739331, 'T1_I': 0.17682364162218742}
Ordered Keys: 
['RT_I', 'I(RT_J^2)', 'U1_I', 'I(T2_I^2)', 'T2_J', 'I(RT_I^2)', 'U_I', 'I(T1_J^2)', 'I(T1_I^2)', 'T2_I', 'T1_J', 'I(U1_I^2)', 'I(U_J^2)', 'T1_I', 'RT_J', 'U_J', 'I(T2_J^2)', 'I(U_I^2)']
Variables within threshold: ['RT_I', 'RT_J', 'U1_I', 'T2_I', 'T2_J']
Unique Variables: ['RT_I', 'RT_J', 'U1_I', 'T2_I', 'T2_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.002694153846208248, 'T1_J': 0.07391549467793992, 'T2_J': 0.008822242617276384, 'U_J': 0.37538594656219326, 'U_I': 0.01527005236100321, 'I(T2_I^2)': 0.008783824882741776, 'T2_I': 0.0374359624507587, 'U1_I': 0.005044028480087202, 'I(U_I^2)': 0.8630878132126082, 'I(RT_I^2)': 0.009460234704595536, 'I(T2_J^2)': 0.5134216116900009, 'I(U1_I^2)': 0.10595363280492366, 'RT_I': 0.00032893752920557895, 'I(T1_I^2)': 0.037040806611144304, 'I(T1_J^2)': 0.02842125803217243, 'I(U_J^2)': 0.11894404309252075, 'RT_J': 0.1941479116739331, 'T1_I': 0.17682364162218742}
Ordered Keys: 
['RT_I', 'I(RT_J^2)', 'U1_I', 'I(T2_I^2)', 'T2_J', 'I(RT_I^2)', 'U_I', 'I(T1_J^2)', 'I(T1_I^2)', 'T2_I', 'T1_J', 'I(U1_I^2)', 'I(U_J^2)', 'T1_I', 'RT_J', 'U_J', 'I(T2_J^2)', 'I(U_I^2)']
Variables within threshold: ['RT_I', 'RT_J', 'U1_I', 'T2_I', 'T2_J']
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
23581    4    2    0    0   29  23   0    2    5

Best From Design: [2, 0, 0, 0, 19, 0, 7, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.752796
Baseline Point:
4.752796
Design Best Point:
[2, 0, 0, 0, 19, 0, 7, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.664854540359
Predicted Best Point:
[4, 2, 0, 0, 29, 23, 0, 2, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 2, 0, 0, 29, 23, 0, 2, 5]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		12721
        Multiplications: 	3828
        Divisions: 		0
        Logical: 		0
        Reads: 			19353
        Writes: 		2001
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.122287
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.664854540359
Slowdown (Predicted Best): 0.867339351405
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.159918
Current Best Point: 
[2, 0, 0, 0, 19, 0, 7, 2, 1]
Step 1
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 11326
Valid coordinates: 1600/8000
Tested coordinates: 23144
Valid coordinates: 2400/8000
Tested coordinates: 35512
Valid coordinates: 3200/8000
Tested coordinates: 46982
Valid coordinates: 4000/8000
Tested coordinates: 59040
Valid coordinates: 4800/8000
Tested coordinates: 71345
Valid coordinates: 5600/8000
Tested coordinates: 84110
Valid coordinates: 6400/8000
Tested coordinates: 96474
Valid coordinates: 7200/8000
Tested coordinates: 108774
Valid coordinates: 8000/8000
Tested coordinates: 120459
Valid/Tested configurations: 8000/120459
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 78400     9

Pruned data dimensions: [1] 8002    9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Clean Info:
One-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
Two-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
Three-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 8002    9

Coded data: NULL
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
10      4   11    0    0   29  29   0    2    5
1103   11    0    0    0   29  29   0    2    5
2093    7    0    0    0   29   0  15    2    5
2273   11    6    0    0   29   0   0    2    5
2280    0    0    0    0   29   0   0    2    5
4443   11   11    0    0   29   0  29    2    5
4446    7   11    0    0   29  12   0    2    5
4670    0   11    0    0   29   0  15    2    5
4994    0    5    0    0   29  17   0    2    5
7251    5    5    0    0   29   0  29    2    5

D-Efficiency Approximation: [1] 0.2759713

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		15439
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23325
        Writes: 		2403
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.959294
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		15152
        Multiplications: 	4496
        Divisions: 		0
        Logical: 		0
        Reads: 			22671
        Writes: 		2332
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.178934
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		2779
        Multiplications: 	912
        Divisions: 		0
        Logical: 		0
        Reads: 			4683
        Writes: 		508
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.957214
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1993
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3435
        Writes: 		385
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.005038
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	2
        Additions: 		1973
        Multiplications: 	656
        Divisions: 		0
        Logical: 		0
        Reads: 			3387
        Writes: 		376
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.947484
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3794
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6457
        Writes: 		689
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.175106
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		7738
        Multiplications: 	2376
        Divisions: 		0
        Logical: 		0
        Reads: 			12071
        Writes: 		1264
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.962731
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		2949
        Multiplications: 	980
        Divisions: 		0
        Logical: 		0
        Reads: 			5049
        Writes: 		547
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.951645
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		9990
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15370
        Writes: 		1597
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.141813
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3794
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6457
        Writes: 		689
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.303586
Complete design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
10      4   11    0    0   29  29   0    2    5  3.959294
1103   11    0    0    0   29  29   0    2    5  4.178934
2093    7    0    0    0   29   0  15    2    5  3.957214
2273   11    6    0    0   29   0   0    2    5  4.005038
2280    0    0    0    0   29   0   0    2    5  3.947484
4443   11   11    0    0   29   0  29    2    5  4.175106
4446    7   11    0    0   29  12   0    2    5  3.962731
4670    0   11    0    0   29   0  15    2    5  3.951645
4994    0    5    0    0   29  17   0    2    5  4.141813
7251    5    5    0    0   29   0  29    2    5  4.303586

Clean design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
10      4   11    0    0   29  29   0    2    5  3.959294
1103   11    0    0    0   29  29   0    2    5  4.178934
2093    7    0    0    0   29   0  15    2    5  3.957214
2273   11    6    0    0   29   0   0    2    5  4.005038
2280    0    0    0    0   29   0   0    2    5  3.947484
4443   11   11    0    0   29   0  29    2    5  4.175106
4446    7   11    0    0   29  12   0    2    5  3.962731
4670    0   11    0    0   29   0  15    2    5  3.951645
4994    0    5    0    0   29  17   0    2    5  4.141813
7251    5    5    0    0   29   0  29    2    5  4.303586

Clean encoded design, with measurements:
          T1_Ie      T1_Je T2_Ie T2_Je     U1_Ie       U_Ie       U_Je
10   -0.3333333  0.8333333    -1    -1 0.9333333  0.9333333 -1.0000000
1103  0.8333333 -1.0000000    -1    -1 0.9333333  0.9333333 -1.0000000
2093  0.1666667 -1.0000000    -1    -1 0.9333333 -1.0000000  0.0000000
2273  0.8333333  0.0000000    -1    -1 0.9333333 -1.0000000 -1.0000000
2280 -1.0000000 -1.0000000    -1    -1 0.9333333 -1.0000000 -1.0000000
4443  0.8333333  0.8333333    -1    -1 0.9333333 -1.0000000  0.9333333
4446  0.1666667  0.8333333    -1    -1 0.9333333 -0.2000000 -1.0000000
4670 -1.0000000  0.8333333    -1    -1 0.9333333 -1.0000000  0.0000000
4994 -1.0000000 -0.1666667    -1    -1 0.9333333  0.1333333 -1.0000000
7251 -0.1666667 -0.1666667    -1    -1 0.9333333 -1.0000000  0.9333333
          RT_Ie     RT_Je cost_mean
10   -0.3333333 0.6666667  3.959294
1103 -0.3333333 0.6666667  4.178934
2093 -0.3333333 0.6666667  3.957214
2273 -0.3333333 0.6666667  4.005038
2280 -0.3333333 0.6666667  3.947484
4443 -0.3333333 0.6666667  4.175106
4446 -0.3333333 0.6666667  3.962731
4670 -0.3333333 0.6666667  3.951645
4994 -0.3333333 0.6666667  4.141813
7251 -0.3333333 0.6666667  4.303586

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(U_I^2) + I(U_J^2) + T1_I + 
    T1_J + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 32 10

Pruned data dimensions: [1] 10 10

Heteroscedasticity Test p-value: 0.685160811838
Heteroscedasticity transform NOT required.
Regression Step:            Df  Sum Sq Mean Sq F value Pr(>F)
I(T1_I^2)    1 0.01213 0.01213   2.478  0.360
I(T1_J^2)    1 0.00810 0.00810   1.655  0.421
I(U_I^2)     1 0.00041 0.00041   0.083  0.821
I(U_J^2)     1 0.08854 0.08854  18.092  0.147
T1_I         1 0.00431 0.00431   0.881  0.520
T1_J         1 0.02010 0.02010   4.108  0.292
U_I          1 0.01238 0.01238   2.529  0.357
U_J          1 0.00012 0.00012   0.024  0.902
Residuals    1 0.00489 0.00489               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:      cost_mean
10    3.959294
1103  4.178934
2093  3.957214
2273  4.005038
2280  3.947484
4443  4.175106
4446  3.962731
4670  3.951645
4994  4.141813
7251  4.303586

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.520162159727369, 'T1_J': 0.2917917414837812, 'U_J': 0.9020127459029686, 'U_I': 0.35734326142083916, 'I(U_I^2)': 0.8213109615110032, 'I(T1_I^2)': 0.36026645177212246, 'I(T1_J^2)': 0.42069341296130114, 'I(U_J^2)': 0.1470003760959749}
Ordered Keys: 
['I(U_J^2)', 'T1_J', 'U_I', 'I(T1_I^2)', 'I(T1_J^2)', 'T1_I', 'I(U_I^2)', 'U_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 32 10

Pruned data dimensions: [1] 10 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(U_I^2) + I(U_J^2) + 
    T1_I + T1_J + U_I + U_J, tau = 0.05, data = structure(list(
    T1_I = c(4, 11, 7, 11, 0, 11, 7, 0, 0, 5), T1_J = c(11, 0, 
    0, 6, 0, 11, 11, 11, 5, 5), T2_I = c(0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0), T2_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0), U1_I = c(29, 
    29, 29, 29, 29, 29, 29, 29, 29, 29), U_I = c(29, 29, 0, 0, 
    0, 0, 12, 0, 17, 0), U_J = c(0, 0, 15, 0, 0, 29, 0, 15, 0, 
    29), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(5, 
    5, 5, 5, 5, 5, 5, 5, 5, 5), cost_mean = c(3.959294, 4.178934, 
    3.957214, 4.005038, 3.947484, 4.175106, 3.962731, 3.951645, 
    4.141813, 4.303586)), .Names = c("T1_I", "T1_J", "T2_I", 
"T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = 23:32, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.947480e+00 -1.797693e+308  1.797693e+308
I(T1_I^2)     5.900000e-04 -1.797693e+308  1.797693e+308
I(T1_J^2)    -3.610000e-03 -1.797693e+308  1.797693e+308
I(U_I^2)     -2.800000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)      5.200000e-04 -1.797693e+308  1.797693e+308
T1_I         -9.130000e-03 -1.797693e+308  1.797693e+308
T1_J          3.608000e-02 -1.797693e+308  1.797693e+308
U_I           1.095000e-02 -1.797693e+308  1.797693e+308
U_J          -4.810000e-03 -1.797693e+308  1.797693e+308

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 35964
Valid coordinates: 4800/24000
Tested coordinates: 72081
Valid coordinates: 7200/24000
Tested coordinates: 109392
Valid coordinates: 9600/24000
Tested coordinates: 144850
Valid coordinates: 12000/24000
Tested coordinates: 181826
Valid coordinates: 14400/24000
Tested coordinates: 218593
Valid coordinates: 16800/24000
Tested coordinates: 256058
Valid coordinates: 19200/24000
Tested coordinates: 291741
Valid coordinates: 21600/24000
Tested coordinates: 327843
Valid coordinates: 24000/24000
Tested coordinates: 364015
Valid/Tested configurations: 24000/364015
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 102400      9

Pruned data dimensions: [1] 32002     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.520162159727369, 'T1_J': 0.2917917414837812, 'U_J': 0.9020127459029686, 'U_I': 0.35734326142083916, 'I(U_I^2)': 0.8213109615110032, 'I(T1_I^2)': 0.36026645177212246, 'I(T1_J^2)': 0.42069341296130114, 'I(U_J^2)': 0.1470003760959749}
Ordered Keys: 
['I(U_J^2)', 'T1_J', 'U_I', 'I(T1_I^2)', 'I(T1_J^2)', 'T1_I', 'I(U_I^2)', 'U_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.520162159727369, 'T1_J': 0.2917917414837812, 'U_J': 0.9020127459029686, 'U_I': 0.35734326142083916, 'I(U_I^2)': 0.8213109615110032, 'I(T1_I^2)': 0.36026645177212246, 'I(T1_J^2)': 0.42069341296130114, 'I(U_J^2)': 0.1470003760959749}
Ordered Keys: 
['I(U_J^2)', 'T1_J', 'U_I', 'I(T1_I^2)', 'I(T1_J^2)', 'T1_I', 'I(U_I^2)', 'U_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
14340    0    3    0    4   27   0   2    0    5

Best From Design: [0, 0, 0, 0, 29, 0, 0, 2, 5]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.752796
Design Best Point:
[0, 0, 0, 0, 29, 0, 0, 2, 5]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.830560369096
Predicted Best Point:
[0, 3, 0, 4, 27, 0, 2, 0, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 3, 0, 4, 27, 0, 2, 0, 5]
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		370
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			834
        Writes: 		118
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.097881
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.830560369096
Slowdown (Predicted Best): 1.07260673507
Budget: 32/1000
Best point from design was better than predicted point
Current Best Point: 
[2, 0, 0, 0, 19, 0, 7, 2, 1]
Step 2
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 12411
Valid coordinates: 1600/8000
Tested coordinates: 24773
Valid coordinates: 2400/8000
Tested coordinates: 38056
Valid coordinates: 3200/8000
Tested coordinates: 50590
Valid coordinates: 4000/8000
Tested coordinates: 62853
Valid coordinates: 4800/8000
Tested coordinates: 74739
Valid coordinates: 5600/8000
Tested coordinates: 86659
Valid coordinates: 6400/8000
Tested coordinates: 99242
Valid coordinates: 7200/8000
Tested coordinates: 111492
Valid coordinates: 8000/8000
Tested coordinates: 123940
Valid/Tested configurations: 8000/123940
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 110400      9

Pruned data dimensions: [1] 40002     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Clean Info:
One-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
Two-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
Three-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 40002     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
86      11    6    0    0   29  14   0    2    5
4615     0    4    0    0   29  29   0    2    5
5510     0   11    0    0   29   0   0    2    5
6371     4    4    0    0   29   0  12    2    5
11234   11    0    0    0   29   0   0    2    5
14562    7   11    0    0   29  29   0    2    5
15133    0    0    0    0   29   0  29    2    5
15335    6    6    0    0   29   0  29    2    5
16708    4    0    0    0   29  15   0    2    5
26393   11   11    0    0   29   0  17    2    5

D-Efficiency Approximation: [1] 0.2772972

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		8644
        Multiplications: 	2640
        Divisions: 		0
        Logical: 		0
        Reads: 			13395
        Writes: 		1398
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.000163
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		15426
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23314
        Writes: 		2401
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.74159
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		1988
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3427
        Writes: 		383
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.949381
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2774
        Multiplications: 	920
        Divisions: 		0
        Logical: 		0
        Reads: 			4757
        Writes: 		519
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.875766
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	3
        Additions: 		1978
        Multiplications: 	656
        Divisions: 		0
        Logical: 		0
        Reads: 			3395
        Writes: 		378
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.951849
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		15439
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23325
        Writes: 		2403
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.064275
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	2
        Additions: 		3488
        Multiplications: 	1136
        Divisions: 		0
        Logical: 		0
        Reads: 			5795
        Writes: 		618
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.956885
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3794
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6457
        Writes: 		689
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.137499
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		8936
        Multiplications: 	2704
        Divisions: 		0
        Logical: 		0
        Reads: 			13683
        Writes: 		1422
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.959183
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		3074
        Multiplications: 	1020
        Divisions: 		0
        Logical: 		0
        Reads: 			5257
        Writes: 		569
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.94521
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
86      11    6    0    0   29  14   0    2    5  4.000163
4615     0    4    0    0   29  29   0    2    5  3.741590
5510     0   11    0    0   29   0   0    2    5  3.949381
6371     4    4    0    0   29   0  12    2    5  3.875766
11234   11    0    0    0   29   0   0    2    5  3.951849
14562    7   11    0    0   29  29   0    2    5  4.064275
15133    0    0    0    0   29   0  29    2    5  3.956885
15335    6    6    0    0   29   0  29    2    5  4.137499
16708    4    0    0    0   29  15   0    2    5  3.959183
26393   11   11    0    0   29   0  17    2    5  3.945210

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
86      11    6    0    0   29  14   0    2    5  4.000163
4615     0    4    0    0   29  29   0    2    5  3.741590
5510     0   11    0    0   29   0   0    2    5  3.949381
6371     4    4    0    0   29   0  12    2    5  3.875766
11234   11    0    0    0   29   0   0    2    5  3.951849
14562    7   11    0    0   29  29   0    2    5  4.064275
15133    0    0    0    0   29   0  29    2    5  3.956885
15335    6    6    0    0   29   0  29    2    5  4.137499
16708    4    0    0    0   29  15   0    2    5  3.959183
26393   11   11    0    0   29   0  17    2    5  3.945210

Clean encoded design, with measurements:
           T1_Ie      T1_Je T2_Ie T2_Je     U1_Ie        U_Ie       U_Je
86     0.8333333  0.0000000    -1    -1 0.9333333 -0.06666667 -1.0000000
4615  -1.0000000 -0.3333333    -1    -1 0.9333333  0.93333333 -1.0000000
5510  -1.0000000  0.8333333    -1    -1 0.9333333 -1.00000000 -1.0000000
6371  -0.3333333 -0.3333333    -1    -1 0.9333333 -1.00000000 -0.2000000
11234  0.8333333 -1.0000000    -1    -1 0.9333333 -1.00000000 -1.0000000
14562  0.1666667  0.8333333    -1    -1 0.9333333  0.93333333 -1.0000000
15133 -1.0000000 -1.0000000    -1    -1 0.9333333 -1.00000000  0.9333333
15335  0.0000000  0.0000000    -1    -1 0.9333333 -1.00000000  0.9333333
16708 -0.3333333 -1.0000000    -1    -1 0.9333333  0.00000000 -1.0000000
26393  0.8333333  0.8333333    -1    -1 0.9333333 -1.00000000  0.1333333
           RT_Ie     RT_Je cost_mean
86    -0.3333333 0.6666667  4.000163
4615  -0.3333333 0.6666667  3.741590
5510  -0.3333333 0.6666667  3.949381
6371  -0.3333333 0.6666667  3.875766
11234 -0.3333333 0.6666667  3.951849
14562 -0.3333333 0.6666667  4.064275
15133 -0.3333333 0.6666667  3.956885
15335 -0.3333333 0.6666667  4.137499
16708 -0.3333333 0.6666667  3.959183
26393 -0.3333333 0.6666667  3.945210

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(U_I^2) + I(U_J^2) + T1_I + 
    T1_J + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 42 10

Pruned data dimensions: [1] 20 10

Heteroscedasticity Test p-value: 0.920399491373
Heteroscedasticity transform NOT required.
Regression Step:            Df  Sum Sq Mean Sq F value Pr(>F)  
I(T1_I^2)    1 0.01991 0.01991   1.358 0.2686  
I(T1_J^2)    1 0.00001 0.00001   0.000 0.9833  
I(U_I^2)     1 0.00097 0.00097   0.066 0.8016  
I(U_J^2)     1 0.08166 0.08166   5.569 0.0378 *
T1_I         1 0.00598 0.00598   0.408 0.5360  
T1_J         1 0.00323 0.00323   0.220 0.6480  
U_I          1 0.01191 0.01191   0.812 0.3867  
U_J          1 0.01526 0.01526   1.040 0.3297  
Residuals   11 0.16131 0.01466                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
86     4.000163
4615   3.741590
5510   3.949381
6371   3.875766
11234  3.951849
14562  4.064275
15133  3.956885
15335  4.137499
16708  3.959183
26393  3.945210

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.5360310510705713, 'T1_J': 0.647951955994976, 'U_J': 0.3296602913225829, 'U_I': 0.38671562970924966, 'I(U_I^2)': 0.8015919691431864, 'I(T1_I^2)': 0.26855527803406515, 'I(T1_J^2)': 0.9832691611184095, 'I(U_J^2)': 0.03782674000576699}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'U_J', 'U_I', 'T1_I', 'T1_J', 'I(U_I^2)', 'I(T1_J^2)']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 42 10

Pruned data dimensions: [1] 20 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(U_I^2) + I(U_J^2) + 
    T1_I + T1_J + U_I + U_J, tau = 0.05, data = structure(list(
    T1_I = c(4, 11, 7, 11, 0, 11, 7, 0, 0, 5, 11, 0, 0, 4, 11, 
    7, 0, 6, 4, 11), T1_J = c(11, 0, 0, 6, 0, 11, 11, 11, 5, 
    5, 6, 4, 11, 4, 0, 11, 0, 6, 0, 11), T2_I = c(0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), T2_J = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), 
    U1_I = c(29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
    29, 29, 29, 29, 29, 29, 29, 29), U_I = c(29, 29, 0, 0, 0, 
    0, 12, 0, 17, 0, 14, 29, 0, 0, 0, 29, 0, 0, 15, 0), U_J = c(0, 
    0, 15, 0, 0, 29, 0, 15, 0, 29, 0, 0, 0, 12, 0, 0, 29, 29, 
    0, 17), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2), RT_J = c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5), cost_mean = c(3.959294, 4.178934, 
    3.957214, 4.005038, 3.947484, 4.175106, 3.962731, 3.951645, 
    4.141813, 4.303586, 4.000163, 3.74159, 3.949381, 3.875766, 
    3.951849, 4.064275, 3.956885, 4.137499, 3.959183, 3.94521
    )), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", "U_I", 
"U_J", "RT_I", "RT_J", "cost_mean"), row.names = 23:42, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.854430e+00 -1.797693e+308   3.916180e+00
I(T1_I^2)    -3.440000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)     9.100000e-04 -1.797693e+308  1.797693e+308
I(U_I^2)      4.600000e-04 -1.797693e+308  1.797693e+308
I(U_J^2)      7.900000e-04 -1.797693e+308  1.797693e+308
T1_I          4.667000e-02 -1.797693e+308  1.797693e+308
T1_J         -1.430000e-03 -1.797693e+308  1.797693e+308
U_I          -1.763000e-02 -1.797693e+308  1.797693e+308
U_J          -1.945000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 37380
Valid coordinates: 4800/24000
Tested coordinates: 72877
Valid coordinates: 7200/24000
Tested coordinates: 109300
Valid coordinates: 9600/24000
Tested coordinates: 145508
Valid coordinates: 12000/24000
Tested coordinates: 182190
Valid coordinates: 14400/24000
Tested coordinates: 218457
Valid coordinates: 16800/24000
Tested coordinates: 254705
Valid coordinates: 19200/24000
Tested coordinates: 292767
Valid coordinates: 21600/24000
Tested coordinates: 328978
Valid coordinates: 24000/24000
Tested coordinates: 365641
Valid/Tested configurations: 24000/365641
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 134400      9

Pruned data dimensions: [1] 64002     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.5360310510705713, 'T1_J': 0.647951955994976, 'U_J': 0.3296602913225829, 'U_I': 0.38671562970924966, 'I(U_I^2)': 0.8015919691431864, 'I(T1_I^2)': 0.26855527803406515, 'I(T1_J^2)': 0.9832691611184095, 'I(U_J^2)': 0.03782674000576699}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'U_J', 'U_I', 'T1_I', 'T1_J', 'I(U_I^2)', 'I(T1_J^2)']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.5360310510705713, 'T1_J': 0.647951955994976, 'U_J': 0.3296602913225829, 'U_I': 0.38671562970924966, 'I(U_I^2)': 0.8015919691431864, 'I(T1_I^2)': 0.26855527803406515, 'I(T1_J^2)': 0.9832691611184095, 'I(U_J^2)': 0.03782674000576699}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'U_J', 'U_I', 'T1_I', 'T1_J', 'I(U_I^2)', 'I(T1_J^2)']
No variables within acceptable threshold
Best Predicted:      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1451    4    4    5    9   17  18   0    1    5

Best From Design: [0, 4, 0, 0, 29, 29, 0, 2, 5]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.752796
Design Best Point:
[0, 4, 0, 0, 29, 29, 0, 2, 5]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.78723976371
Predicted Best Point:
[4, 4, 5, 9, 17, 18, 0, 1, 5]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 4, 5, 9, 17, 18, 0, 1, 5]
Length of requested configs: 1
Code stats:
        Number of loops: 	19
        Max loop nest depth: 	6
        Additions: 		9552
        Multiplications: 	2904
        Divisions: 		0
        Logical: 		0
        Reads: 			14727
        Writes: 		1530
        Comparisons:		19
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.75864
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.78723976371
Slowdown (Predicted Best): 0.790827125759
Budget: 42/1000
Best point from design was better than predicted point
Current Best Point: 
[2, 0, 0, 0, 19, 0, 7, 2, 1]
Step 3
Generating valid search space of size 8000 (does not spend evaluations)
Valid coordinates: 800/8000
Tested coordinates: 12447
Valid coordinates: 1600/8000
Tested coordinates: 23555
Valid coordinates: 2400/8000
Tested coordinates: 35595
Valid coordinates: 3200/8000
Tested coordinates: 47606
Valid coordinates: 4000/8000
Tested coordinates: 59266
Valid coordinates: 4800/8000
Tested coordinates: 71473
Valid coordinates: 5600/8000
Tested coordinates: 83875
Valid coordinates: 6400/8000
Tested coordinates: 96063
Valid coordinates: 7200/8000
Tested coordinates: 108747
Valid coordinates: 8000/8000
Tested coordinates: 121175
Valid/Tested configurations: 8000/121175
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 142400      9

Pruned data dimensions: [1] 72002     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Clean Info:
One-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
Two-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
Three-Level Factors: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'U_I', 'U_J']
Clean 2 Level Factors/Terms: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['T2_I', 'T2_J', 'U1_I', 'RT_I', 'RT_J', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 10 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + T1_Ie + T1_Je + U_Ie + U_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 72002     9

Coded data: NULL
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1103   11    0    0    0   29  29   0    2    5
2070    4    7    0    0   29  29   0    2    5
2280    0    0    0    0   29   0   0    2    5
3016    0   11    0    0   29  18   0    2    5
3510    6   11    0    0   29   0   0    2    5
4361    8    3    0    0   29  13   0    2    5
4443   11   11    0    0   29   0  29    2    5
5493    0    5    0    0   29   0  29    2    5
5724    5    0    0    0   29   0  17    2    5
6112   11    6    0    0   29   0  11    2    5

D-Efficiency Approximation: [1] 0.2771127

Measuring design of size 10
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		15439
        Multiplications: 	4620
        Divisions: 		0
        Logical: 		0
        Reads: 			23325
        Writes: 		2403
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.976676
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	3
        Additions: 		10443
        Multiplications: 	3168
        Divisions: 		0
        Logical: 		0
        Reads: 			16032
        Writes: 		1664
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.941987
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1993
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3435
        Writes: 		385
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.957554
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		8191
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12733
        Writes: 		1331
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.765884
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	3
        Additions: 		3789
        Multiplications: 	1260
        Divisions: 		0
        Logical: 		0
        Reads: 			6449
        Writes: 		687
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.088916
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		2881
        Multiplications: 	944
        Divisions: 		0
        Logical: 		0
        Reads: 			4843
        Writes: 		524
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.956336
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		2714
        Multiplications: 	900
        Divisions: 		0
        Logical: 		0
        Reads: 			4657
        Writes: 		509
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.005604
Complete design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1103   11    0    0    0   29  29   0    2    5  4.178934
2070    4    7    0    0   29  29   0    2    5  3.976676
2280    0    0    0    0   29   0   0    2    5  3.947484
3016    0   11    0    0   29  18   0    2    5  3.941987
3510    6   11    0    0   29   0   0    2    5  3.957554
4361    8    3    0    0   29  13   0    2    5  3.765884
4443   11   11    0    0   29   0  29    2    5  4.175106
5493    0    5    0    0   29   0  29    2    5  4.088916
5724    5    0    0    0   29   0  17    2    5  3.956336
6112   11    6    0    0   29   0  11    2    5  4.005604

Clean design, with measurements:
     T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1103   11    0    0    0   29  29   0    2    5  4.178934
2070    4    7    0    0   29  29   0    2    5  3.976676
2280    0    0    0    0   29   0   0    2    5  3.947484
3016    0   11    0    0   29  18   0    2    5  3.941987
3510    6   11    0    0   29   0   0    2    5  3.957554
4361    8    3    0    0   29  13   0    2    5  3.765884
4443   11   11    0    0   29   0  29    2    5  4.175106
5493    0    5    0    0   29   0  29    2    5  4.088916
5724    5    0    0    0   29   0  17    2    5  3.956336
6112   11    6    0    0   29   0  11    2    5  4.005604

Clean encoded design, with measurements:
          T1_Ie      T1_Je T2_Ie T2_Je     U1_Ie       U_Ie       U_Je
1103  0.8333333 -1.0000000    -1    -1 0.9333333  0.9333333 -1.0000000
2070 -0.3333333  0.1666667    -1    -1 0.9333333  0.9333333 -1.0000000
2280 -1.0000000 -1.0000000    -1    -1 0.9333333 -1.0000000 -1.0000000
3016 -1.0000000  0.8333333    -1    -1 0.9333333  0.2000000 -1.0000000
3510  0.0000000  0.8333333    -1    -1 0.9333333 -1.0000000 -1.0000000
4361  0.3333333 -0.5000000    -1    -1 0.9333333 -0.1333333 -1.0000000
4443  0.8333333  0.8333333    -1    -1 0.9333333 -1.0000000  0.9333333
5493 -1.0000000 -0.1666667    -1    -1 0.9333333 -1.0000000  0.9333333
5724 -0.1666667 -1.0000000    -1    -1 0.9333333 -1.0000000  0.1333333
6112  0.8333333  0.0000000    -1    -1 0.9333333 -1.0000000 -0.2666667
          RT_Ie     RT_Je cost_mean
1103 -0.3333333 0.6666667  4.178934
2070 -0.3333333 0.6666667  3.976676
2280 -0.3333333 0.6666667  3.947484
3016 -0.3333333 0.6666667  3.941987
3510 -0.3333333 0.6666667  3.957554
4361 -0.3333333 0.6666667  3.765884
4443 -0.3333333 0.6666667  4.175106
5493 -0.3333333 0.6666667  4.088916
5724 -0.3333333 0.6666667  3.956336
6112 -0.3333333 0.6666667  4.005604

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + T1_I + T1_J + U_I + U_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(U_I^2) + I(U_J^2) + T1_I + 
    T1_J + U_I + U_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 52 10

Pruned data dimensions: [1] 30 10

Heteroscedasticity Test p-value: 0.98643246113
Heteroscedasticity transform NOT required.
Regression Step:            Df  Sum Sq Mean Sq F value  Pr(>F)   
I(T1_I^2)    1 0.04393 0.04393   3.849 0.06317 . 
I(T1_J^2)    1 0.00093 0.00093   0.081 0.77838   
I(U_I^2)     1 0.00009 0.00009   0.008 0.92935   
I(U_J^2)     1 0.13716 0.13716  12.016 0.00231 **
T1_I         1 0.00001 0.00001   0.000 0.98261   
T1_J         1 0.00019 0.00019   0.017 0.89729   
U_I          1 0.00087 0.00087   0.076 0.78542   
U_J          1 0.01366 0.01366   1.197 0.28633   
Residuals   21 0.23972 0.01142                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:      cost_mean
1103  4.178934
2070  3.976676
2280  3.947484
3016  3.941987
3510  3.957554
4361  3.765884
4443  4.175106
5493  4.088916
5724  3.956336
6112  4.005604

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'T1_I': 0.9826097439503101, 'T1_J': 0.8972873332292648, 'U_J': 0.2863303349198436, 'U_I': 0.7854213573699764, 'I(U_I^2)': 0.9293501786052868, 'I(T1_I^2)': 0.06317223380387796, 'I(T1_J^2)': 0.7783783416447113, 'I(U_J^2)': 0.002308350617282331}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'U_J', 'I(T1_J^2)', 'U_I', 'T1_J', 'I(U_I^2)', 'T1_I']
Variables within threshold: ['I(U_J^2)']
Predicting Best Values for: ['I(U_J^2)']
Using Model: cost_mean ~ I(U_J^2)
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 52 10

Pruned data dimensions: [1] 30 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(U_J^2), tau = 0.05, data = structure(list(
    T1_I = c(4, 11, 7, 11, 0, 11, 7, 0, 0, 5, 11, 0, 0, 4, 11, 
    7, 0, 6, 4, 11, 11, 4, 0, 0, 6, 8, 11, 0, 5, 11), T1_J = c(11, 
    0, 0, 6, 0, 11, 11, 11, 5, 5, 6, 4, 11, 4, 0, 11, 0, 6, 0, 
    11, 0, 7, 0, 11, 11, 3, 11, 5, 0, 6), T2_I = c(0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0), T2_J = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0), U1_I = c(29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
    29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
    29, 29, 29, 29), U_I = c(29, 29, 0, 0, 0, 0, 12, 0, 17, 0, 
    14, 29, 0, 0, 0, 29, 0, 0, 15, 0, 29, 29, 0, 18, 0, 13, 0, 
    0, 0, 0), U_J = c(0, 0, 15, 0, 0, 29, 0, 15, 0, 29, 0, 0, 
    0, 12, 0, 0, 29, 29, 0, 17, 0, 0, 0, 0, 0, 0, 29, 29, 17, 
    11), RT_I = c(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), RT_J = c(5, 
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5), cost_mean = c(3.959294, 4.178934, 
    3.957214, 4.005038, 3.947484, 4.175106, 3.962731, 3.951645, 
    4.141813, 4.303586, 4.000163, 3.74159, 3.949381, 3.875766, 
    3.951849, 4.064275, 3.956885, 4.137499, 3.959183, 3.94521, 
    4.178934, 3.976676, 3.947484, 3.941987, 3.957554, 3.765884, 
    4.175106, 4.088916, 3.956336, 4.005604)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = 23:52, class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.765880e+00 -1.797693e+308   3.859000e+00
I(U_J^2)      2.300000e-04 -1.797693e+308   3.100000e-04

Generating valid search space of size 24000 (does not spend evaluations)
Valid coordinates: 2400/24000
Tested coordinates: 36676
Valid coordinates: 4800/24000
Tested coordinates: 74556
Valid coordinates: 7200/24000
Tested coordinates: 111966
Valid coordinates: 9600/24000
Tested coordinates: 148630
Valid coordinates: 12000/24000
Tested coordinates: 185292
Valid coordinates: 14400/24000
Tested coordinates: 221490
Valid coordinates: 16800/24000
Tested coordinates: 258303
Valid coordinates: 19200/24000
Tested coordinates: 296696
Valid coordinates: 21600/24000
Tested coordinates: 334332
Valid coordinates: 24000/24000
Tested coordinates: 371218
Valid/Tested configurations: 24000/371218
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 166400      9

Pruned data dimensions: [1] 96002     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'T1_I': 0.9826097439503101, 'T1_J': 0.8972873332292648, 'U_J': 0.2863303349198436, 'U_I': 0.7854213573699764, 'I(U_I^2)': 0.9293501786052868, 'I(T1_I^2)': 0.06317223380387796, 'I(T1_J^2)': 0.7783783416447113, 'I(U_J^2)': 0.002308350617282331}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'U_J', 'I(T1_J^2)', 'U_I', 'T1_J', 'I(U_I^2)', 'T1_I']
Variables within threshold: ['U_J']
Unique Variables: ['U_J']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'T2_I': 0, 'U1_I': 29, 'RT_J': 5, 'RT_I': 2, 'T2_J': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I', 'U_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'T1_I': 0.9826097439503101, 'T1_J': 0.8972873332292648, 'U_J': 0.2863303349198436, 'U_I': 0.7854213573699764, 'I(U_I^2)': 0.9293501786052868, 'I(T1_I^2)': 0.06317223380387796, 'I(T1_J^2)': 0.7783783416447113, 'I(U_J^2)': 0.002308350617282331}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'U_J', 'I(T1_J^2)', 'U_I', 'T1_J', 'I(U_I^2)', 'T1_I']
Variables within threshold: ['U_J']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1    4    1    0    9    9  27   0    1    4

Best From Design: [8, 3, 0, 0, 29, 13, 0, 2, 5]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 5, 'RT_I': 2, 'U_J': 0, 'U1_I': 29, 'T2_J': 0, 'T2_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.752796
Design Best Point:
[8, 3, 0, 0, 29, 13, 0, 2, 5]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.792351281225
Predicted Best Point:
[4, 1, 0, 9, 9, 27, 0, 1, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[4, 1, 0, 9, 9, 27, 0, 1, 4]
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	5
        Additions: 		6914
        Multiplications: 	2108
        Divisions: 		0
        Logical: 		0
        Reads: 			10742
        Writes: 		1131
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.242499
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'U_I'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_J': 5, 'RT_I': 2, 'U_J': 0, 'U1_I': 29, 'T2_J': 0, 'T2_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'U_I'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.792351281225
Slowdown (Predicted Best): 0.892632252678
Budget: 52/1000
Best point from design was better than predicted point
Current Best Point: 
[2, 0, 0, 0, 19, 0, 7, 2, 1]
Final Best Point: 
[2, 0, 0, 0, 19, 0, 7, 2, 1]
Ending DLMT
Best Point: [2, 0, 0, 0, 19, 0, 7, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.50408839723
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.50408839723
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [2, 0, 0, 0, 19, 0, 7, 2, 1]={'T1_I': 4, 'T1_J': 1, 'U_J': 8, 'U_I': 1, 'T2_I': 1, 'T2_J': 1, 'U1_I': 20, 'RT_I': 4, 'RT_J': 2}, cost=3.159918e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-5622.76, runs=54
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 4
 T1_J = 1
 T2_I = 1
 T2_J = 1
 U1_I = 20
 U_I = 1
 U_J = 8
 cost_mean = 3.159918
 points = 54
 speedup = 1.50408839723
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	3
        Additions: 		561
        Multiplications: 	184
        Divisions: 		0
        Logical: 		0
        Reads: 			1023
        Writes: 		134
        Comparisons:		9
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
