
====== START ORIO ======

----- begin reading the source file: bicgkernel_no_binary.c -----
----- finished reading the source file -----

----- begin parsing annotations -----
----- finished parsing annotations -----

----- begin optimizations -----
Search_Space         = 2.016e+10
Number_of_Parameters = 09
Numeric_Parameters   = 09
Binary_Parameters    = 00
['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
[[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [1, 2, 4, 8, 16, 32], [1, 2, 4, 8, 16, 32]]

----- begin empirical tuning for problem size -----
 N = 40000
Parameters: {'T1_I': [0, 12], 'T1_J': [0, 12], 'U_J': [0, 30], 'U_I': [0, 30], 'T2_I': [0, 12], 'T2_J': [0, 12], 'U1_I': [0, 30], 'RT_I': [0, 6], 'RT_J': [0, 6]}
Parameter Range Values: {'T1_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T1_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U_J': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'U_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'T2_I': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'T2_J': [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048], 'U1_I': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'RT_I': [1, 2, 4, 8, 16, 32], 'RT_J': [1, 2, 4, 8, 16, 32]}
Federov Sampling Multiplier: 800
ANOVA Steps: 4
Extra Experiments in Designs: 1
Design Multiplier: 1.15
AOV Threshold: 0.01
Use all variables in prediction: False

----- begin DLMT -----
Initial Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Starting DLMT
Step 0
Generating valid search space of size 17600 (does not spend evaluations)
Valid coordinates: 1760/17600
Tested coordinates: 83732
Valid coordinates: 3520/17600
Tested coordinates: 171631
Valid coordinates: 5280/17600
Tested coordinates: 253853
Valid coordinates: 7040/17600
Tested coordinates: 339600
Valid coordinates: 8800/17600
Tested coordinates: 428688
Valid coordinates: 10560/17600
Tested coordinates: 513590
Valid coordinates: 12320/17600
Tested coordinates: 597027
Valid coordinates: 14080/17600
Tested coordinates: 682308
Valid coordinates: 15840/17600
Tested coordinates: 767745
Valid coordinates: 17600/17600
Tested coordinates: 852086
Valid/Tested configurations: 17600/852086
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 17600     9

Pruned data dimensions: [1] 17600     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Clean Info:
One-Level Factors: []
Two-Level Factors: []
Three-Level Factors: []
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Clean 2 Level Factors/Terms: ['(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 22 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Ie ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Ie + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 17600     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
98       3    0    0    5   29   0  15    2    4
446      0    5   11    7   12  27   0    0    5
786      0   11    0    0    1   0  29    5    0
926      0    0   11    0   23  15   0    3    3
1260     2    5    6    0   16   0   0    2    1
3230     5   11    8    0    1   0  14    2    5
5018    11    2    0    0   24  17   0    2    5
5339     4   11    0   11    8   0   0    5    0
5579     0    0    3    3    0  14   0    0    0
5768     6    6   11   11    0  27   0    2    3
7586     0    6    7   11   29  27   0    1    0
8365    10    5    0    7   26   0   0    0    3
8807     6    0   11   11    0   7   0    0    5
8885     3    0    6   11   24   0  29    0    1
9382     6    5    0    0   10   0  18    0    0
9484     2   11    5   11   15  17   0    1    3
10002   11    6   11    6    0   0  29    3    4
11815    6    0    6    2    7  28   0    5    2
12265   11   11   11    0   29   0  10    0    3
14984    0    2    2   11    1   0  13    5    2
15114   10    0   10    8   12   0  10    3    0
15889    5    6   10    6   29  11   0    5    0

D-Efficiency Approximation: [1] 0.2186359

Measuring design of size 22
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	4
        Additions: 		1994
        Multiplications: 	660
        Divisions: 		0
        Logical: 		0
        Reads: 			3457
        Writes: 		389
        Comparisons:		13
        Gotos: 			0
        
 compiling timer:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC -O0 -c -o timer_cpu.o timer_cpu.c
 building the original code:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -DORIGINAL -o __orio_perftest_original.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest1.exe __orio_perftest1.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest1.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.841153
Length of requested configs: 1
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		12866
        Multiplications: 	3828
        Divisions: 		0
        Logical: 		0
        Reads: 			19313
        Writes: 		1983
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest2.exe __orio_perftest2.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest2.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 9.513341
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		13730
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20539
        Writes: 		2071
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest3.exe __orio_perftest3.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest3.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.070969
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		2698
        Multiplications: 	832
        Divisions: 		0
        Logical: 		0
        Reads: 			4311
        Writes: 		480
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest4.exe __orio_perftest4.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest4.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.425955
Length of requested configs: 1
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		183
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			416
        Writes: 		74
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest5.exe __orio_perftest5.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest5.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.22632
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	5
        Additions: 		2869
        Multiplications: 	960
        Divisions: 		0
        Logical: 		0
        Reads: 			4908
        Writes: 		513
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest6.exe __orio_perftest6.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest6.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.066944
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		9998
        Multiplications: 	3036
        Divisions: 		0
        Logical: 		0
        Reads: 			15371
        Writes: 		1594
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest7.exe __orio_perftest7.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest7.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.90714
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		321
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			739
        Writes: 		96
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest8.exe __orio_perftest8.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest8.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.621304
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		178
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			406
        Writes: 		65
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest9.exe __orio_perftest9.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest9.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.585088
Length of requested configs: 1
Code stats:
        Number of loops: 	18
        Max loop nest depth: 	6
        Additions: 		3783
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			6122
        Writes: 		661
        Comparisons:		18
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest10.exe __orio_perftest10.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest10.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.366913
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		373
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			841
        Writes: 		153
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest11.exe __orio_perftest11.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest11.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.564505
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		121
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			288
        Writes: 		63
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest12.exe __orio_perftest12.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest12.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.687052
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	5
        Additions: 		3786
        Multiplications: 	1188
        Divisions: 		0
        Logical: 		0
        Reads: 			6033
        Writes: 		626
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest13.exe __orio_perftest13.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest13.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.06634
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		343
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			775
        Writes: 		111
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest14.exe __orio_perftest14.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest14.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.666232
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		210
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			473
        Writes: 		67
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest15.exe __orio_perftest15.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest15.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684573
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	16
        Max loop nest depth: 	5
        Additions: 		2392
        Multiplications: 	756
        Divisions: 		0
        Logical: 		0
        Reads: 			3960
        Writes: 		447
        Comparisons:		16
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest16.exe __orio_perftest16.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest16.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.574846
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	4
        Additions: 		5372
        Multiplications: 	1692
        Divisions: 		0
        Logical: 		0
        Reads: 			8550
        Writes: 		873
        Comparisons:		12
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest17.exe __orio_perftest17.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest17.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.844787
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = iii
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	4
        Additions: 		3736
        Multiplications: 	1240
        Divisions: 		0
        Logical: 		0
        Reads: 			6379
        Writes: 		690
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest18.exe __orio_perftest18.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest18.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.262708
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		228
        Multiplications: 	80
        Divisions: 		0
        Logical: 		0
        Reads: 			518
        Writes: 		88
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest19.exe __orio_perftest19.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest19.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584179
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		8160
        Multiplications: 	2508
        Divisions: 		0
        Logical: 		0
        Reads: 			12655
        Writes: 		1289
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest20.exe __orio_perftest20.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest20.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.237773
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1366
        Multiplications: 	432
        Divisions: 		0
        Logical: 		0
        Reads: 			2269
        Writes: 		254
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest21.exe __orio_perftest21.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest21.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.646032
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		477
        Multiplications: 	180
        Divisions: 		0
        Logical: 		0
        Reads: 			1075
        Writes: 		161
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest22.exe __orio_perftest22.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest22.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.43427
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
98       3    0    0    5   29   0  15    2    4  3.841153
446      0    5   11    7   12  27   0    0    5  9.513341
786      0   11    0    0    1   0  29    5    0  6.070969
926      0    0   11    0   23  15   0    3    3  3.425955
1260     2    5    6    0   16   0   0    2    1  3.226320
3230     5   11    8    0    1   0  14    2    5  4.066944
5018    11    2    0    0   24  17   0    2    5  3.907140
5339     4   11    0   11    8   0   0    5    0  4.621304
5579     0    0    3    3    0  14   0    0    0  4.585088
5768     6    6   11   11    0  27   0    2    3  3.366913
7586     0    6    7   11   29  27   0    1    0  3.564505
8365    10    5    0    7   26   0   0    0    3  4.687052
8807     6    0   11   11    0   7   0    0    5  4.066340
8885     3    0    6   11   24   0  29    0    1  4.666232
9382     6    5    0    0   10   0  18    0    0  4.684573
9484     2   11    5   11   15  17   0    1    3  3.574846
10002   11    6   11    6    0   0  29    3    4  3.844787
11815    6    0    6    2    7  28   0    5    2  7.262708
12265   11   11   11    0   29   0  10    0    3  4.584179
14984    0    2    2   11    1   0  13    5    2  5.237773
15114   10    0   10    8   12   0  10    3    0  3.646032
15889    5    6   10    6   29  11   0    5    0  5.434270

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
98       3    0    0    5   29   0  15    2    4  3.841153
446      0    5   11    7   12  27   0    0    5  9.513341
786      0   11    0    0    1   0  29    5    0  6.070969
926      0    0   11    0   23  15   0    3    3  3.425955
1260     2    5    6    0   16   0   0    2    1  3.226320
3230     5   11    8    0    1   0  14    2    5  4.066944
5018    11    2    0    0   24  17   0    2    5  3.907140
5339     4   11    0   11    8   0   0    5    0  4.621304
5579     0    0    3    3    0  14   0    0    0  4.585088
5768     6    6   11   11    0  27   0    2    3  3.366913
7586     0    6    7   11   29  27   0    1    0  3.564505
8365    10    5    0    7   26   0   0    0    3  4.687052
8807     6    0   11   11    0   7   0    0    5  4.066340
8885     3    0    6   11   24   0  29    0    1  4.666232
9382     6    5    0    0   10   0  18    0    0  4.684573
9484     2   11    5   11   15  17   0    1    3  3.574846
10002   11    6   11    6    0   0  29    3    4  3.844787
11815    6    0    6    2    7  28   0    5    2  7.262708
12265   11   11   11    0   29   0  10    0    3  4.584179
14984    0    2    2   11    1   0  13    5    2  5.237773
15114   10    0   10    8   12   0  10    3    0  3.646032
15889    5    6   10    6   29  11   0    5    0  5.434270

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
98    -0.5000000 -1.0000000 -1.0000000 -0.1666667  0.93333333 -1.00000000
446   -1.0000000 -0.1666667  0.8333333  0.1666667 -0.20000000  0.80000000
786   -1.0000000  0.8333333 -1.0000000 -1.0000000 -0.93333333 -1.00000000
926   -1.0000000 -1.0000000  0.8333333 -1.0000000  0.53333333  0.00000000
1260  -0.6666667 -0.1666667  0.0000000 -1.0000000  0.06666667 -1.00000000
3230  -0.1666667  0.8333333  0.3333333 -1.0000000 -0.93333333 -1.00000000
5018   0.8333333 -0.6666667 -1.0000000 -1.0000000  0.60000000  0.13333333
5339  -0.3333333  0.8333333 -1.0000000  0.8333333 -0.46666667 -1.00000000
5579  -1.0000000 -1.0000000 -0.5000000 -0.5000000 -1.00000000 -0.06666667
5768   0.0000000  0.0000000  0.8333333  0.8333333 -1.00000000  0.80000000
7586  -1.0000000  0.0000000  0.1666667  0.8333333  0.93333333  0.80000000
8365   0.6666667 -0.1666667 -1.0000000  0.1666667  0.73333333 -1.00000000
8807   0.0000000 -1.0000000  0.8333333  0.8333333 -1.00000000 -0.53333333
8885  -0.5000000 -1.0000000  0.0000000  0.8333333  0.60000000 -1.00000000
9382   0.0000000 -0.1666667 -1.0000000 -1.0000000 -0.33333333 -1.00000000
9484  -0.6666667  0.8333333 -0.1666667  0.8333333  0.00000000  0.13333333
10002  0.8333333  0.0000000  0.8333333  0.0000000 -1.00000000 -1.00000000
11815  0.0000000 -1.0000000  0.0000000 -0.6666667 -0.53333333  0.86666667
12265  0.8333333  0.8333333  0.8333333 -1.0000000  0.93333333 -1.00000000
14984 -1.0000000 -0.6666667 -0.6666667  0.8333333 -0.93333333 -1.00000000
15114  0.6666667 -1.0000000  0.6666667  0.3333333 -0.20000000 -1.00000000
15889 -0.1666667  0.0000000  0.6666667  0.0000000  0.93333333 -0.26666667
             U_Je      RT_Ie      RT_Je cost_mean
98     0.00000000 -0.3333333  0.3333333  3.841153
446   -1.00000000 -1.0000000  0.6666667  9.513341
786    0.93333333  0.6666667 -1.0000000  6.070969
926   -1.00000000  0.0000000  0.0000000  3.425955
1260  -1.00000000 -0.3333333 -0.6666667  3.226320
3230  -0.06666667 -0.3333333  0.6666667  4.066944
5018  -1.00000000 -0.3333333  0.6666667  3.907140
5339  -1.00000000  0.6666667 -1.0000000  4.621304
5579  -1.00000000 -1.0000000 -1.0000000  4.585088
5768  -1.00000000 -0.3333333  0.0000000  3.366913
7586  -1.00000000 -0.6666667 -1.0000000  3.564505
8365  -1.00000000 -1.0000000  0.0000000  4.687052
8807  -1.00000000 -1.0000000  0.6666667  4.066340
8885   0.93333333 -1.0000000 -0.6666667  4.666232
9382   0.20000000 -1.0000000 -1.0000000  4.684573
9484  -1.00000000 -0.6666667  0.0000000  3.574846
10002  0.93333333  0.0000000  0.3333333  3.844787
11815 -1.00000000  0.6666667 -0.3333333  7.262708
12265 -0.33333333 -1.0000000  0.0000000  4.584179
14984 -0.13333333  0.6666667 -0.3333333  5.237773
15114 -0.33333333  0.0000000 -1.0000000  3.646032
15889 -1.00000000  0.6666667 -1.0000000  5.434270

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_I ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_I^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_I + U_J + RT_I + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Heteroscedasticity Test p-value: 0.494345315657
Heteroscedasticity transform NOT required.
Regression Step:            Df Sum Sq Mean Sq F value  Pr(>F)   
I(T1_I^2)    1  1.632   1.632   5.603 0.09876 . 
I(T1_J^2)    1  0.014   0.014   0.048 0.84096   
I(T2_I^2)    1  0.209   0.209   0.718 0.45893   
I(T2_J^2)    1  1.855   1.855   6.370 0.08588 . 
I(U1_I^2)    1  1.108   1.108   3.803 0.14624   
I(U_I^2)     1  5.587   5.587  19.186 0.02203 * 
I(U_J^2)     1  1.229   1.229   4.221 0.13220   
I(RT_I^2)    1  2.701   2.701   9.275 0.05562 . 
I(RT_J^2)    1  1.796   1.796   6.167 0.08900 . 
T1_I         1  0.288   0.288   0.988 0.39350   
T1_J         1  0.176   0.176   0.603 0.49406   
T2_I         1  0.456   0.456   1.567 0.29930   
T2_J         1  4.506   4.506  15.475 0.02926 * 
U1_I         1  2.723   2.723   9.352 0.05507 . 
U_I          1  1.252   1.252   4.301 0.12977   
U_J          1  0.000   0.000   0.000 0.99731   
RT_I         1 17.989  17.989  61.778 0.00429 **
RT_J         1  0.118   0.118   0.404 0.57008   
Residuals    3  0.874   0.291                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
98     3.841153
446    9.513341
786    6.070969
926    3.425955
1260   3.226320
3230   4.066944
5018   3.907140
5339   4.621304
5579   4.585088
5768   3.366913
7586   3.564505
8365   4.687052
8807   4.066340
8885   4.666232
9382   4.684573
9484   3.574846
10002  3.844787
11815  7.262708
12265  4.584179
14984  5.237773
15114  3.646032
15889  5.434270

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.0889998482099874, 'T1_J': 0.49406052184543914, 'T2_J': 0.02925555456888656, 'U_J': 0.99730918544008, 'U_I': 0.12977236753945445, 'I(T2_I^2)': 0.4589323018867781, 'T2_I': 0.29929786856999474, 'U1_I': 0.05507308149492367, 'I(U_I^2)': 0.02202819834586344, 'I(RT_I^2)': 0.05562472987573739, 'I(T2_J^2)': 0.08588291182063039, 'I(U1_I^2)': 0.14623893071357166, 'RT_I': 0.004290162610053528, 'I(T1_I^2)': 0.09875856915108595, 'I(T1_J^2)': 0.8409559320765154, 'I(U_J^2)': 0.13220147784109523, 'RT_J': 0.570083946243551, 'T1_I': 0.3935040716417313}
Ordered Keys: 
['RT_I', 'I(U_I^2)', 'T2_J', 'U1_I', 'I(RT_I^2)', 'I(T2_J^2)', 'I(RT_J^2)', 'I(T1_I^2)', 'U_I', 'I(U_J^2)', 'I(U1_I^2)', 'T2_I', 'T1_I', 'I(T2_I^2)', 'T1_J', 'RT_J', 'I(T1_J^2)', 'U_J']
Variables within threshold: ['RT_I']
Predicting Best Values for: ['RT_I']
Using Model: cost_mean ~ RT_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 22 10

Pruned data dimensions: [1] 22 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ RT_I, tau = 0.05, data = structure(list(
    T1_I = c(3, 0, 0, 0, 2, 5, 11, 4, 0, 6, 0, 10, 6, 3, 6, 2, 
    11, 6, 11, 0, 10, 5), T1_J = c(0, 5, 11, 0, 5, 11, 2, 11, 
    0, 6, 6, 5, 0, 0, 5, 11, 6, 0, 11, 2, 0, 6), T2_I = c(0, 
    11, 0, 11, 6, 8, 0, 0, 3, 11, 7, 0, 11, 6, 0, 5, 11, 6, 11, 
    2, 10, 10), T2_J = c(5, 7, 0, 0, 0, 0, 0, 11, 3, 11, 11, 
    7, 11, 11, 0, 11, 6, 2, 0, 11, 8, 6), U1_I = c(29, 12, 1, 
    23, 16, 1, 24, 8, 0, 0, 29, 26, 0, 24, 10, 15, 0, 7, 29, 
    1, 12, 29), U_I = c(0, 27, 0, 15, 0, 0, 17, 0, 14, 27, 27, 
    0, 7, 0, 0, 17, 0, 28, 0, 0, 0, 11), U_J = c(15, 0, 29, 0, 
    0, 14, 0, 0, 0, 0, 0, 0, 0, 29, 18, 0, 29, 0, 10, 13, 10, 
    0), RT_I = c(2, 0, 5, 3, 2, 2, 2, 5, 0, 2, 1, 0, 0, 0, 0, 
    1, 3, 5, 0, 5, 3, 5), RT_J = c(4, 5, 0, 3, 1, 5, 5, 0, 0, 
    3, 0, 3, 5, 1, 0, 3, 4, 2, 3, 2, 0, 0), cost_mean = c(3.841153, 
    9.513341, 6.070969, 3.425955, 3.22632, 4.066944, 3.90714, 
    4.621304, 4.585088, 3.366913, 3.564505, 4.687052, 4.06634, 
    4.666232, 4.684573, 3.574846, 3.844787, 7.262708, 4.584179, 
    5.237773, 3.646032, 5.43427)), .Names = c("T1_I", "T1_J", 
"T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"
), row.names = c("98", "446", "786", "926", "1260", "3230", "5018", 
"5339", "5579", "5768", "7586", "8365", "8807", "8885", "9382", 
"9484", "10002", "11815", "12265", "14984", "15114", "15889"), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   2.827050e+00 -1.797693e+308   3.941830e+00
RT_I          1.996300e-01 -1.797693e+308  1.797693e+308

Generating valid search space of size 52800 (does not spend evaluations)
Valid coordinates: 5280/52800
Tested coordinates: 253022
Valid coordinates: 10560/52800
Tested coordinates: 509953
Valid coordinates: 15840/52800
Tested coordinates: 762198
Tested coordinates: 1000000
Valid coordinates: 21120/52800
Tested coordinates: 1018737
Valid coordinates: 26400/52800
Tested coordinates: 1272324
Valid coordinates: 31680/52800
Tested coordinates: 1526267
Valid coordinates: 36960/52800
Tested coordinates: 1783685
Tested coordinates: 2000000
Valid coordinates: 42240/52800
Tested coordinates: 2035877
Valid coordinates: 47520/52800
Tested coordinates: 2290305
Valid coordinates: 52800/52800
Tested coordinates: 2543526
Valid/Tested configurations: 52800/2543526
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 70400     9

Pruned data dimensions: [1] 70400     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0889998482099874, 'T1_J': 0.49406052184543914, 'T2_J': 0.02925555456888656, 'U_J': 0.99730918544008, 'U_I': 0.12977236753945445, 'I(T2_I^2)': 0.4589323018867781, 'T2_I': 0.29929786856999474, 'U1_I': 0.05507308149492367, 'I(U_I^2)': 0.02202819834586344, 'I(RT_I^2)': 0.05562472987573739, 'I(T2_J^2)': 0.08588291182063039, 'I(U1_I^2)': 0.14623893071357166, 'RT_I': 0.004290162610053528, 'I(T1_I^2)': 0.09875856915108595, 'I(T1_J^2)': 0.8409559320765154, 'I(U_J^2)': 0.13220147784109523, 'RT_J': 0.570083946243551, 'T1_I': 0.3935040716417313}
Ordered Keys: 
['RT_I', 'I(U_I^2)', 'T2_J', 'U1_I', 'I(RT_I^2)', 'I(T2_J^2)', 'I(RT_J^2)', 'I(T1_I^2)', 'U_I', 'I(U_J^2)', 'I(U1_I^2)', 'T2_I', 'T1_I', 'I(T2_I^2)', 'T1_J', 'RT_J', 'I(T1_J^2)', 'U_J']
Variables within threshold: ['RT_I']
Unique Variables: ['RT_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.0889998482099874, 'T1_J': 0.49406052184543914, 'T2_J': 0.02925555456888656, 'U_J': 0.99730918544008, 'U_I': 0.12977236753945445, 'I(T2_I^2)': 0.4589323018867781, 'T2_I': 0.29929786856999474, 'U1_I': 0.05507308149492367, 'I(U_I^2)': 0.02202819834586344, 'I(RT_I^2)': 0.05562472987573739, 'I(T2_J^2)': 0.08588291182063039, 'I(U1_I^2)': 0.14623893071357166, 'RT_I': 0.004290162610053528, 'I(T1_I^2)': 0.09875856915108595, 'I(T1_J^2)': 0.8409559320765154, 'I(U_J^2)': 0.13220147784109523, 'RT_J': 0.570083946243551, 'T1_I': 0.3935040716417313}
Ordered Keys: 
['RT_I', 'I(U_I^2)', 'T2_J', 'U1_I', 'I(RT_I^2)', 'I(T2_J^2)', 'I(RT_J^2)', 'I(T1_I^2)', 'U_I', 'I(U_J^2)', 'I(U1_I^2)', 'T2_I', 'T1_I', 'I(T2_I^2)', 'T1_J', 'RT_J', 'I(T1_J^2)', 'U_J']
Variables within threshold: ['RT_I']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1    8    6    8   11    7   0  24    0    3

Best From Design: [2, 5, 6, 0, 16, 0, 0, 2, 1]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Code stats:
        Number of loops: 	3
        Max loop nest depth: 	2
        Additions: 		10
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			39
        Writes: 		10
        Comparisons:		3
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest23.exe __orio_perftest23.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest23.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.753598
Baseline Point:
4.753598
Design Best Point:
[2, 5, 6, 0, 16, 0, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.678711157317
Predicted Best Point:
[8, 6, 8, 11, 7, 0, 24, 0, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[8, 6, 8, 11, 7, 0, 24, 0, 3]
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		335
        Multiplications: 	136
        Divisions: 		0
        Logical: 		0
        Reads: 			761
        Writes: 		96
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest24.exe __orio_perftest24.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest24.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684416
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.678711157317
Slowdown (Predicted Best): 0.985446392396
Budget: 22/1000
Best point from design was better than predicted point
Updating Global Best: 3.22632
Current Best Point: 
[2, 5, 6, 0, 16, 0, 0, 2, 1]
Step 1
Generating valid search space of size 15200 (does not spend evaluations)
Valid coordinates: 1520/15200
Tested coordinates: 59461
Valid coordinates: 3040/15200
Tested coordinates: 119785
Valid coordinates: 4560/15200
Tested coordinates: 182056
Valid coordinates: 6080/15200
Tested coordinates: 241397
Valid coordinates: 7600/15200
Tested coordinates: 302433
Valid coordinates: 9120/15200
Tested coordinates: 361768
Valid coordinates: 10640/15200
Tested coordinates: 423134
Valid coordinates: 12160/15200
Tested coordinates: 481822
Valid coordinates: 13680/15200
Tested coordinates: 544432
Valid coordinates: 15200/15200
Tested coordinates: 604420
Valid/Tested configurations: 15200/604420
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 85600     9

Pruned data dimensions: [1] 29292     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Clean Info:
One-Level Factors: ['RT_I']
Two-Level Factors: ['RT_I']
Three-Level Factors: ['RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 19 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 29292     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
3484    11    9   11    0    0   0  16    0    0
6894    11    7    0   11    9   0  28    0    5
7002     5   11    5   11    0  13   0    0    5
7973     7    6    0    6   12   0  12    0    2
12672    4    3    5   11   28   0   0    0    0
12979    3    1   11    5    1   0  29    0    0
15598    3    0    0    0    0  29   0    0    3
16577    6   11    9    0   29   0  29    0    3
17843   11    1    0    0   29   5   0    0    0
18554    7    0   10    0   16   0  17    0    5
21726    0    6    5    0   13  20   0    0    3
22894    0    0    0    6   14  11   0    0    5
23914    9    4    9    7   29  29   0    0    5
23944    6    4   11   11   26  16   0    0    3
24655    0    1    5    9    0   0  15    0    3
24989   11    0   11    8   20   1   0    0    3
27316    0   10    0   11   29   0  17    0    4
27795    0   11   11   11   11  29   0    0    1
29228    5    5   11    0    0   0   0    0    5

D-Efficiency Approximation: [1] 0.2363456

Measuring design of size 19
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	4
        Additions: 		177
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			404
        Writes: 		50
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest25.exe __orio_perftest25.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest25.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580086
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		589
        Multiplications: 	248
        Divisions: 		0
        Logical: 		0
        Reads: 			1325
        Writes: 		154
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest26.exe __orio_perftest26.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest26.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.683369
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	4
        Additions: 		6501
        Multiplications: 	1980
        Divisions: 		0
        Logical: 		0
        Reads: 			9998
        Writes: 		1026
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest27.exe __orio_perftest27.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest27.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.000009
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		193
        Multiplications: 	72
        Divisions: 		0
        Logical: 		0
        Reads: 			444
        Writes: 		67
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest28.exe __orio_perftest28.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest28.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580971
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	6
        Additions: 		55
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			132
        Writes: 		49
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest29.exe __orio_perftest29.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest29.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.684502
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		306
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			689
        Writes: 		84
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest30.exe __orio_perftest30.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest30.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.456392
Length of requested configs: 1
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	3
        Additions: 		3290
        Multiplications: 	992
        Divisions: 		0
        Logical: 		0
        Reads: 			5062
        Writes: 		540
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest31.exe __orio_perftest31.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest31.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582045
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		402
        Multiplications: 	156
        Divisions: 		0
        Logical: 		0
        Reads: 			905
        Writes: 		128
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest32.exe __orio_perftest32.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest32.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.769586
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	4
        Additions: 		122
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			275
        Writes: 		70
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest33.exe __orio_perftest33.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest33.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.322914
Length of requested configs: 1
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	4
        Additions: 		316
        Multiplications: 	128
        Divisions: 		0
        Logical: 		0
        Reads: 			714
        Writes: 		95
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest34.exe __orio_perftest34.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest34.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.76765
Length of requested configs: 1
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		2538
        Multiplications: 	792
        Divisions: 		0
        Logical: 		0
        Reads: 			4107
        Writes: 		455
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest35.exe __orio_perftest35.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest35.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.689639
Length of requested configs: 1
Code stats:
        Number of loops: 	10
        Max loop nest depth: 	3
        Additions: 		5603
        Multiplications: 	1716
        Divisions: 		0
        Logical: 		0
        Reads: 			8700
        Writes: 		907
        Comparisons:		10
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest36.exe __orio_perftest36.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest36.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.052129
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 512 must be greater than the stride value 512; tile index = iii
Code stats:
        Number of loops: 	13
        Max loop nest depth: 	5
        Additions: 		13789
        Multiplications: 	4092
        Divisions: 		0
        Logical: 		0
        Reads: 			20671
        Writes: 		2134
        Comparisons:		13
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest37.exe __orio_perftest37.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest37.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.266177
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		2092
        Multiplications: 	648
        Divisions: 		0
        Logical: 		0
        Reads: 			3426
        Writes: 		398
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest38.exe __orio_perftest38.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest38.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.521206
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		242
        Multiplications: 	100
        Divisions: 		0
        Logical: 		0
        Reads: 			558
        Writes: 		68
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest39.exe __orio_perftest39.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest39.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 8.188011
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		322
        Multiplications: 	108
        Divisions: 		0
        Logical: 		0
        Reads: 			663
        Writes: 		101
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest40.exe __orio_perftest40.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest40.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.362748
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		363
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			818
        Writes: 		118
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest41.exe __orio_perftest41.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest41.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.665016
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	11
        Max loop nest depth: 	4
        Additions: 		1045
        Multiplications: 	372
        Divisions: 		0
        Logical: 		0
        Reads: 			2021
        Writes: 		252
        Comparisons:		11
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest42.exe __orio_perftest42.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest42.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 5.307631
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		306
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			707
        Writes: 		82
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest43.exe __orio_perftest43.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest43.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581178
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
3484    11    9   11    0    0   0  16    0    0  4.580086
6894    11    7    0   11    9   0  28    0    5  4.683369
7002     5   11    5   11    0  13   0    0    5  4.000009
7973     7    6    0    6   12   0  12    0    2  4.580971
12672    4    3    5   11   28   0   0    0    0  4.684502
12979    3    1   11    5    1   0  29    0    0  5.456392
15598    3    0    0    0    0  29   0    0    3  4.582045
16577    6   11    9    0   29   0  29    0    3  4.769586
17843   11    1    0    0   29   5   0    0    0  3.322914
18554    7    0   10    0   16   0  17    0    5  4.767650
21726    0    6    5    0   13  20   0    0    3  3.689639
22894    0    0    0    6   14  11   0    0    5  4.052129
23914    9    4    9    7   29  29   0    0    5  5.266177
23944    6    4   11   11   26  16   0    0    3  3.521206
24655    0    1    5    9    0   0  15    0    3  8.188011
24989   11    0   11    8   20   1   0    0    3  3.362748
27316    0   10    0   11   29   0  17    0    4  4.665016
27795    0   11   11   11   11  29   0    0    1  5.307631
29228    5    5   11    0    0   0   0    0    5  4.581178

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
3484    11    9   11    0    0   0  16    0    0  4.580086
6894    11    7    0   11    9   0  28    0    5  4.683369
7002     5   11    5   11    0  13   0    0    5  4.000009
7973     7    6    0    6   12   0  12    0    2  4.580971
12672    4    3    5   11   28   0   0    0    0  4.684502
12979    3    1   11    5    1   0  29    0    0  5.456392
15598    3    0    0    0    0  29   0    0    3  4.582045
16577    6   11    9    0   29   0  29    0    3  4.769586
17843   11    1    0    0   29   5   0    0    0  3.322914
18554    7    0   10    0   16   0  17    0    5  4.767650
21726    0    6    5    0   13  20   0    0    3  3.689639
22894    0    0    0    6   14  11   0    0    5  4.052129
23914    9    4    9    7   29  29   0    0    5  5.266177
23944    6    4   11   11   26  16   0    0    3  3.521206
24655    0    1    5    9    0   0  15    0    3  8.188011
24989   11    0   11    8   20   1   0    0    3  3.362748
27316    0   10    0   11   29   0  17    0    4  4.665016
27795    0   11   11   11   11  29   0    0    1  5.307631
29228    5    5   11    0    0   0   0    0    5  4.581178

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie        U_Ie
3484   0.8333333  0.5000000  0.8333333 -1.0000000 -1.00000000 -1.00000000
6894   0.8333333  0.1666667 -1.0000000  0.8333333 -0.40000000 -1.00000000
7002  -0.1666667  0.8333333 -0.1666667  0.8333333 -1.00000000 -0.13333333
7973   0.1666667  0.0000000 -1.0000000  0.0000000 -0.20000000 -1.00000000
12672 -0.3333333 -0.5000000 -0.1666667  0.8333333  0.86666667 -1.00000000
12979 -0.5000000 -0.8333333  0.8333333 -0.1666667 -0.93333333 -1.00000000
15598 -0.5000000 -1.0000000 -1.0000000 -1.0000000 -1.00000000  0.93333333
16577  0.0000000  0.8333333  0.5000000 -1.0000000  0.93333333 -1.00000000
17843  0.8333333 -0.8333333 -1.0000000 -1.0000000  0.93333333 -0.66666667
18554  0.1666667 -1.0000000  0.6666667 -1.0000000  0.06666667 -1.00000000
21726 -1.0000000  0.0000000 -0.1666667 -1.0000000 -0.13333333  0.33333333
22894 -1.0000000 -1.0000000 -1.0000000  0.0000000 -0.06666667 -0.26666667
23914  0.5000000 -0.3333333  0.5000000  0.1666667  0.93333333  0.93333333
23944  0.0000000 -0.3333333  0.8333333  0.8333333  0.73333333  0.06666667
24655 -1.0000000 -0.8333333 -0.1666667  0.5000000 -1.00000000 -1.00000000
24989  0.8333333 -1.0000000  0.8333333  0.3333333  0.33333333 -0.93333333
27316 -1.0000000  0.6666667 -1.0000000  0.8333333  0.93333333 -1.00000000
27795 -1.0000000  0.8333333  0.8333333  0.8333333 -0.26666667  0.93333333
29228 -0.1666667 -0.1666667  0.8333333 -1.0000000 -1.00000000 -1.00000000
             U_Je RT_Ie      RT_Je cost_mean
3484   0.06666667    -1 -1.0000000  4.580086
6894   0.86666667    -1  0.6666667  4.683369
7002  -1.00000000    -1  0.6666667  4.000009
7973  -0.20000000    -1 -0.3333333  4.580971
12672 -1.00000000    -1 -1.0000000  4.684502
12979  0.93333333    -1 -1.0000000  5.456392
15598 -1.00000000    -1  0.0000000  4.582045
16577  0.93333333    -1  0.0000000  4.769586
17843 -1.00000000    -1 -1.0000000  3.322914
18554  0.13333333    -1  0.6666667  4.767650
21726 -1.00000000    -1  0.0000000  3.689639
22894 -1.00000000    -1  0.6666667  4.052129
23914 -1.00000000    -1  0.6666667  5.266177
23944 -1.00000000    -1  0.0000000  3.521206
24655  0.00000000    -1  0.0000000  8.188011
24989 -1.00000000    -1  0.0000000  3.362748
27316  0.13333333    -1  0.3333333  4.665016
27795 -1.00000000    -1 -0.6666667  5.307631
29228 -1.00000000    -1  0.6666667  4.581178

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + 
    U1_I + U_I + U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 41 10

Pruned data dimensions: [1] 26 10

Heteroscedasticity Test p-value: 0.000116783385424
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
2     0    5   11    7   12  27   0    0    5  9.513341
9     0    0    3    3    0  14   0    0    0  4.585088
12   10    5    0    7   26   0   0    0    3  4.687052
13    6    0   11   11    0   7   0    0    5  4.066340
14    3    0    6   11   24   0  29    0    1  4.666232
15    6    5    0    0   10   0  18    0    0  4.684573
19   11   11   11    0   29   0  10    0    3  4.584179
23   11    9   11    0    0   0  16    0    0  4.580086
24   11    7    0   11    9   0  28    0    5  4.683369
25    5   11    5   11    0  13   0    0    5  4.000009
26    7    6    0    6   12   0  12    0    2  4.580971
27    4    3    5   11   28   0   0    0    0  4.684502
28    3    1   11    5    1   0  29    0    0  5.456392
29    3    0    0    0    0  29   0    0    3  4.582045
30    6   11    9    0   29   0  29    0    3  4.769586
31   11    1    0    0   29   5   0    0    0  3.322914
32    7    0   10    0   16   0  17    0    5  4.767650
33    0    6    5    0   13  20   0    0    3  3.689639
34    0    0    0    6   14  11   0    0    5  4.052129
35    9    4    9    7   29  29   0    0    5  5.266177
36    6    4   11   11   26  16   0    0    3  3.521206
37    0    1    5    9    0   0  15    0    3  8.188011
38   11    0   11    8   20   1   0    0    3  3.362748
39    0   10    0   11   29   0  17    0    4  4.665016
40    0   11   11   11   11  29   0    0    1  5.307631
41    5    5   11    0    0   0   0    0    5  4.581178

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value  Pr(>F)   
I(T1_I^2)    1 0.0003713 0.0003713   6.901 0.02749 * 
I(T1_J^2)    1 0.0000578 0.0000578   1.074 0.32705   
I(T2_I^2)    1 0.0000337 0.0000337   0.626 0.44906   
I(T2_J^2)    1 0.0000124 0.0000124   0.230 0.64326   
I(U1_I^2)    1 0.0000438 0.0000438   0.815 0.39023   
I(U_I^2)     1 0.0000322 0.0000322   0.598 0.45921   
I(U_J^2)     1 0.0003369 0.0003369   6.262 0.03373 * 
I(RT_J^2)    1 0.0000275 0.0000275   0.512 0.49242   
T1_I         1 0.0000447 0.0000447   0.831 0.38583   
T1_J         1 0.0001610 0.0001610   2.992 0.11775   
T2_I         1 0.0000101 0.0000101   0.187 0.67549   
T2_J         1 0.0001918 0.0001918   3.565 0.09163 . 
U1_I         1 0.0001217 0.0001217   2.262 0.16682   
U_I          1 0.0007733 0.0007733  14.371 0.00428 **
U_J          1 0.0000882 0.0000882   1.639 0.23243   
RT_J         1 0.0000690 0.0000690   1.283 0.28665   
Residuals    9 0.0004843 0.0000538                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
3484   4.580086
6894   4.683369
7002   4.000009
7973   4.580971
12672  4.684502
12979  5.456392
15598  4.582045
16577  4.769586
17843  3.322914
18554  4.767650
21726  3.689639
22894  4.052129
23914  5.266177
23944  3.521206
24655  8.188011
24989  3.362748
27316  4.665016
27795  5.307631
29228  4.581178

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.492424588289441, 'T1_J': 0.11774771761134448, 'T2_J': 0.09162692926760994, 'U_J': 0.23243311518646803, 'U_I': 0.004276694063927227, 'I(T2_I^2)': 0.44905659394275277, 'U1_I': 0.16682047081112703, 'I(U_I^2)': 0.4592072244278699, 'T2_I': 0.6754885832106853, 'I(T2_J^2)': 0.64325628237853, 'I(U1_I^2)': 0.3902318833436871, 'I(T1_I^2)': 0.027494428639042192, 'I(T1_J^2)': 0.3270539110684186, 'I(U_J^2)': 0.03373116902458916, 'RT_J': 0.28664812534587975, 'T1_I': 0.38583181465328453}
Ordered Keys: 
['U_I', 'I(T1_I^2)', 'I(U_J^2)', 'T2_J', 'T1_J', 'U1_I', 'U_J', 'RT_J', 'I(T1_J^2)', 'T1_I', 'I(U1_I^2)', 'I(T2_I^2)', 'I(U_I^2)', 'I(RT_J^2)', 'I(T2_J^2)', 'T2_I']
Variables within threshold: ['U_I']
Predicting Best Values for: ['U_I']
Using Model: cost_mean ~ U_I
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 41 10

Pruned data dimensions: [1] 26 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ U_I, tau = 0.05, data = structure(list(
    T1_I = c(0, 0, 10, 6, 3, 6, 11, 11, 11, 5, 7, 4, 3, 3, 6, 
    11, 7, 0, 0, 9, 6, 0, 11, 0, 0, 5), T1_J = c(5, 0, 5, 0, 
    0, 5, 11, 9, 7, 11, 6, 3, 1, 0, 11, 1, 0, 6, 0, 4, 4, 1, 
    0, 10, 11, 5), T2_I = c(11, 3, 0, 11, 6, 0, 11, 11, 0, 5, 
    0, 5, 11, 0, 9, 0, 10, 5, 0, 9, 11, 5, 11, 0, 11, 11), T2_J = c(7, 
    3, 7, 11, 11, 0, 0, 0, 11, 11, 6, 11, 5, 0, 0, 0, 0, 0, 6, 
    7, 11, 9, 8, 11, 11, 0), U1_I = c(12, 0, 26, 0, 24, 10, 29, 
    0, 9, 0, 12, 28, 1, 0, 29, 29, 16, 13, 14, 29, 26, 0, 20, 
    29, 11, 0), U_I = c(27, 14, 0, 7, 0, 0, 0, 0, 0, 13, 0, 0, 
    0, 29, 0, 5, 0, 20, 11, 29, 16, 0, 1, 0, 29, 0), U_J = c(0, 
    0, 0, 0, 29, 18, 10, 16, 28, 0, 12, 0, 29, 0, 29, 0, 17, 
    0, 0, 0, 0, 15, 0, 17, 0, 0), RT_I = c(0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0), RT_J = c(5, 0, 3, 5, 1, 0, 3, 0, 5, 5, 2, 0, 0, 3, 3, 
    0, 5, 3, 5, 5, 3, 3, 3, 4, 1, 5), cost_mean = c(9.513341, 
    4.585088, 4.687052, 4.06634, 4.666232, 4.684573, 4.584179, 
    4.580086, 4.683369, 4.000009, 4.580971, 4.684502, 5.456392, 
    4.582045, 4.769586, 3.322914, 4.76765, 3.689639, 4.052129, 
    5.266177, 3.521206, 8.188011, 3.362748, 4.665016, 5.307631, 
    4.581178)), .Names = c("T1_I", "T1_J", "T2_I", "T2_J", "U1_I", 
"U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(2L, 
9L, 12L, 13L, 14L, 15L, 19L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 
30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   3.232780e+00 -1.797693e+308   4.513400e+00
U_I           1.803000e-02 -1.797693e+308   8.573000e-02

Generating valid search space of size 45600 (does not spend evaluations)
Valid coordinates: 4560/45600
Tested coordinates: 184036
Valid coordinates: 9120/45600
Tested coordinates: 368775
Valid coordinates: 13680/45600
Tested coordinates: 547884
Valid coordinates: 18240/45600
Tested coordinates: 731552
Valid coordinates: 22800/45600
Tested coordinates: 914222
Tested coordinates: 1000000
Valid coordinates: 27360/45600
Tested coordinates: 1096596
Valid coordinates: 31920/45600
Tested coordinates: 1275315
Valid coordinates: 36480/45600
Tested coordinates: 1461984
Valid coordinates: 41040/45600
Tested coordinates: 1644860
Valid coordinates: 45600/45600
Tested coordinates: 1829412
Valid/Tested configurations: 45600/1829412
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 131200      9

Pruned data dimensions: [1] 74892     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.492424588289441, 'T1_J': 0.11774771761134448, 'T2_J': 0.09162692926760994, 'U_J': 0.23243311518646803, 'U_I': 0.004276694063927227, 'I(T2_I^2)': 0.44905659394275277, 'U1_I': 0.16682047081112703, 'I(U_I^2)': 0.4592072244278699, 'T2_I': 0.6754885832106853, 'I(T2_J^2)': 0.64325628237853, 'I(U1_I^2)': 0.3902318833436871, 'I(T1_I^2)': 0.027494428639042192, 'I(T1_J^2)': 0.3270539110684186, 'I(U_J^2)': 0.03373116902458916, 'RT_J': 0.28664812534587975, 'T1_I': 0.38583181465328453}
Ordered Keys: 
['U_I', 'I(T1_I^2)', 'I(U_J^2)', 'T2_J', 'T1_J', 'U1_I', 'U_J', 'RT_J', 'I(T1_J^2)', 'T1_I', 'I(U1_I^2)', 'I(T2_I^2)', 'I(U_I^2)', 'I(RT_J^2)', 'I(T2_J^2)', 'T2_I']
Variables within threshold: ['U_I']
Unique Variables: ['U_I']
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.492424588289441, 'T1_J': 0.11774771761134448, 'T2_J': 0.09162692926760994, 'U_J': 0.23243311518646803, 'U_I': 0.004276694063927227, 'I(T2_I^2)': 0.44905659394275277, 'U1_I': 0.16682047081112703, 'I(U_I^2)': 0.4592072244278699, 'T2_I': 0.6754885832106853, 'I(T2_J^2)': 0.64325628237853, 'I(U1_I^2)': 0.3902318833436871, 'I(T1_I^2)': 0.027494428639042192, 'I(T1_J^2)': 0.3270539110684186, 'I(U_J^2)': 0.03373116902458916, 'RT_J': 0.28664812534587975, 'T1_I': 0.38583181465328453}
Ordered Keys: 
['U_I', 'I(T1_I^2)', 'I(U_J^2)', 'T2_J', 'T1_J', 'U1_I', 'U_J', 'RT_J', 'I(T1_J^2)', 'T1_I', 'I(U1_I^2)', 'I(T2_I^2)', 'I(U_I^2)', 'I(RT_J^2)', 'I(T2_J^2)', 'T2_I']
Variables within threshold: ['U_I']
Best Predicted:   T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1    8    6    8   11    7   0  24    0    3

Best From Design: [11, 1, 0, 0, 29, 5, 0, 0, 0]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753598
Design Best Point:
[11, 1, 0, 0, 29, 5, 0, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.699031344258
Predicted Best Point:
[8, 6, 8, 11, 7, 0, 24, 0, 3]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[8, 6, 8, 11, 7, 0, 24, 0, 3]
Length of requested configs: 1
Result was on Database, Returning Now
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.699031344258
Slowdown (Predicted Best): 0.985446392396
Budget: 41/1000
Best point from design was better than predicted point
Current Best Point: 
[2, 5, 6, 0, 16, 0, 0, 2, 1]
Step 2
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 3548
Valid coordinates: 2720/13600
Tested coordinates: 7131
Valid coordinates: 4080/13600
Tested coordinates: 10625
Valid coordinates: 5440/13600
Tested coordinates: 14140
Valid coordinates: 6800/13600
Tested coordinates: 17641
Valid coordinates: 8160/13600
Tested coordinates: 21234
Valid coordinates: 9520/13600
Tested coordinates: 24849
Valid coordinates: 10880/13600
Tested coordinates: 28414
Valid coordinates: 12240/13600
Tested coordinates: 32083
Valid coordinates: 13600/13600
Tested coordinates: 35754
Valid/Tested configurations: 13600/35754
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 144800      9

Pruned data dimensions: [1] 51615     9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Clean Info:
One-Level Factors: ['U_I', 'RT_I']
Two-Level Factors: ['U_I', 'RT_I']
Three-Level Factors: ['U_I', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['U_I', 'RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 51615     9

Coded data: NULL
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
1173    11   11   11    0   29   0  10    0    3
4359     5   11    6   11    0   0  19    0    0
13870    5    0   11    9   16   0  29    0    2
16030    4    5    0    0    0   0  13    0    2
18068    0    0    6   11   14   0  15    0    4
19260    0    5    6   11   29   0  29    0    4
27361    0    8   11    8    0   0  21    0    5
37279    0    0    6    0    0   0   0    0    1
37584    5    6    5    6   29   0   1    0    2
37710    5    0    0    2   29   0  27    0    5
38338    3   11    3    0   16   0   0    0    5
42539   11    5    0    5   14   0  13    0    0
43209    1    0   11   11   29   0  12    0    0
45569    7    6   11   11   19   0   0    0    5
46004    0   11    0   11   23   0   0    0    2
46315   11    0    0   11    2   0   0    0    4
46678   11    6   11    0   23   0  28    0    0

D-Efficiency Approximation: [1] 0.2627655

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		207
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			471
        Writes: 		58
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest44.exe __orio_perftest44.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest44.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580307
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		353
        Multiplications: 	140
        Divisions: 		0
        Logical: 		0
        Reads: 			799
        Writes: 		107
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest45.exe __orio_perftest45.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest45.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.664915
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		185
        Multiplications: 	76
        Divisions: 		0
        Logical: 		0
        Reads: 			431
        Writes: 		54
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest46.exe __orio_perftest46.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest46.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581259
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		330
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			748
        Writes: 		99
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest47.exe __orio_perftest47.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest47.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580633
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		474
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1065
        Writes: 		144
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest48.exe __orio_perftest48.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest48.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58151
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 256 must be greater than the stride value 256; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		509
        Multiplications: 	220
        Divisions: 		0
        Logical: 		0
        Reads: 			1151
        Writes: 		126
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest49.exe __orio_perftest49.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest49.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581171
Length of requested configs: 1
Code stats:
        Number of loops: 	4
        Max loop nest depth: 	3
        Additions: 		22
        Multiplications: 	8
        Divisions: 		0
        Logical: 		0
        Reads: 			66
        Writes: 		14
        Comparisons:		4
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest50.exe __orio_perftest50.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest50.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.748008
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		111
        Multiplications: 	28
        Divisions: 		0
        Logical: 		0
        Reads: 			258
        Writes: 		62
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest51.exe __orio_perftest51.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest51.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581203
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		597
        Multiplications: 	244
        Divisions: 		0
        Logical: 		0
        Reads: 			1338
        Writes: 		170
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest52.exe __orio_perftest52.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest52.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 6.442128
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 8 must be greater than the stride value 8; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		324
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			741
        Writes: 		99
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest53.exe __orio_perftest53.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest53.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.785188
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 32 must be greater than the stride value 32; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		169
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			381
        Writes: 		61
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest54.exe __orio_perftest54.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest54.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581676
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		178
        Multiplications: 	56
        Divisions: 		0
        Logical: 		0
        Reads: 			398
        Writes: 		76
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest55.exe __orio_perftest55.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest55.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582796
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		333
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			761
        Writes: 		106
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest56.exe __orio_perftest56.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest56.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.688692
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	6
        Max loop nest depth: 	3
        Additions: 		76
        Multiplications: 	20
        Divisions: 		0
        Logical: 		0
        Reads: 			188
        Writes: 		48
        Comparisons:		6
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest57.exe __orio_perftest57.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest57.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.770339
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		166
        Multiplications: 	68
        Divisions: 		0
        Logical: 		0
        Reads: 			393
        Writes: 		53
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest58.exe __orio_perftest58.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest58.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.58104
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		313
        Multiplications: 	120
        Divisions: 		0
        Logical: 		0
        Reads: 			699
        Writes: 		100
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest59.exe __orio_perftest59.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest59.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.779685
Complete design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1173    11   11   11    0   29   0  10    0    3  4.584179
4359     5   11    6   11    0   0  19    0    0  4.580307
13870    5    0   11    9   16   0  29    0    2  4.664915
16030    4    5    0    0    0   0  13    0    2  4.581259
18068    0    0    6   11   14   0  15    0    4  4.580633
19260    0    5    6   11   29   0  29    0    4  4.581510
27361    0    8   11    8    0   0  21    0    5  4.581171
37279    0    0    6    0    0   0   0    0    1  4.748008
37584    5    6    5    6   29   0   1    0    2  4.581203
37710    5    0    0    2   29   0  27    0    5  6.442128
38338    3   11    3    0   16   0   0    0    5  4.785188
42539   11    5    0    5   14   0  13    0    0  4.581676
43209    1    0   11   11   29   0  12    0    0  4.582796
45569    7    6   11   11   19   0   0    0    5  4.688692
46004    0   11    0   11   23   0   0    0    2  4.770339
46315   11    0    0   11    2   0   0    0    4  4.581040
46678   11    6   11    0   23   0  28    0    0  4.779685

Clean design, with measurements:
      T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
1173    11   11   11    0   29   0  10    0    3  4.584179
4359     5   11    6   11    0   0  19    0    0  4.580307
13870    5    0   11    9   16   0  29    0    2  4.664915
16030    4    5    0    0    0   0  13    0    2  4.581259
18068    0    0    6   11   14   0  15    0    4  4.580633
19260    0    5    6   11   29   0  29    0    4  4.581510
27361    0    8   11    8    0   0  21    0    5  4.581171
37279    0    0    6    0    0   0   0    0    1  4.748008
37584    5    6    5    6   29   0   1    0    2  4.581203
37710    5    0    0    2   29   0  27    0    5  6.442128
38338    3   11    3    0   16   0   0    0    5  4.785188
42539   11    5    0    5   14   0  13    0    0  4.581676
43209    1    0   11   11   29   0  12    0    0  4.582796
45569    7    6   11   11   19   0   0    0    5  4.688692
46004    0   11    0   11   23   0   0    0    2  4.770339
46315   11    0    0   11    2   0   0    0    4  4.581040
46678   11    6   11    0   23   0  28    0    0  4.779685

Clean encoded design, with measurements:
           T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie U_Ie       U_Je
1173   0.8333333  0.8333333  0.8333333 -1.0000000  0.93333333   -1 -0.3333333
4359  -0.1666667  0.8333333  0.0000000  0.8333333 -1.00000000   -1  0.2666667
13870 -0.1666667 -1.0000000  0.8333333  0.5000000  0.06666667   -1  0.9333333
16030 -0.3333333 -0.1666667 -1.0000000 -1.0000000 -1.00000000   -1 -0.1333333
18068 -1.0000000 -1.0000000  0.0000000  0.8333333 -0.06666667   -1  0.0000000
19260 -1.0000000 -0.1666667  0.0000000  0.8333333  0.93333333   -1  0.9333333
27361 -1.0000000  0.3333333  0.8333333  0.3333333 -1.00000000   -1  0.4000000
37279 -1.0000000 -1.0000000  0.0000000 -1.0000000 -1.00000000   -1 -1.0000000
37584 -0.1666667  0.0000000 -0.1666667  0.0000000  0.93333333   -1 -0.9333333
37710 -0.1666667 -1.0000000 -1.0000000 -0.6666667  0.93333333   -1  0.8000000
38338 -0.5000000  0.8333333 -0.5000000 -1.0000000  0.06666667   -1 -1.0000000
42539  0.8333333 -0.1666667 -1.0000000 -0.1666667 -0.06666667   -1 -0.1333333
43209 -0.8333333 -1.0000000  0.8333333  0.8333333  0.93333333   -1 -0.2000000
45569  0.1666667  0.0000000  0.8333333  0.8333333  0.26666667   -1 -1.0000000
46004 -1.0000000  0.8333333 -1.0000000  0.8333333  0.53333333   -1 -1.0000000
46315  0.8333333 -1.0000000 -1.0000000  0.8333333 -0.86666667   -1 -1.0000000
46678  0.8333333  0.0000000  0.8333333 -1.0000000  0.53333333   -1  0.8666667
      RT_Ie      RT_Je cost_mean
1173     -1  0.0000000  4.584179
4359     -1 -1.0000000  4.580307
13870    -1 -0.3333333  4.664915
16030    -1 -0.3333333  4.581259
18068    -1  0.3333333  4.580633
19260    -1  0.3333333  4.581510
27361    -1  0.6666667  4.581171
37279    -1 -0.6666667  4.748008
37584    -1 -0.3333333  4.581203
37710    -1  0.6666667  6.442128
38338    -1  0.6666667  4.785188
42539    -1 -1.0000000  4.581676
43209    -1 -1.0000000  4.582796
45569    -1  0.6666667  4.688692
46004    -1 -0.3333333  4.770339
46315    -1  0.3333333  4.581040
46678    -1 -1.0000000  4.779685

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + 
    U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 58 10

Pruned data dimensions: [1] 31 10

Heteroscedasticity Test p-value: 1.19891590862e-07
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
12   10    5    0    7   26   0   0    0    3  4.687052
14    3    0    6   11   24   0  29    0    1  4.666232
15    6    5    0    0   10   0  18    0    0  4.684573
19   11   11   11    0   29   0  10    0    3  4.584179
23   11    9   11    0    0   0  16    0    0  4.580086
24   11    7    0   11    9   0  28    0    5  4.683369
26    7    6    0    6   12   0  12    0    2  4.580971
27    4    3    5   11   28   0   0    0    0  4.684502
28    3    1   11    5    1   0  29    0    0  5.456392
30    6   11    9    0   29   0  29    0    3  4.769586
32    7    0   10    0   16   0  17    0    5  4.767650
37    0    1    5    9    0   0  15    0    3  8.188011
39    0   10    0   11   29   0  17    0    4  4.665016
41    5    5   11    0    0   0   0    0    5  4.581178
42   11   11   11    0   29   0  10    0    3  4.584179
43    5   11    6   11    0   0  19    0    0  4.580307
44    5    0   11    9   16   0  29    0    2  4.664915
45    4    5    0    0    0   0  13    0    2  4.581259
46    0    0    6   11   14   0  15    0    4  4.580633
47    0    5    6   11   29   0  29    0    4  4.581510
48    0    8   11    8    0   0  21    0    5  4.581171
49    0    0    6    0    0   0   0    0    1  4.748008
50    5    6    5    6   29   0   1    0    2  4.581203
51    5    0    0    2   29   0  27    0    5  6.442128
52    3   11    3    0   16   0   0    0    5  4.785188
53   11    5    0    5   14   0  13    0    0  4.581676
54    1    0   11   11   29   0  12    0    0  4.582796
55    7    6   11   11   19   0   0    0    5  4.688692
56    0   11    0   11   23   0   0    0    2  4.770339
57   11    0    0   11    2   0   0    0    4  4.581040
58   11    6   11    0   23   0  28    0    0  4.779685

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value Pr(>F)
I(T1_I^2)    1 7.430e-25 7.432e-25   1.817  0.196
I(T1_J^2)    1 2.630e-25 2.626e-25   0.642  0.435
I(T2_I^2)    1 2.400e-26 2.420e-26   0.059  0.811
I(T2_J^2)    1 8.480e-25 8.481e-25   2.074  0.169
I(U1_I^2)    1 6.900e-26 6.910e-26   0.169  0.687
I(U_J^2)     1 1.246e-24 1.246e-24   3.046  0.100
I(RT_J^2)    1 1.710e-25 1.713e-25   0.419  0.527
T1_I         1 3.600e-26 3.630e-26   0.089  0.770
T1_J         1 7.760e-25 7.763e-25   1.898  0.187
T2_I         1 6.000e-26 5.960e-26   0.146  0.708
T2_J         1 1.870e-25 1.869e-25   0.457  0.509
U1_I         1 7.000e-27 6.700e-27   0.016  0.900
U_J          1 7.920e-25 7.917e-25   1.936  0.183
RT_J         1 4.930e-25 4.930e-25   1.205  0.289
Residuals   16 6.544e-24 4.090e-25               

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:       cost_mean
1173   4.584179
4359   4.580307
13870  4.664915
16030  4.581259
18068  4.580633
19260  4.581510
27361  4.581171
37279  4.748008
37584  4.581203
37710  6.442128
38338  4.785188
42539  4.581676
43209  4.582796
45569  4.688692
46004  4.770339
46315  4.581040
46678  4.779685

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.5267264036600043, 'T1_J': 0.18726029174539577, 'U_J': 0.18318929626059505, 'I(T2_I^2)': 0.8107353024432368, 'U1_I': 0.8998987265236237, 'T2_J': 0.5087360760570039, 'T2_I': 0.7075843298834715, 'I(T2_J^2)': 0.16914643904999116, 'I(U1_I^2)': 0.6865109052112897, 'I(T1_I^2)': 0.19644650827666027, 'I(T1_J^2)': 0.4347531021223603, 'I(U_J^2)': 0.10011619946349307, 'RT_J': 0.28852896479228596, 'T1_I': 0.7696496822558202}
Ordered Keys: 
['I(U_J^2)', 'I(T2_J^2)', 'U_J', 'T1_J', 'I(T1_I^2)', 'RT_J', 'I(T1_J^2)', 'T2_J', 'I(RT_J^2)', 'I(U1_I^2)', 'T2_I', 'T1_I', 'I(T2_I^2)', 'U1_I']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 58 10

Pruned data dimensions: [1] 31 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_J + RT_J, tau = 0.05, data = structure(list(
    T1_I = c(10, 3, 6, 11, 11, 11, 7, 4, 3, 6, 7, 0, 0, 5, 11, 
    5, 5, 4, 0, 0, 0, 0, 5, 5, 3, 11, 1, 7, 0, 11, 11), T1_J = c(5, 
    0, 5, 11, 9, 7, 6, 3, 1, 11, 0, 1, 10, 5, 11, 11, 0, 5, 0, 
    5, 8, 0, 6, 0, 11, 5, 0, 6, 11, 0, 6), T2_I = c(0, 6, 0, 
    11, 11, 0, 0, 5, 11, 9, 10, 5, 0, 11, 11, 6, 11, 0, 6, 6, 
    11, 6, 5, 0, 3, 0, 11, 11, 0, 0, 11), T2_J = c(7, 11, 0, 
    0, 0, 11, 6, 11, 5, 0, 0, 9, 11, 0, 0, 11, 9, 0, 11, 11, 
    8, 0, 6, 2, 0, 5, 11, 11, 11, 11, 0), U1_I = c(26, 24, 10, 
    29, 0, 9, 12, 28, 1, 29, 16, 0, 29, 0, 29, 0, 16, 0, 14, 
    29, 0, 0, 29, 29, 16, 14, 29, 19, 23, 2, 23), U_I = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0), U_J = c(0, 29, 18, 10, 
    16, 28, 12, 0, 29, 29, 17, 15, 17, 0, 10, 19, 29, 13, 15, 
    29, 21, 0, 1, 27, 0, 13, 12, 0, 0, 0, 28), RT_I = c(0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0), RT_J = c(3, 1, 0, 3, 0, 5, 
    2, 0, 0, 3, 5, 3, 4, 5, 3, 0, 2, 2, 4, 4, 5, 1, 2, 5, 5, 
    0, 0, 5, 2, 4, 0), cost_mean = c(4.687052, 4.666232, 4.684573, 
    4.584179, 4.580086, 4.683369, 4.580971, 4.684502, 5.456392, 
    4.769586, 4.76765, 8.188011, 4.665016, 4.581178, 4.584179, 
    4.580307, 4.664915, 4.581259, 4.580633, 4.58151, 4.581171, 
    4.748008, 4.581203, 6.442128, 4.785188, 4.581676, 4.582796, 
    4.688692, 4.770339, 4.58104, 4.779685)), .Names = c("T1_I", 
"T1_J", "T2_I", "T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", 
"cost_mean"), row.names = c(12L, 14L, 15L, 19L, 23L, 24L, 26L, 
27L, 28L, 30L, 32L, 37L, 39L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 
48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.759030e+00 -1.797693e+308   6.220660e+00
I(T1_I^2)    -1.320000e-03 -1.797693e+308  1.797693e+308
I(T1_J^2)     3.980000e-03 -1.797693e+308  1.797693e+308
I(T2_I^2)     1.230000e-03 -1.797693e+308  1.797693e+308
I(T2_J^2)    -2.000000e-03 -1.797693e+308  1.797693e+308
I(U1_I^2)     7.000000e-05 -1.797693e+308  1.797693e+308
I(U_J^2)      3.300000e-04 -1.797693e+308  1.797693e+308
I(RT_J^2)     1.072000e-02 -1.797693e+308  1.797693e+308
T1_I          8.620000e-03 -1.797693e+308  1.797693e+308
T1_J         -4.231000e-02 -1.797693e+308  1.797693e+308
T2_I         -2.378000e-02 -1.797693e+308  1.797693e+308
T2_J          1.285000e-02 -1.797693e+308  1.797693e+308
U1_I          7.000000e-05 -1.797693e+308  1.797693e+308
U_J          -6.530000e-03 -1.797693e+308  1.797693e+308
RT_J         -4.616000e-02 -1.797693e+308  1.797693e+308

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 10828
Valid coordinates: 8160/40800
Tested coordinates: 21524
Valid coordinates: 12240/40800
Tested coordinates: 32213
Valid coordinates: 16320/40800
Tested coordinates: 43121
Valid coordinates: 20400/40800
Tested coordinates: 53821
Valid coordinates: 24480/40800
Tested coordinates: 64281
Valid coordinates: 28560/40800
Tested coordinates: 74852
Valid coordinates: 32640/40800
Tested coordinates: 85434
Valid coordinates: 36720/40800
Tested coordinates: 96027
Valid coordinates: 40800/40800
Tested coordinates: 106526
Valid/Tested configurations: 40800/106526
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 185600      9

Pruned data dimensions: [1] 92415     9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.5267264036600043, 'T1_J': 0.18726029174539577, 'U_J': 0.18318929626059505, 'I(T2_I^2)': 0.8107353024432368, 'U1_I': 0.8998987265236237, 'T2_J': 0.5087360760570039, 'T2_I': 0.7075843298834715, 'I(T2_J^2)': 0.16914643904999116, 'I(U1_I^2)': 0.6865109052112897, 'I(T1_I^2)': 0.19644650827666027, 'I(T1_J^2)': 0.4347531021223603, 'I(U_J^2)': 0.10011619946349307, 'RT_J': 0.28852896479228596, 'T1_I': 0.7696496822558202}
Ordered Keys: 
['I(U_J^2)', 'I(T2_J^2)', 'U_J', 'T1_J', 'I(T1_I^2)', 'RT_J', 'I(T1_J^2)', 'T2_J', 'I(RT_J^2)', 'I(U1_I^2)', 'T2_I', 'T1_I', 'I(T2_I^2)', 'U1_I']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.5267264036600043, 'T1_J': 0.18726029174539577, 'U_J': 0.18318929626059505, 'I(T2_I^2)': 0.8107353024432368, 'U1_I': 0.8998987265236237, 'T2_J': 0.5087360760570039, 'T2_I': 0.7075843298834715, 'I(T2_J^2)': 0.16914643904999116, 'I(U1_I^2)': 0.6865109052112897, 'I(T1_I^2)': 0.19644650827666027, 'I(T1_J^2)': 0.4347531021223603, 'I(U_J^2)': 0.10011619946349307, 'RT_J': 0.28852896479228596, 'T1_I': 0.7696496822558202}
Ordered Keys: 
['I(U_J^2)', 'I(T2_J^2)', 'U_J', 'T1_J', 'I(T1_I^2)', 'RT_J', 'I(T1_J^2)', 'T2_J', 'I(RT_J^2)', 'I(U1_I^2)', 'T2_I', 'T1_I', 'I(T2_I^2)', 'U1_I']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
92033    1    1   11    6   29  22   0    0    4

Best From Design: [5, 11, 6, 11, 0, 0, 19, 0, 0]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753598
Design Best Point:
[5, 11, 6, 11, 0, 0, 19, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.963545297688
Predicted Best Point:
[1, 1, 11, 6, 29, 22, 0, 0, 4]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[1, 1, 11, 6, 29, 22, 0, 0, 4]
Length of requested configs: 1
Code stats:
        Number of loops: 	14
        Max loop nest depth: 	6
        Additions: 		5405
        Multiplications: 	1632
        Divisions: 		0
        Logical: 		0
        Reads: 			8364
        Writes: 		899
        Comparisons:		14
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest60.exe __orio_perftest60.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest60.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.712275
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.963545297688
Slowdown (Predicted Best): 0.991307005767
Budget: 58/1000
Best point from design was better than predicted point
Current Best Point: 
[2, 5, 6, 0, 16, 0, 0, 2, 1]
Step 3
Generating valid search space of size 13600 (does not spend evaluations)
Valid coordinates: 1360/13600
Tested coordinates: 3671
Valid coordinates: 2720/13600
Tested coordinates: 7163
Valid coordinates: 4080/13600
Tested coordinates: 10776
Valid coordinates: 5440/13600
Tested coordinates: 14177
Valid coordinates: 6800/13600
Tested coordinates: 17655
Valid coordinates: 8160/13600
Tested coordinates: 21132
Valid coordinates: 9520/13600
Tested coordinates: 24754
Valid coordinates: 10880/13600
Tested coordinates: 28372
Valid coordinates: 12240/13600
Tested coordinates: 32016
Valid coordinates: 13600/13600
Tested coordinates: 35542
Valid/Tested configurations: 13600/35542
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 199200      9

Pruned data dimensions: [1] 106015      9

Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Clean Info:
One-Level Factors: ['U_I', 'RT_I']
Two-Level Factors: ['U_I', 'RT_I']
Three-Level Factors: ['U_I', 'RT_I']
One-Level Terms: ['(Intercept)']
Two-Level Terms: ['(Intercept)']
Three-Level Terms: ['(Intercept)']
Model Quadratic: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J']
Clean 2 Level Factors/Terms: ['U_I', 'RT_I', '(Intercept)']
Model Cubic: []
Clean 3 Level Factors/Terms: ['U_I', 'RT_I', '(Intercept)']
Updated Model Info: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Updated Full Model: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Computing D-Optimal Design
Computing D-Optimal Design with 17 experiments
Design Formula: ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Encoded model used in optFederov: ~ I(T1_Ie ^ 2) + I(T1_Je ^ 2) + I(T2_Ie ^ 2) + I(T2_Je ^ 2) + I(U1_Ie ^ 2) + I(U_Je ^ 2) + I(RT_Je ^ 2) + T1_Ie + T1_Je + T2_Ie + T2_Je + U1_Ie + U_Je + RT_Je
Starting "optFederov" run
Using Search Space:
NULL
Encoding formulas: NULL
Data Dimensions: [1] 106015      9

Coded data: NULL
       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
8567      0   11    5    0   10   0  14    0    0
9025     11    4    0   10   28   0  13    0    5
12173    11    0    0    3    2   0   0    0    3
27721     5    4   11    0   15   0   0    0    5
32385     0    2   11    8    0   0  29    0    5
41232     6   11    0   11   20   0  28    0    3
49349    10   11   10   11    0   0   2    0    5
54557     6    0   11    7   29   0  10    0    0
54566     0    0   11   11   11   0  11    0    3
57500     0    6    0    6   22   0   0    0    0
62751     4    0    7    0   29   0  29    0    0
70817     0    0    5    5   19   0  29    0    5
75030     5    5    6    6    0   0  18    0    3
76404     0   11   11    0   29   0  19    0    3
77020     0    5    6   11   28   0   0    0    3
84896    11    6   11    9   16   0  29    0    1
100604    1    5    0   11    0   0  29    0    0

D-Efficiency Approximation: [1] 0.2671003

Measuring design of size 17
Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		174
        Multiplications: 	64
        Divisions: 		0
        Logical: 		0
        Reads: 			393
        Writes: 		59
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest61.exe __orio_perftest61.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest61.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580557
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		473
        Multiplications: 	188
        Divisions: 		0
        Logical: 		0
        Reads: 			1063
        Writes: 		143
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest62.exe __orio_perftest62.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest62.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.596817
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		94
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			233
        Writes: 		37
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest63.exe __orio_perftest63.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest63.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584649
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		326
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			746
        Writes: 		100
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest64.exe __orio_perftest64.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest64.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.679126
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		584
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1318
        Writes: 		144
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest65.exe __orio_perftest65.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest65.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 7.085995
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		381
        Multiplications: 	152
        Divisions: 		0
        Logical: 		0
        Reads: 			860
        Writes: 		115
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest66.exe __orio_perftest66.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest66.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581831
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 1024 must be greater than the stride value 1024; tile index = iii
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = jjj
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		338
        Multiplications: 	144
        Divisions: 		0
        Logical: 		0
        Reads: 			771
        Writes: 		88
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest67.exe __orio_perftest67.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest67.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.583229
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		160
        Multiplications: 	48
        Divisions: 		0
        Logical: 		0
        Reads: 			358
        Writes: 		72
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest68.exe __orio_perftest68.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest68.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581272
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		219
        Multiplications: 	84
        Divisions: 		0
        Logical: 		0
        Reads: 			502
        Writes: 		72
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest69.exe __orio_perftest69.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest69.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581976
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 64 must be greater than the stride value 64; tile index = jjj
Code stats:
        Number of loops: 	5
        Max loop nest depth: 	3
        Additions: 		40
        Multiplications: 	4
        Divisions: 		0
        Logical: 		0
        Reads: 			99
        Writes: 		37
        Comparisons:		5
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest70.exe __orio_perftest70.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest70.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.584684
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	4
        Additions: 		320
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			727
        Writes: 		108
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest71.exe __orio_perftest71.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest71.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580204
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		605
        Multiplications: 	252
        Divisions: 		0
        Logical: 		0
        Reads: 			1358
        Writes: 		164
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest72.exe __orio_perftest72.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest72.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.581407
Length of requested configs: 1
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	6
        Additions: 		272
        Multiplications: 	112
        Divisions: 		0
        Logical: 		0
        Reads: 			625
        Writes: 		76
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest73.exe __orio_perftest73.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest73.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.590492
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	4
        Additions: 		309
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			698
        Writes: 		106
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest74.exe __orio_perftest74.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest74.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.771779
Length of requested configs: 1
Code stats:
        Number of loops: 	8
        Max loop nest depth: 	5
        Additions: 		123
        Multiplications: 	36
        Divisions: 		0
        Logical: 		0
        Reads: 			292
        Writes: 		65
        Comparisons:		8
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest75.exe __orio_perftest75.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest75.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.582913
Length of requested configs: 1
WARNING: orio.module.loop.submodule.tile.transformation: tile size 2048 must be greater than the stride value 2048; tile index = iii
Code stats:
        Number of loops: 	9
        Max loop nest depth: 	5
        Additions: 		335
        Multiplications: 	132
        Divisions: 		0
        Logical: 		0
        Reads: 			759
        Writes: 		103
        Comparisons:		9
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest76.exe __orio_perftest76.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest76.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.580771
Length of requested configs: 1
Code stats:
        Number of loops: 	7
        Max loop nest depth: 	5
        Additions: 		297
        Multiplications: 	124
        Divisions: 		0
        Logical: 		0
        Reads: 			671
        Writes: 		78
        Comparisons:		7
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest77.exe __orio_perftest77.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest77.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 4.665238
Complete design, with measurements:
       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
8567      0   11    5    0   10   0  14    0    0  4.580557
9025     11    4    0   10   28   0  13    0    5  4.596817
12173    11    0    0    3    2   0   0    0    3  4.584649
27721     5    4   11    0   15   0   0    0    5  4.679126
32385     0    2   11    8    0   0  29    0    5  7.085995
41232     6   11    0   11   20   0  28    0    3  4.581831
49349    10   11   10   11    0   0   2    0    5  4.583229
54557     6    0   11    7   29   0  10    0    0  4.581272
54566     0    0   11   11   11   0  11    0    3  4.581976
57500     0    6    0    6   22   0   0    0    0  4.584684
62751     4    0    7    0   29   0  29    0    0  4.580204
70817     0    0    5    5   19   0  29    0    5  4.581407
75030     5    5    6    6    0   0  18    0    3  4.590492
76404     0   11   11    0   29   0  19    0    3  4.771779
77020     0    5    6   11   28   0   0    0    3  4.582913
84896    11    6   11    9   16   0  29    0    1  4.580771
100604    1    5    0   11    0   0  29    0    0  4.665238

Clean design, with measurements:
       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
8567      0   11    5    0   10   0  14    0    0  4.580557
9025     11    4    0   10   28   0  13    0    5  4.596817
12173    11    0    0    3    2   0   0    0    3  4.584649
27721     5    4   11    0   15   0   0    0    5  4.679126
32385     0    2   11    8    0   0  29    0    5  7.085995
41232     6   11    0   11   20   0  28    0    3  4.581831
49349    10   11   10   11    0   0   2    0    5  4.583229
54557     6    0   11    7   29   0  10    0    0  4.581272
54566     0    0   11   11   11   0  11    0    3  4.581976
57500     0    6    0    6   22   0   0    0    0  4.584684
62751     4    0    7    0   29   0  29    0    0  4.580204
70817     0    0    5    5   19   0  29    0    5  4.581407
75030     5    5    6    6    0   0  18    0    3  4.590492
76404     0   11   11    0   29   0  19    0    3  4.771779
77020     0    5    6   11   28   0   0    0    3  4.582913
84896    11    6   11    9   16   0  29    0    1  4.580771
100604    1    5    0   11    0   0  29    0    0  4.665238

Clean encoded design, with measurements:
            T1_Ie      T1_Je      T2_Ie      T2_Je       U1_Ie U_Ie        U_Je
8567   -1.0000000  0.8333333 -0.1666667 -1.0000000 -0.33333333   -1 -0.06666667
9025    0.8333333 -0.3333333 -1.0000000  0.6666667  0.86666667   -1 -0.13333333
12173   0.8333333 -1.0000000 -1.0000000 -0.5000000 -0.86666667   -1 -1.00000000
27721  -0.1666667 -0.3333333  0.8333333 -1.0000000  0.00000000   -1 -1.00000000
32385  -1.0000000 -0.6666667  0.8333333  0.3333333 -1.00000000   -1  0.93333333
41232   0.0000000  0.8333333 -1.0000000  0.8333333  0.33333333   -1  0.86666667
49349   0.6666667  0.8333333  0.6666667  0.8333333 -1.00000000   -1 -0.86666667
54557   0.0000000 -1.0000000  0.8333333  0.1666667  0.93333333   -1 -0.33333333
54566  -1.0000000 -1.0000000  0.8333333  0.8333333 -0.26666667   -1 -0.26666667
57500  -1.0000000  0.0000000 -1.0000000  0.0000000  0.46666667   -1 -1.00000000
62751  -0.3333333 -1.0000000  0.1666667 -1.0000000  0.93333333   -1  0.93333333
70817  -1.0000000 -1.0000000 -0.1666667 -0.1666667  0.26666667   -1  0.93333333
75030  -0.1666667 -0.1666667  0.0000000  0.0000000 -1.00000000   -1  0.20000000
76404  -1.0000000  0.8333333  0.8333333 -1.0000000  0.93333333   -1  0.26666667
77020  -1.0000000 -0.1666667  0.0000000  0.8333333  0.86666667   -1 -1.00000000
84896   0.8333333  0.0000000  0.8333333  0.5000000  0.06666667   -1  0.93333333
100604 -0.8333333 -0.1666667 -1.0000000  0.8333333 -1.00000000   -1  0.93333333
       RT_Ie      RT_Je cost_mean
8567      -1 -1.0000000  4.580557
9025      -1  0.6666667  4.596817
12173     -1  0.0000000  4.584649
27721     -1  0.6666667  4.679126
32385     -1  0.6666667  7.085995
41232     -1  0.0000000  4.581831
49349     -1  0.6666667  4.583229
54557     -1 -1.0000000  4.581272
54566     -1  0.0000000  4.581976
57500     -1 -1.0000000  4.584684
62751     -1 -1.0000000  4.580204
70817     -1  0.6666667  4.581407
75030     -1  0.0000000  4.590492
76404     -1  0.0000000  4.771779
77020     -1  0.0000000  4.582913
84896     -1 -0.6666667  4.580771
100604    -1 -1.0000000  4.665238

Anova Formula in Python: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Anova Formula in R: cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + I(T2_J^2) + I(U1_I^2) + 
    I(U_J^2) + I(RT_J^2) + T1_I + T1_J + T2_I + T2_J + U1_I + 
    U_J + RT_J

Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 75 10

Pruned data dimensions: [1] 48 10

Heteroscedasticity Test p-value: 6.16315901696e-15
Heteroscedasticity transform required.
Power Transform Step:
Current Response: cost_mean
Current Variables: I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Current Design:    T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J cost_mean
12   10    5    0    7   26   0   0    0    3  4.687052
14    3    0    6   11   24   0  29    0    1  4.666232
15    6    5    0    0   10   0  18    0    0  4.684573
19   11   11   11    0   29   0  10    0    3  4.584179
23   11    9   11    0    0   0  16    0    0  4.580086
24   11    7    0   11    9   0  28    0    5  4.683369
26    7    6    0    6   12   0  12    0    2  4.580971
27    4    3    5   11   28   0   0    0    0  4.684502
28    3    1   11    5    1   0  29    0    0  5.456392
30    6   11    9    0   29   0  29    0    3  4.769586
32    7    0   10    0   16   0  17    0    5  4.767650
37    0    1    5    9    0   0  15    0    3  8.188011
39    0   10    0   11   29   0  17    0    4  4.665016
41    5    5   11    0    0   0   0    0    5  4.581178
42   11   11   11    0   29   0  10    0    3  4.584179
43    5   11    6   11    0   0  19    0    0  4.580307
44    5    0   11    9   16   0  29    0    2  4.664915
45    4    5    0    0    0   0  13    0    2  4.581259
46    0    0    6   11   14   0  15    0    4  4.580633
47    0    5    6   11   29   0  29    0    4  4.581510
48    0    8   11    8    0   0  21    0    5  4.581171
49    0    0    6    0    0   0   0    0    1  4.748008
50    5    6    5    6   29   0   1    0    2  4.581203
51    5    0    0    2   29   0  27    0    5  6.442128
52    3   11    3    0   16   0   0    0    5  4.785188
53   11    5    0    5   14   0  13    0    0  4.581676
54    1    0   11   11   29   0  12    0    0  4.582796
55    7    6   11   11   19   0   0    0    5  4.688692
56    0   11    0   11   23   0   0    0    2  4.770339
57   11    0    0   11    2   0   0    0    4  4.581040
58   11    6   11    0   23   0  28    0    0  4.779685
59    0   11    5    0   10   0  14    0    0  4.580557
60   11    4    0   10   28   0  13    0    5  4.596817
61   11    0    0    3    2   0   0    0    3  4.584649
62    5    4   11    0   15   0   0    0    5  4.679126
63    0    2   11    8    0   0  29    0    5  7.085995
64    6   11    0   11   20   0  28    0    3  4.581831
65   10   11   10   11    0   0   2    0    5  4.583229
66    6    0   11    7   29   0  10    0    0  4.581272
67    0    0   11   11   11   0  11    0    3  4.581976
68    0    6    0    6   22   0   0    0    0  4.584684
69    4    0    7    0   29   0  29    0    0  4.580204
70    0    0    5    5   19   0  29    0    5  4.581407
71    5    5    6    6    0   0  18    0    3  4.590492
72    0   11   11    0   29   0  19    0    3  4.771779
73    0    5    6   11   28   0   0    0    3  4.582913
74   11    6   11    9   16   0  29    0    1  4.580771
75    1    5    0   11    0   0  29    0    0  4.665238

Power Transform Successful
Regression Step:            Df    Sum Sq   Mean Sq F value Pr(>F)  
I(T1_I^2)    1 3.580e-25 3.578e-25   2.512 0.1225  
I(T1_J^2)    1 6.300e-26 6.350e-26   0.446 0.5089  
I(T2_I^2)    1 3.900e-26 3.860e-26   0.271 0.6061  
I(T2_J^2)    1 1.960e-25 1.956e-25   1.374 0.2495  
I(U1_I^2)    1 6.000e-27 5.900e-27   0.041 0.8400  
I(U_J^2)     1 4.320e-25 4.322e-25   3.035 0.0908 .
I(RT_J^2)    1 2.610e-25 2.613e-25   1.835 0.1847  
T1_I         1 3.000e-27 2.900e-27   0.020 0.8871  
T1_J         1 4.800e-26 4.780e-26   0.335 0.5664  
T2_I         1 1.660e-25 1.657e-25   1.164 0.2885  
T2_J         1 1.000e-27 5.000e-28   0.004 0.9530  
U1_I         1 8.600e-26 8.600e-26   0.604 0.4425  
U_J          1 1.600e-25 1.600e-25   1.124 0.2968  
RT_J         1 3.000e-27 3.100e-27   0.022 0.8840  
Residuals   33 4.699e-24 1.424e-25                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Getting Best from Design
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Design Names:  [1] "T1_I"      "T1_J"      "T2_I"      "T2_J"      "U1_I"      "U_I"      
 [7] "U_J"       "RT_I"      "RT_J"      "cost_mean"

Design Response:        cost_mean
8567    4.580557
9025    4.596817
12173   4.584649
27721   4.679126
32385   7.085995
41232   4.581831
49349   4.583229
54557   4.581272
54566   4.581976
57500   4.584684
62751   4.580204
70817   4.581407
75030   4.590492
76404   4.771779
77020   4.582913
84896   4.580771
100604  4.665238

Current Design Names: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Initial Factors: ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_I', 'U_J', 'RT_I', 'RT_J']
Getting fixed Model Terms
Prf Values: 
{'I(RT_J^2)': 0.18474324617127832, 'T1_J': 0.5664136289927999, 'U_J': 0.2968169025323928, 'I(T2_I^2)': 0.6061063772098139, 'U1_I': 0.44250512580137935, 'T2_J': 0.9530114186211904, 'T2_I': 0.2885420964571126, 'I(T2_J^2)': 0.2495351581679819, 'I(U1_I^2)': 0.8399543949385373, 'I(T1_I^2)': 0.12248567666518331, 'I(T1_J^2)': 0.508917539391901, 'I(U_J^2)': 0.09078251986924857, 'RT_J': 0.8839716598983881, 'T1_I': 0.8871230474407132}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'I(RT_J^2)', 'I(T2_J^2)', 'T2_I', 'U_J', 'U1_I', 'I(T1_J^2)', 'T1_J', 'I(T2_I^2)', 'I(U1_I^2)', 'RT_J', 'T1_I', 'T2_J']
No variables within acceptable threshold
Predicting Best Values for: []
No variables in threshold
Using Model: cost_mean ~ I(T1_I ^ 2) + I(T1_J ^ 2) + I(T2_I ^ 2) + I(T2_J ^ 2) + I(U1_I ^ 2) + I(U_J ^ 2) + I(RT_J ^ 2) + T1_I + T1_J + T2_I + T2_J + U1_I + U_J + RT_J
Using Complete Design Data.
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 75 10

Pruned data dimensions: [1] 48 10

Prediction Regression Step:
Call: (function (formula, tau = 0.5, data, subset, weights, na.action, 
    method = "br", model = TRUE, contrasts = NULL, ...) 
{
    call <- match.call()
    mf <- match.call(expand.dots = FALSE)
    m <- match(c("formula", "data", "subset", "weights", "na.action"), 
        names(mf), 0)
    mf <- mf[c(1, m)]
    mf$drop.unused.levels <- TRUE
    mf[[1]] <- as.name("model.frame")
    mf <- eval.parent(mf)
    if (method == "model.frame") 
        return(mf)
    mt <- attr(mf, "terms")
    weights <- as.vector(model.weights(mf))
    Y <- model.response(mf)
    if (method == "sfn") {
        if (requireNamespace("MatrixModels") && requireNamespace("Matrix")) {
            X <- MatrixModels::model.Matrix(mt, data, sparse = TRUE)
            vnames <- dimnames(X)[[2]]
            X <- as(X, "matrix.csr")
            mf$x <- X
        }
    }
    else X <- model.matrix(mt, mf, contrasts)
    eps <- .Machine$double.eps^(2/3)
    Rho <- function(u, tau) u * (tau - (u < 0))
    if (length(tau) > 1) {
        if (any(tau < 0) || any(tau > 1)) 
            stop("invalid tau:  taus should be >= 0 and <= 1")
        if (any(tau == 0)) 
            tau[tau == 0] <- eps
        if (any(tau == 1)) 
            tau[tau == 1] <- 1 - eps
        coef <- matrix(0, ncol(X), length(tau))
        rho <- rep(0, length(tau))
        fitted <- resid <- matrix(0, nrow(X), length(tau))
        for (i in 1:length(tau)) {
            z <- {
                if (length(weights)) 
                  rq.wfit(X, Y, tau = tau[i], weights, method, 
                    ...)
                else rq.fit(X, Y, tau = tau[i], method, ...)
            }
            coef[, i] <- z$coefficients
            resid[, i] <- z$residuals
            rho[i] <- sum(Rho(z$residuals, tau[i]))
            fitted[, i] <- Y - z$residuals
        }
        taulabs <- paste("tau=", format(round(tau, 3)))
        dimnames(coef) <- list(dimnames(X)[[2]], taulabs)
        dimnames(resid) <- list(dimnames(X)[[1]], taulabs)
        fit <- z
        fit$coefficients <- coef
        fit$residuals <- resid
        fit$fitted.values <- fitted
        if (method == "lasso") 
            class(fit) <- c("lassorqs", "rqs")
        else if (method == "scad") 
            class(fit) <- c("scadrqs", "rqs")
        else class(fit) <- "rqs"
    }
    else {
        process <- (tau < 0 || tau > 1)
        if (tau == 0) 
            tau <- eps
        if (tau == 1) 
            tau <- 1 - eps
        fit <- {
            if (length(weights)) 
                rq.wfit(X, Y, tau = tau, weights, method, ...)
            else rq.fit(X, Y, tau = tau, method, ...)
        }
        if (process) 
            rho <- list(x = fit$sol[1, ], y = fit$sol[3, ])
        else {
            if (length(dim(fit$residuals))) 
                dimnames(fit$residuals) <- list(dimnames(X)[[1]], 
                  NULL)
            rho <- sum(Rho(fit$residuals, tau))
        }
        if (method == "lasso") 
            class(fit) <- c("lassorq", "rq")
        else if (method == "scad") 
            class(fit) <- c("scadrq", "rq")
        else class(fit) <- ifelse(process, "rq.process", "rq")
    }
    fit$na.action <- attr(mf, "na.action")
    fit$formula <- formula
    fit$terms <- mt
    fit$xlevels <- .getXlevels(mt, mf)
    fit$call <- call
    fit$tau <- tau
    fit$weights <- weights
    fit$residuals <- drop(fit$residuals)
    fit$rho <- rho
    fit$method <- method
    fit$fitted.values <- drop(fit$fitted.values)
    attr(fit, "na.message") <- attr(m, "na.message")
    if (model) 
        fit$model <- mf
    fit
})(formula = cost_mean ~ I(T1_I^2) + I(T1_J^2) + I(T2_I^2) + 
    I(T2_J^2) + I(U1_I^2) + I(U_J^2) + I(RT_J^2) + T1_I + T1_J + 
    T2_I + T2_J + U1_I + U_J + RT_J, tau = 0.05, data = structure(list(
    T1_I = c(10, 3, 6, 11, 11, 11, 7, 4, 3, 6, 7, 0, 0, 5, 11, 
    5, 5, 4, 0, 0, 0, 0, 5, 5, 3, 11, 1, 7, 0, 11, 11, 0, 11, 
    11, 5, 0, 6, 10, 6, 0, 0, 4, 0, 5, 0, 0, 11, 1), T1_J = c(5, 
    0, 5, 11, 9, 7, 6, 3, 1, 11, 0, 1, 10, 5, 11, 11, 0, 5, 0, 
    5, 8, 0, 6, 0, 11, 5, 0, 6, 11, 0, 6, 11, 4, 0, 4, 2, 11, 
    11, 0, 0, 6, 0, 0, 5, 11, 5, 6, 5), T2_I = c(0, 6, 0, 11, 
    11, 0, 0, 5, 11, 9, 10, 5, 0, 11, 11, 6, 11, 0, 6, 6, 11, 
    6, 5, 0, 3, 0, 11, 11, 0, 0, 11, 5, 0, 0, 11, 11, 0, 10, 
    11, 11, 0, 7, 5, 6, 11, 6, 11, 0), T2_J = c(7, 11, 0, 0, 
    0, 11, 6, 11, 5, 0, 0, 9, 11, 0, 0, 11, 9, 0, 11, 11, 8, 
    0, 6, 2, 0, 5, 11, 11, 11, 11, 0, 0, 10, 3, 0, 8, 11, 11, 
    7, 11, 6, 0, 5, 6, 0, 11, 9, 11), U1_I = c(26, 24, 10, 29, 
    0, 9, 12, 28, 1, 29, 16, 0, 29, 0, 29, 0, 16, 0, 14, 29, 
    0, 0, 29, 29, 16, 14, 29, 19, 23, 2, 23, 10, 28, 2, 15, 0, 
    20, 0, 29, 11, 22, 29, 19, 0, 29, 28, 16, 0), U_I = c(0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0), U_J = c(0, 29, 18, 10, 16, 28, 
    12, 0, 29, 29, 17, 15, 17, 0, 10, 19, 29, 13, 15, 29, 21, 
    0, 1, 27, 0, 13, 12, 0, 0, 0, 28, 14, 13, 0, 0, 29, 28, 2, 
    10, 11, 0, 29, 29, 18, 19, 0, 29, 29), RT_I = c(0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0), RT_J = c(3, 1, 0, 3, 0, 5, 2, 0, 0, 
    3, 5, 3, 4, 5, 3, 0, 2, 2, 4, 4, 5, 1, 2, 5, 5, 0, 0, 5, 
    2, 4, 0, 0, 5, 3, 5, 5, 3, 5, 0, 3, 0, 0, 5, 3, 3, 3, 1, 
    0), cost_mean = c(4.687052, 4.666232, 4.684573, 4.584179, 
    4.580086, 4.683369, 4.580971, 4.684502, 5.456392, 4.769586, 
    4.76765, 8.188011, 4.665016, 4.581178, 4.584179, 4.580307, 
    4.664915, 4.581259, 4.580633, 4.58151, 4.581171, 4.748008, 
    4.581203, 6.442128, 4.785188, 4.581676, 4.582796, 4.688692, 
    4.770339, 4.58104, 4.779685, 4.580557, 4.596817, 4.584649, 
    4.679126, 7.085995, 4.581831, 4.583229, 4.581272, 4.581976, 
    4.584684, 4.580204, 4.581407, 4.590492, 4.771779, 4.582913, 
    4.580771, 4.665238)), .Names = c("T1_I", "T1_J", "T2_I", 
"T2_J", "U1_I", "U_I", "U_J", "RT_I", "RT_J", "cost_mean"), row.names = c(12L, 
14L, 15L, 19L, 23L, 24L, 26L, 27L, 28L, 30L, 32L, 37L, 39L, 41L, 
42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 
55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 
68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L), class = "data.frame"))

tau: [1] 0.05

Coefficients:
            coefficients   lower bd       upper bd      
(Intercept)   4.582770e+00 -1.797693e+308   4.742650e+00
I(T1_I^2)     5.000000e-05  -1.090000e-02  1.797693e+308
I(T1_J^2)     0.000000e+00  -2.720000e-03   2.164000e-02
I(T2_I^2)     1.000000e-04  -1.383000e-02  1.797693e+308
I(T2_J^2)     1.000000e-05  -5.000000e-05  1.797693e+308
I(U1_I^2)     0.000000e+00  -3.500000e-04  1.797693e+308
I(U_J^2)      0.000000e+00  -6.100000e-04  1.797693e+308
I(RT_J^2)     2.000000e-05  -2.734000e-02  1.797693e+308
T1_I         -6.500000e-04 -1.797693e+308   7.205000e-02
T1_J          2.000000e-05  -2.145800e-01   4.444000e-02
T2_I         -1.130000e-03 -1.797693e+308   2.025100e-01
T2_J         -2.300000e-04 -1.797693e+308   1.200000e-03
U1_I          1.600000e-04 -1.797693e+308   1.409200e-01
U_J          -8.000000e-05 -1.797693e+308  1.797693e+308
RT_J          1.500000e-04 -1.797693e+308   4.201600e-01

Generating valid search space of size 40800 (does not spend evaluations)
Valid coordinates: 4080/40800
Tested coordinates: 10674
Valid coordinates: 8160/40800
Tested coordinates: 21448
Valid coordinates: 12240/40800
Tested coordinates: 32078
Valid coordinates: 16320/40800
Tested coordinates: 42744
Valid coordinates: 20400/40800
Tested coordinates: 53417
Valid coordinates: 24480/40800
Tested coordinates: 64074
Valid coordinates: 28560/40800
Tested coordinates: 74765
Valid coordinates: 32640/40800
Tested coordinates: 85216
Valid coordinates: 36720/40800
Tested coordinates: 96068
Valid coordinates: 40800/40800
Tested coordinates: 106635
Valid/Tested configurations: 40800/106635
Generated Search Space:
NULL
Pruning Data for optFederov
Pruned data:
NULL
Initial data dimensions: [1] 240000      9

Pruned data dimensions: [1] 146815      9

Getting fixed variables
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.18474324617127832, 'T1_J': 0.5664136289927999, 'U_J': 0.2968169025323928, 'I(T2_I^2)': 0.6061063772098139, 'U1_I': 0.44250512580137935, 'T2_J': 0.9530114186211904, 'T2_I': 0.2885420964571126, 'I(T2_J^2)': 0.2495351581679819, 'I(U1_I^2)': 0.8399543949385373, 'I(T1_I^2)': 0.12248567666518331, 'I(T1_J^2)': 0.508917539391901, 'I(U_J^2)': 0.09078251986924857, 'RT_J': 0.8839716598983881, 'T1_I': 0.8871230474407132}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'I(RT_J^2)', 'I(T2_J^2)', 'T2_I', 'U_J', 'U1_I', 'I(T1_J^2)', 'T1_J', 'I(T2_I^2)', 'I(U1_I^2)', 'RT_J', 'T1_I', 'T2_J']
No variables within acceptable threshold
Unique Variables: []
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Pruning Model
Getting fixed variables
Prf Values: 
{'I(RT_J^2)': 0.18474324617127832, 'T1_J': 0.5664136289927999, 'U_J': 0.2968169025323928, 'I(T2_I^2)': 0.6061063772098139, 'U1_I': 0.44250512580137935, 'T2_J': 0.9530114186211904, 'T2_I': 0.2885420964571126, 'I(T2_J^2)': 0.2495351581679819, 'I(U1_I^2)': 0.8399543949385373, 'I(T1_I^2)': 0.12248567666518331, 'I(T1_J^2)': 0.508917539391901, 'I(U_J^2)': 0.09078251986924857, 'RT_J': 0.8839716598983881, 'T1_I': 0.8871230474407132}
Ordered Keys: 
['I(U_J^2)', 'I(T1_I^2)', 'I(RT_J^2)', 'I(T2_J^2)', 'T2_I', 'U_J', 'U1_I', 'I(T1_J^2)', 'T1_J', 'I(T2_I^2)', 'I(U1_I^2)', 'RT_J', 'T1_I', 'T2_J']
No variables within acceptable threshold
Best Predicted:       T1_I T1_J T2_I T2_J U1_I U_I U_J RT_I RT_J
47083    0    6   11   11    4  25   0    1    0

Best From Design: [4, 0, 7, 0, 29, 0, 29, 0, 0]
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Length of requested configs: 1
Result was on Database, Returning Now
Baseline Point:
4.753598
Design Best Point:
[4, 0, 7, 0, 29, 0, 29, 0, 0]
Length of requested configs: 1
Result was on Database, Returning Now
Slowdown (Design Best): 0.96352362989
Predicted Best Point:
[0, 6, 11, 11, 4, 25, 0, 1, 0]
Length of Predicted Best: 9
Original Factor Length: 9
Measuring Predicted Best:
[0, 6, 11, 11, 4, 25, 0, 1, 0]
Length of requested configs: 1
Code stats:
        Number of loops: 	15
        Max loop nest depth: 	5
        Additions: 		328
        Multiplications: 	116
        Divisions: 		0
        Logical: 		0
        Reads: 			747
        Writes: 		122
        Comparisons:		15
        Gotos: 			0
        
 building test:
	timeout --kill-after=30s --signal=9 30m gcc -O3 -fopenmp -DDYNAMIC  -DORIO_REPS=10 -o __orio_perftest78.exe __orio_perftest78.c timer_cpu.o -lm -lrt
 running test:
	timeout --kill-after=30s --signal=9 20m  ./__orio_perftest78.exe  
Test was successful
Stored as a sucessful configuration
Final perf_costs: 3.5635
Current Model: {'inverse': [], 'linear': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'cubic': [], 'interactions': [], 'fixed_factors': {'U_I': 0, 'RT_I': 0}, 'quadratic': ['T1_I', 'T1_J', 'T2_I', 'T2_J', 'U1_I', 'U_J', 'RT_J'], 'response': 'cost_mean'}
Slowdown (Design Best): 0.96352362989
Slowdown (Predicted Best): 0.749642691704
Budget: 75/1000
Current Best Point: 
[2, 5, 6, 0, 16, 0, 0, 2, 1]
Final Best Point: 
[2, 5, 6, 0, 16, 0, 0, 2, 1]
Ending DLMT
Best Point: [2, 5, 6, 0, 16, 0, 0, 2, 1]
Length of requested configs: 1
Result was on Database, Returning Now
Length of requested configs: 1
Result was on Database, Returning Now
Speedup: 1.47338081777
----- end DLMT -----
----- begin DLMT summary -----
 total completed runs: 0
 total successful runs: 0
 total failed runs: 0
 speedup: 1.47338081777
----- end DLMT summary -----
----- begin summary -----
 best coordinate: [2, 5, 6, 0, 16, 0, 0, 2, 1]={'T1_I': 4, 'T1_J': 32, 'U_J': 1, 'U_I': 1, 'T2_I': 64, 'T2_J': 1, 'U1_I': 17, 'RT_I': 4, 'RT_J': 2}, cost=3.226320e+00, transfer_time=inf, inputs=[('N', 40000)], search_time=-9036.21, runs=78
----- end summary -----
Length of requested configs: 1
Result was on Database, Returning Now
----- the obtained best performance parameters -----
 RT_I = 4
 RT_J = 2
 T1_I = 4
 T1_J = 32
 T2_I = 64
 T2_J = 1
 U1_I = 17
 U_I = 1
 U_J = 1
 cost_mean = 3.22632
 points = 78
 speedup = 1.47338081777
 step = 4
 technique = DLMT
Code stats:
        Number of loops: 	12
        Max loop nest depth: 	5
        Additions: 		183
        Multiplications: 	60
        Divisions: 		0
        Logical: 		0
        Reads: 			416
        Writes: 		74
        Comparisons:		12
        Gotos: 			0
        
----- finish optimizations -----

----- begin removing annotations from output-----
----- finished removing annotations from output-----

----- begin writing the output file(s) -----
--> writing output to: _bicgkernel_no_binary.c
----- finished writing the output file(s) -----

====== END ORIO ======
